{"version":3,"sources":["serviceWorker.js","components/misc/pages/ErrorBoundary.js","configs/Ability.js","configs/Ability-context.js","components/misc/pages/NotFound.jsx","components/auth/pages/Login.jsx","components/auth/SecuredLogin.js","components/misc/components/MyOwnSelect.jsx","components/misc/components/WelcomeVendorModal.jsx","components/vendors/pages/SignUp.jsx","components/vendors/SecuredSignupVendor.js","components/vendors/pages/EditVendor.jsx","components/vendors/SecuredEditVendor.js","components/misc/components/DeleteModal.jsx","components/misc/components/MyOwnListing.jsx","components/misc/pages/AllPersons.jsx","components/vendors/pages/AllVendors.jsx","components/vendors/SecuredAllVendors.js","components/vendors/Vendors.jsx","components/home/pages/Home.jsx","components/home/SecuredHome.js","components/users/pages/NewUser.jsx","components/users/SecuredNewUser.js","components/users/pages/AllUsers.jsx","components/users/SecuredAllUsers.js","components/users/pages/EditUser.jsx","components/users/SecuredEditUser.js","components/users/roles/pages/NewRole.jsx","components/users/roles/SecuredNewRole.js","components/users/roles/pages/AllRoles.jsx","components/users/roles/SecuredAllRoles.js","components/users/roles/pages/EditRole.jsx","components/users/roles/SecuredEditRole.js","components/users/roles/Roles.jsx","components/users/Users.jsx","components/products/pages/NewProduct.jsx","components/products/SecuredNewProduct.js","components/products/pages/AllProducts.jsx","components/products/SecuredAllProducts.js","components/products/pages/EditProduct.jsx","components/products/SecuredEditProduct.js","components/products/categories/pages/NewProductCategory.jsx","components/products/categories/SecuredNewProductCategory.js","components/products/categories/pages/AllProductCategories.jsx","components/products/categories/SecuredAllProductCategories.js","components/products/categories/pages/EditProductCategory.jsx","components/products/categories/SecuredEditProductCategory.js","components/products/categories/ProductCategories.jsx","components/products/brands/pages/NewBrand.jsx","components/products/brands/SecuredNewBrand.js","components/products/brands/pages/AllBrands.jsx","components/products/brands/SecuredAllBrands.js","components/products/brands/pages/EditBrand.jsx","components/products/brands/SecuredEditBrand.js","components/products/brands/Brands.jsx","components/products/Products.jsx","components/inventories/pages/AllInventories.jsx","components/inventories/SecuredAllInventories.js","components/inventories/pages/InventoryHistories.jsx","components/inventories/SecuredInventoryHistories.js","components/inventories/pages/UpdateInventories.jsx","components/inventories/SecuredUpdateInventories.js","components/inventories/Inventories.jsx","components/misc/components/QuestionModal.jsx","components/orders/pages/sections/OrderDetails.jsx","components/orders/pages/sections/OrderCustomerDetails.jsx","components/orders/pages/sections/OrderProductDetails.jsx","components/misc/components/PTableRow.jsx","components/orders/pages/sections/OrderProductsTable.jsx","components/orders/pages/NewOrder.jsx","components/orders/SecuredNewOrder.js","components/orders/pages/ViewOrder.jsx","components/orders/SecuredViewOrder.js","components/orders/pages/EditOrder.jsx","components/orders/SecuredEditOrder.js","components/orders/pages/AllOrders.jsx","components/orders/SecuredAllOrders.js","components/orders/pages/AllOrderDetails.jsx","components/orders/SecuredAllOrderDetails.js","components/orders/Orders.jsx","components/misc/pages/Invoice.jsx","components/invoices/pages/NewInvoice.jsx","components/invoices/SecuredNewInvoice.js","components/invoices/pages/EditInvoice.jsx","components/invoices/SecuredEditInvoice.js","components/invoices/pages/AllInvoices.jsx","components/invoices/SecuredAllInvoices.js","components/invoices/pages/AllInvoiceDetails.jsx","components/invoices/SecuredAllInvoiceDetails.js","components/misc/pages/Company.jsx","components/invoices/companies/pages/NewCompany.jsx","components/invoices/companies/SecuredNewCompany.js","components/invoices/companies/pages/EditCompany.jsx","components/invoices/companies/SecuredEditCompany.js","components/invoices/companies/pages/AllCompanies.jsx","components/invoices/companies/SecuredAllCompanies.js","components/invoices/companies/Companies.jsx","components/invoices/Invoices.jsx","components/misc/AllRoutes.js","components/misc/sections/NavBar.jsx","components/misc/components/ReactSideBar.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","unregister","navigator","serviceWorker","ready","then","registration","ErrorBoundary","props","state","error","errorInfo","this","setState","style","marginTop","md","className","src","alt","visibility","animationName","animationIterationCount","data-wow-delay","fontWeight","animationDelay","children","React","Component","roles","permissions","rolePermissions","AbilityContext","createContext","Can","createContextualCan","Consumer","fetch","res","json","data","catch","err","console","log","NotFound","fontSize","to","LoginForm","handleInput","e","target","name","value","validateLogin","preventDefault","stopPropagation","form","refs","loginForm","checkValidity","handleLogin","classList","add","options","method","body","JSON","stringify","username","password","headers","message","user","loginLabel","innerHTML","focus","isLoggedIn","Storage","localStorage","setItem","id","role_id","alert","screen","width","main","document","getElementById","marginLeft","changeUser","onChangeLabel","border","bind","lg","sm","xs","transparent","ref","onSubmit","noValidate","onInput","onChange","type","el","required","placeholder","SecuredLogin","loggedIn","getItem","Login","MyOwnSelect","handleChange","selectedOption","selectedValue","placeHolder","iconClass","isMulti","Entities","isOptionDisabled","withOutIcon","selectStyles","control","base","borderColor","isFocused","background","borderRadius","valueContainer","paddingLeft","maxHeight","fontFamily","multiValue","color","maxWidth","multiValueLabel","styles","multiValueRemove","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","EntityOptions","map","entity","key","label","closeMenuOnSelect","components","Option","innerProps","innerRef","cursor","checked","isSelected","ValueContainer","left","padding","DropdownIndicator","aria-hidden","IndicatorSeparator","alignSelf","backgroundColor","marginBottom","hideSelectedOptions","isClearable","isSearchable","WelcomeVendorModal","modalShow","toggle","handleClick","history","push","vendor","size","centered","backdrop","animation","modalStyle","isOpen","onClick","SignUp","handleSelectChange","bankName","handleNextButtonClick","current_fs","next_fs","animating","indexOFnext_fs","progressBar","Fieldsets","getElementsByTagName","parentNode","nextElementSibling","i","length","childNodes","display","handlePreviousButtonClick","previous_fs","indexOFcurrent_fs","previousElementSibling","remove","handleSubmit","allData","vendorRole","allRoles","filter","role","toLowerCase","shift","email","cell","address","cnic","shopName","shopAddress","shopCell","branchName","branchCode","accountTitle","accountNumber","ibanNumber","usernameCNICpart1","substring","split","reverse","join","usernameCNICpart2","usernameCNICpart3","newVendor","roleId","success","welcomeVendorModal","_isMounted","setTimeout","notificationShow","signUpLabel","center","xl","pattern","maxLength","SecuredSignupVendor","EditVendor","editVendorForm","updatedVendor","vendorId","reload","params","URLSearchParams","search","Number","get","vendorToBeEdited","allUsers","shop_name","shop_address","shop_cell","Math","random","bank_name","toUpperCase","branch_name","branch_code","account_title","account_id","iban_id","disabled","SecuredEditVendor","I","a","DeleteModal","deleteEntry","titleClass","tag","icon","outline","MyOwnListing","cardHeading","permissionEntity","redirectToNewEntityPath","addButtonEntityLabel","tableId","btnStyle","small","hover","entriesLabel","bordered","searchLabel","entries","entriesOptions","responsive","theadTextWhite","AllPersons","componentWillUnmount","handleEdit","allPersons","pathname","handleDelete","closest","rowIndex","rowToBeDeleted","personToBeDeleted","deleteModal","deletePerson","deleteRow","rows","index","forEach","currentRole","buttons","Fragment","columns","field","accountNo","ibanNo","AllVendors","SecuredAllVendors","Vendors","path","render","routeProps","Home","SecuredHome","NewUser","selectedRole","newUserForm","newUser","notificationMessage","option","SecuredNewUser","AllUsers","SecuredAllUsers","EditUser","onKeyPress","which","editingVendor","componentDidMount","selectedBankName","editUserForm","costPricePercent","retailPricePercent","userId","updatedUser","userToBeEdited","roleToBeEdited","retail_price_percent","cost_price_percent","SecuredEditUser","NewRole","selectedPermissions","newRoleForm","newRole","RolePermissions","permission","permissionId","permission_id","permissionOptions","allPermissions","slug","textAlign","SecuredNewRole","AllRoles","roleToBeDeleted","deleteRole","SecuredAllRoles","EditRole","editRoleForm","reqBody","thisRolesPermissions","allRolePermissions","rolePermission","permissionsToBeEdited","SecuredEditRole","Roles","Users","NewProdcut","selectedBrand","selectedCategory","selectedVendor","newProductForm","sku","bktId","newProduct","status","brandId","categoryId","retailPrice","costPrice","allBrands","allProductCategories","vendorRoleId","allVendors","SecuredNewProduct","NewProduct","AllProducts","productToBeDeleted","deleteProduct","allProducts","product","thisProductCategory","thisProductBrand","thisProductVendor","category","product_category_id","brand","brand_id","vendor_id","bkt_id","retail_price","SecuredAllProducts","EditProduct","editValidatingLabel","editProductLabel","handleInputRetail","override","selectedUser","calculatedCostPrice","handleInputCost","calculatedRetailPrice","handleBlurRetail","handleBlurCost","handleClickCheckbox","string","selectedStatus","editProductForm","updateProduct","productId","productToBeEdited","cost_price","onBlur","SecuredEditProduct","NewProductCategory","newProductCategoryForm","newProductCategory","description","SecuredNewProductCategory","AllProductCategories","categoryToBeDeleted","deleteProductCategory","productCategory","SecuredAllProductCategories","EditProductCategory","editProductCategoryForm","updatedProductCategory","categoryToBeEdited","SecuredEditProductCategory","ProductCategories","NewBrand","newBrandForm","newBrand","SecuredNewBrand","AllBrands","brandToBeDeleted","deleteBrand","SecuredAllBrands","EditBrand","editBrandForm","updatedBrand","brandToBeEdited","SecuredEditBrand","Brands","Products","AllInventories","allInventories","inventory","thisProduct","qty","attributes","SecuredAllInventories","InventoryHistories","allInventoryHistories","thisVendor","SecuredInventoryHistory","UpdateInventories","selectedUpdateOption","updateInventoriesForm","updatedInventory","updateOption","updateCallOptions","inventoryHistory","historyOptions","inventoryUpdateOptions","SecuredUpdateInventories","Inventories","SecuredInventoryHistories","QuestionModal","sendResponseBack","boolean","positiveBtnClicked","negativeBtnClicked","positiveBtnTxt","negativeBtnTxt","heading","letterSpacing","sourceOptions","statusOptions","OrderDetails","handleDateChange","orderDate","questionHeading","questionMessage","orderState","setQuestionModalProps","handleChangingStatus","orderStatus","questionModal","questionModalPositiveBtnClicked","courier","orderTracking","exportCSV","questionModalNegativeBtnClicked","chooseCourier","confirm","order","orderBeingEdited","orderDetails","orderDetailsBeingEdited","orderDetailsForm","orderSource","makeFormEmpty","orderId","orderNote","middle","selected","placeholderText","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","dateFormat","autoComplete","hint","OrderCustomerDetails","orderCustomerDetailsForm","cName","cContact","cAddress","marginRight","validate","OrderProductDetails","handleAddProduct","orderProductDetailsForm","selectedProduct","pQTY","pRemarks","pDiscount","pId","pSKU","pRate","pCost","pPrice","parseFloat","toFixed","pChecked","checkbox","addProductToTbl","displayForm","productOptions","inputRef","max","end","PTableRow","mouseEntered","inputEditQty","inputEditDiscount","mouseLeft","handleInputQty","updatedPrice","updatedQty","minusFromTotal","minusFromTotalValueAdded","addToTotal","addToTotalValueAdded","handleInputDiscount","updatedDiscount","handleBlurQty","includes","handleChangeExtraAdded","row","cells","deleteProductFrmTbl","pName","onMouseEnter","onMouseLeave","scope","suppressContentEditableWarning","contentEditable","verticalAlign","deleteRowfn","ProductsTable","Rows","displayTable","submitOrderBtn","updatedRows","splice","submitOrder","tableValid","checkOrderValidity","pTable","validatingLabel","orderDetail","product_id","product_sku","product_cost","product_rate","product_qty","product_discount","product_price","product_remarks","product_extra_added","saveOrderDetailsToDB","makeTableEmpty","duration","delay","NewOrder","orderProductsTable","updatedTotal","orderTotal","updatedTotalValueAdded","totalValueAdded","orderDetailsValidity","orderCustomerDetailsValidity","detail","order_date","order_id","order_source","order_status","detail_type","orderType","orderDetailsOptions","saveOrderToDB","orderCustomerDetails","newOrder","date","source","note","total","totalAddedValue","newOrderOptions","deleteRowsFromtbl","OrderProductsTable","SecuredNewOrder","ViewOrder","tableRows","desiredOrder","allOrders","desiredOrderDetails","allOrderDetails","product_name","Date","toLocaleDateString","tracking_id","customer_name","customer_contact","customer_address","total_value_added","SecuredViewOrder","EditOrder","tableUpdated","deleteOrderDetailsOptions","updates","updateOrderDetailsOptions","updatedOrder","trackingId","updatedOrderOptions","displayAddFormButton","orderProductDetails","SecuredEditOrder","AllOrders","handleView","orderToBeDeleted","deleteOrder","deleteOrderOptions","tracking","SecuredAllOrders","AllOrderDetails","pSku","pQty","SecuredAllOrderDetails","Orders","Invoice","makeStateEmpty","invoice_id","floor","selectedClient","selectedCompany","phone","items","service","rate","printInvoice","printArea","wholeContent","print","submitInvoice","total_amount","innerValue","selectClientForm","isNaN","obj","slagme","companyId","cId","number","editingInvoiceId","deleteInvoiceDetailsOptions","updateInvoiceOptions","updateInvoiceDetailsOptions","newInvoiceOptions","allInvoices","allInvoiceDetails","invoiceToBeEdited","invoice","editingInvoiceDetails","price","toDateString","c_id","company_id","c_address","c_number","calculateTotal","item","onChangeSelect","ourClient","clients","client","addItem","addItemForm","newitem","tdOnBlur","Index","deleteItemData","prevState","itemData","allCompanies","clientRoleId","allClients","companies","companyDetailStyle","clientOptions","companyOptions","company","companyDetails","logo","height","borderStyle","min","NewInvoice","SecuredNewInvoice","EditInvoice","SecuredEditInvoice","AllInvoices","invoiceToBeDeleted","invoiceId","deleteInvoice","deleteInvoiceOptions","SecuredAllInvoices","AllInvoiceDetails","SecuredAllInvoiceDetails","Company","companyToBeEdited","editCompany","existingLogo","displayExistingLogo","files","newCompanyForm","selectedLogo","fd","FormData","fakeForm","append","validatingMessage","updatedCompany","logoAddress","position","accept","encType","NewCompany","SecuredNewCompany","EditCompany","SecuredEditCompany","AllCompanies","companyToBeDeleted","companyLogo","deleteCompany","deleteCompanyOptions","SecuredAllCompanies","Companies","Invoices","AllRoutes","exact","NavBar","toggleCollapse","toggleSidebar","activeClassToggeler","elems","querySelector","expand","boxShadow","navbar","right","textTransform","ReactSideBar","handleDropDownMenus","dropdownMenus","getElementsByClassName","listElement","dropDown","childElementCount","j","homeLink","loggingOut","ability","Ability","App","removeItem","userRole","rules","userRoleId","AbilityBuilder","extract","can","undefined","Role","userRolePermissions","userPermissions","defineRulesFor","update","contains","sidebar","dataRequests","Promise","all","responses","jsons","Provider","ReactDOM","module","hot"],"mappings":"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","file":"static/js/main.b18096bf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { error: null, errorInfo: null };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n\r\n        this.setState({\r\n            error: error,\r\n            errorInfo: errorInfo\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.errorInfo) {\r\n\r\n            //if error render this\r\n            return (\r\n                <>\r\n                    <MDBRow style={{ marginTop: '72px' }}>\r\n                        <MDBCol md='12' className='text-center float-md-none mx-auto'>\r\n                            <img\r\n                                src=\"/images/404_mdb.png\"\r\n                                alt=\"Error 404\"\r\n                                className=\"img-fluid wow fadeIn animated\"\r\n                                style={{ visibility: 'visible', animationName: 'fadeIn', animationIterationCount: 1 }} />\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                    <MDBRow className=\"mt-5\">\r\n                        <MDBCol md='12' className=\"text-center mb-5\">\r\n                            <h2 className=\"h2-responsive wow fadeIn mb-4 animated\" data-wow-delay=\"0.2s\" style={{ fontWeight: 500, visibility: 'visible', animationName: 'fadeIn', animationIterationCount: 1, animationDelay: '0.2s' }}>Oops! Something went wrong.</h2>\r\n                        </MDBCol>\r\n                    </MDBRow >\r\n                </>\r\n            );\r\n        }\r\n        // Normally, just render children\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\n\r\nexport default ErrorBoundary","import { AbilityBuilder } from \"@casl/ability\";\r\n\r\nlet roles;\r\nlet permissions;\r\nlet rolePermissions;\r\nfetch('/getAllRoles')\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n        // console.log(json)\r\n        roles = json.data\r\n    })\r\n    .catch((err => {\r\n        console.log(err);\r\n    }))\r\nfetch('/getAllPermissions')\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n        // console.log(json)\r\n        permissions = json.data\r\n    })\r\n    .catch((err => {\r\n        console.log(err);\r\n    }))\r\n\r\nfetch('/getAllRolesPermissions')\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n        // console.log(json)\r\n        rolePermissions = json.data\r\n    })\r\n    .catch((err => {\r\n        console.log(err);\r\n    }))\r\n\r\nexport default function defineRulesFor(role) {\r\n    const { can, rules } = AbilityBuilder.extract();\r\n\r\n    //finding user's role\r\n    let userRoleId;\r\n    if (roles !== undefined) {\r\n        roles.forEach(Role => {\r\n            if (Role.name === role) {\r\n                userRoleId = Role.id\r\n            }\r\n        })\r\n\r\n        //getting permissions against that role\r\n        let userRolePermissions = rolePermissions !== undefined && userRoleId !== undefined ?\r\n            rolePermissions.filter(rolePermission => rolePermission.role_id === userRoleId) : undefined\r\n\r\n        //getting user's permissions\r\n        let userPermissions = []\r\n        if (userRolePermissions !== undefined && permissions !== undefined) {\r\n            userRolePermissions.forEach(rolePermission => {\r\n                permissions.forEach(permission => {\r\n                    if (permission.id === rolePermission.permission_id) {\r\n                        userPermissions.push(permission)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        // console.log(userPermissions);\r\n\r\n        // defining rules for user\r\n        if (userPermissions.length!==0 && userPermissions !== undefined) {\r\n            for (let index = 0; index < userPermissions.length; index++) {\r\n                can(`${userPermissions[index].permission}`, `${userPermissions[index].entity}`)\r\n                // console.log(`${userPermissions[index].permission}`, `${userPermissions[index].entity}`);\r\n\r\n            }\r\n        }\r\n        // can(\"manage\", \"all\");\r\n        // can(\"read\", \"all\");\r\n        // can(\"delete\", \"all\");\r\n        // can(\"update\", \"all\");\r\n        // can(\"create\", \"all\");\r\n\r\n        // switch (role) {\r\n        //     // case \"superAdmin\":\r\n        //     //     can(\"manage\", \"all\");\r\n        //     //     break;\r\n        //     case \"admin\":\r\n\r\n        //         can(\"manage\", \"all\");\r\n        //         // can(\"read\", \"all\");\r\n        //         // can(\"delete\", \"all\");\r\n        //         // can(\"update\", \"all\");\r\n        //         // can(\"create\", \"all\");\r\n        //         break;\r\n        //     case \"operator\":\r\n        //         can(\"read\", \"user\");\r\n        //         can('create', 'order')\r\n        //         can(\"read\", \"order\");\r\n        //         can(\"update\", \"order\");\r\n        //         can(\"delete\", \"order\");\r\n        //         break;\r\n        //     case \"endUser\":\r\n        //         can(\"read\", \"order\");\r\n        //         break;\r\n        //     default:\r\n        //         can(\"read\", \"order\");\r\n        // }\r\n    }\r\n    return rules;\r\n}\r\n\r\n        // import { AbilityBuilder } from '@casl/ability'\r\n\r\n        // const superAdmin = AbilityBuilder.define(can => {\r\n            //     can('manage', 'all')\r\n            // });\r\n\r\n// const admin = AbilityBuilder.define((can, cannot) => {\r\n//     can('read', 'all')\r\n//     can('delete', 'all')\r\n//     cannot('update', 'user')\r\n//     cannot('create', 'customer')\r\n// });\r\n// const operator = AbilityBuilder.define(can => {\r\n//     can('read', 'all')\r\n//     can('create', 'all')\r\n\r\n// });\r\n\r\n// const endUser = AbilityBuilder.define(can => {\r\n//     can('read', 'all')\r\n// });\r\n// const ABILITIES = { superAdmin, admin, operator, endUser }\r\n// export default ABILITIES","import { createContextualCan } from \"@casl/react\";\r\nimport React from \"react\";\r\n\r\nexport const AbilityContext = React.createContext();\r\nexport const Can = createContextualCan(AbilityContext.Consumer);\r\n","import React from 'react';\r\nimport { MDBCol, MDBRow, MDBNavLink } from 'mdbreact';\r\n\r\n\r\nconst NotFound = () => {\r\n\r\n\r\n  return (\r\n    <>\r\n      <MDBRow style={{ marginTop: '72px' }}>\r\n        <MDBCol md='12' className='text-center float-md-none mx-auto'>\r\n          <img\r\n            src=\"/404_mdb.png\"\r\n            alt=\"Error 404\"\r\n            className=\"img-fluid wow fadeIn animated\"\r\n            style={{ visibility: 'visible', animationName: 'fadeIn', animationIterationCount: 1 }} />\r\n        </MDBCol>\r\n      </MDBRow>\r\n      <MDBRow className=\"mt-5\">\r\n        <MDBCol md='12' className=\"text-center mb-5\">\r\n          <h2 className=\"h2-responsive wow fadeIn mb-4 animated\" data-wow-delay=\"0.2s\" style={{ fontWeight: 500, visibility: 'visible', animationName: 'fadeIn', animationIterationCount: 1, animationDelay: '0.2s' }}>Oops! This obviously isn't a page you were looking for.</h2>\r\n          <p className=\"wow fadeIn animated\" data-wow-delay=\"0.4s\" style={{ fontSize: '1.25rem', visibility: 'visible', animationName: 'fadeIn', animationIterationCount: 1, animationDelay: '0.4s' }}>Please, use following link to navigate back to home page.</p>\r\n          <MDBCol md='6' className='mx-auto' >\r\n            <MDBNavLink to='/home'>Home</MDBNavLink>\r\n          </MDBCol>\r\n        </MDBCol>\r\n      </MDBRow >\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default NotFound","import React from \"react\";\r\nimport { Redirect } from 'react-router'\r\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardTitle, MDBCardHeader } from 'mdbreact';\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            isLoggedIn: false,\r\n            user: ''\r\n        }\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n    handleInput = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    validateLogin = (e) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        let form = this.refs.loginForm;\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n            return\r\n        }\r\n        this.handleLogin();\r\n    }\r\n    handleLogin = () => {\r\n        var options = {\r\n            method: 'POST',\r\n            body: JSON.stringify({ username: this.state.username, password: this.state.password }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        fetch('/auth', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json);\r\n                let message = json.message;\r\n                let user = json.user\r\n                this.refs.loginLabel.innerHTML = message;\r\n                if (message === 'incorrect password') {\r\n                    this.password.value = \"\";\r\n                    this.password.focus();\r\n                }\r\n                else if (message === `username doesn't exist`) {\r\n                    this.username.value = '';\r\n                    this.username.focus();\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        isLoggedIn: true,\r\n                        user: user\r\n                    }, function () {\r\n                        if (typeof (Storage) !== \"undefined\") {\r\n                            localStorage.setItem('ui', JSON.stringify(user.id))\r\n                            localStorage.setItem('uri', JSON.stringify(user.role_id))\r\n                        }\r\n                        else {\r\n                            alert('Please use another browser to get it working correctly.')\r\n                        }\r\n                    })\r\n                    if (window.screen.width > 576) {\r\n                        let main = document.getElementById('main'), sidebar = document.getElementById('sidebar')\r\n                        sidebar.style.width = ' 12%'\r\n                        main.style.width = '88%'\r\n                        main.style.marginLeft = '12%'\r\n                    }\r\n                    this.props.changeUser(user);\r\n                }\r\n\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    onChangeLabel = (e) => {\r\n        e.target.style.border = 'none'\r\n        this.refs.loginLabel.innerHTML = '';\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        if (this.state.isLoggedIn) {\r\n            return <Redirect to='/home' />\r\n        }\r\n        else\r\n            return (\r\n                <MDBRow className='mt-5'>\r\n                    <MDBCol lg='4' md='6' sm='8' xs='10' className='offset-lg-6 offset-md-4 offset-sm-2 offset-xs-0'>\r\n                        <MDBCol>\r\n                            <MDBCard className='cardLogin'>\r\n                                <MDBCardHeader className='mb-4 border-0' transparent>\r\n                                    <div className='Avatar '>\r\n                                        <div className='imageLogin '>\r\n                                            <i className='fas fa-user-tie'></i>\r\n                                        </div>\r\n                                    </div>\r\n                                </MDBCardHeader>\r\n                                <MDBCardBody>\r\n                                    <MDBCardTitle className='text-center fontRaleway ' >\r\n                                        <span className='colorBlue loginCardHeading'>User</span> <span className='colorGreen loginCardHeading'>Login</span>\r\n                                    </MDBCardTitle>\r\n                                    <form ref='loginForm' onSubmit={this.validateLogin} noValidate>\r\n                                        <div className='my-3'>\r\n                                            <i className=\"fa fa-user-tie inputIcon\" />\r\n                                            <input\r\n                                                name=\"username\"\r\n                                                value={this.state.username}\r\n                                                onInput={this.handleInput}\r\n                                                onChange={this.onChangeLabel}\r\n                                                type=\"text\"\r\n                                                ref={el => this.username = el}\r\n                                                required\r\n                                                placeholder='Username'\r\n                                                className='fontRaleway inputText pl-5 form-control'\r\n                                            />\r\n                                            <div className=\"valid-feedback\">\r\n                                                Looks good!\r\n                                            </div>\r\n                                            <div className=\"invalid-feedback\">\r\n                                                Please enter a valid username.\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='my-3' >\r\n                                            <i className=\"fa fa-lock inputIcon\" />\r\n                                            <input\r\n                                                name=\"password\"\r\n                                                value={this.state.password}\r\n                                                onInput={this.handleInput}\r\n                                                ref={el => this.password = el}\r\n                                                onChange={this.onChangeLabel}\r\n                                                type=\"password\"\r\n                                                required\r\n                                                className='fontRaleway inputText pl-5 form-control'\r\n                                                placeholder='Password'\r\n                                            />\r\n                                            <div className=\"valid-feedback\">\r\n                                                Looks good!\r\n                                            </div>\r\n                                            <div className=\"invalid-feedback\">\r\n                                                Please enter a valid password.\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='mt-3'>\r\n                                            <button type='submit' className='fontRaleway loginSubmitBtn my-2'>Log In</button>\r\n                                        </div>\r\n                                        <div className='text-center m-0 p-0 '>\r\n                                            <label ref='loginLabel' className='m-0 p-0 validatingLabel'></label><br />\r\n                                            <span className='colorBlue'>Forgot</span> <span className='colorGreen'>Password</span> <span className='colorBlue'>?</span>\r\n                                        </div>\r\n                                    </form>\r\n                                </MDBCardBody>\r\n                            </MDBCard>\r\n                        </MDBCol>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            )\r\n    }\r\n}\r\nexport default LoginForm;","import React, { Component } from 'react';\r\nimport Login from './pages/Login';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass SecuredLogin extends Component {\r\n    loggedIn = false\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.loggedIn === true) {\r\n            return <Redirect to='/home' />\r\n        }\r\n        else {\r\n            return <Login changeUser={this.props.changeUser} />\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredLogin","import React, { Component } from 'react';\r\nimport Select, { components } from 'react-select';\r\n\r\n\r\nclass MyOwnSelect extends Component {\r\n\r\n    handleChange = selectedOption => {\r\n        this.props.handleChange(selectedOption)\r\n    }\r\n\r\n    render() {\r\n        let { options, selectedValue, placeHolder, iconClass, isMulti, required, Entities, isOptionDisabled, withOutIcon } = this.props\r\n        // console.log(selectedValue);\r\n\r\n        const selectStyles = {\r\n            control: (base, state) => ({\r\n                ...base,\r\n                borderColor: state.isFocused ?\r\n                    '#ddd' : required ?\r\n                        selectedValue !== null ?\r\n                            '#ddd' : 'red' : '#ddd',\r\n                background: withOutIcon ? '' : \"#ebebeb\",\r\n                borderRadius: withOutIcon ? '4px' : '7px'\r\n            }),\r\n            valueContainer: (base, state) => ({\r\n                ...base,\r\n                background: withOutIcon ? '' : \"#ebebeb\",\r\n                paddingLeft: withOutIcon ? 12 : 46,\r\n                maxHeight: '35px',\r\n                fontWeight: 400,\r\n                borderRadius: '7px',\r\n                fontFamily: 'Raleway',\r\n            }),\r\n            multiValue: (base, state) => ({\r\n                ...base,\r\n                background: \"#112648\",\r\n                color: 'white',\r\n                maxWidth: \"110px\",\r\n                borderRadius: '5px'\r\n            }),\r\n            multiValueLabel: (styles, { data }) => ({\r\n                ...styles,\r\n                color: '#cedd88',\r\n            }),\r\n            multiValueRemove: base => ({\r\n                ...base,\r\n                background: '#cedd88',\r\n                color: '#112648',\r\n                borderBottomLeftRadius: '0px',\r\n                borderBottomRightRadius: '5px',\r\n                borderTopLeftRadius: '0px',\r\n                borderTopRightRadius: '5px',\r\n\r\n            }),\r\n        }\r\n\r\n        const Option = props => {\r\n\r\n            const { innerProps, innerRef } = props\r\n            return (\r\n                <div ref={innerRef} {...innerProps}>\r\n                    <div className='text-left ml-2 pl-2 mt-1 fontRaleway selectOption' style={{\r\n                        color: `${props.data.color}`,\r\n                        fontWeight: '500', cursor: 'pointer'\r\n                    }}>\r\n                        {this.props.isMulti && <input type='checkbox' checked={props.isSelected} onChange={() => { }} />}\r\n                        {props.data.label}\r\n                    </div>\r\n                </div >\r\n            );\r\n        };\r\n\r\n        const ValueContainer = ({ children, ...props }) => {\r\n            return (\r\n                components.ValueContainer && (\r\n                    <components.ValueContainer {...props}>\r\n                        {!!children && (\r\n                            <i\r\n                                className={`${iconClass} inputIcon`}\r\n                                style={{ left: 13, padding: '0px' }}\r\n                            />\r\n                        )}\r\n                        {children}\r\n                    </components.ValueContainer>\r\n                )\r\n            );\r\n        };\r\n\r\n        const DropdownIndicator = props => {\r\n            return (\r\n                components.DropdownIndicator && (\r\n                    <components.DropdownIndicator {...props}>\r\n                        <i\r\n                            className=\"fa fa-chevron-down\"\r\n                            aria-hidden=\"true\"\r\n                            style={{ color: '#112648' }}\r\n                        />\r\n                    </components.DropdownIndicator>\r\n                )\r\n            );\r\n        };\r\n\r\n        const IndicatorSeparator = ({ innerProps }) => {\r\n            return <span style={{ alignSelf: 'stretch', backgroundColor: '#112648', width: '0.1pc', marginTop: 8, marginBottom: 8 }} {...innerProps} />;\r\n        };\r\n\r\n        let EntityOptions = Entities && Entities.map(entity => ({\r\n            key: entity.id,\r\n            label: entity.name,\r\n            value: entity.id,\r\n            color: entity.id % 2 === 0 ?\r\n                '#112648' : '#687722'\r\n        }));\r\n\r\n\r\n        return (\r\n            <Select\r\n                closeMenuOnSelect={!isMulti}\r\n                value={selectedValue}\r\n                onChange={this.handleChange}\r\n                components={{ Option, ValueContainer, DropdownIndicator, IndicatorSeparator }}\r\n                options={options ? options : EntityOptions}\r\n                isMulti={isMulti}\r\n                hideSelectedOptions={false}\r\n                styles={selectStyles}\r\n                placeholder={placeHolder}\r\n                isClearable\r\n                isSearchable\r\n                isOptionDisabled={isOptionDisabled}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default MyOwnSelect","import React from 'react';\r\nimport { MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBBtn } from 'mdbreact'\r\n\r\nclass WelcomeVendorModal extends React.Component {\r\n    state = {\r\n        modalShow: false,\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modalShow: !this.state.modalShow\r\n        })\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.toggle();\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render() {\r\n\r\n        let { vendor } = this.props\r\n\r\n        return (\r\n            <MDBModal size=\"md\" centered backdrop={true} animation={'right'} modalStyle=\"info\"\r\n                isOpen={this.state.modalShow}\r\n                // toggle={this.toggle}\r\n                toggle={() => { }}\r\n            >\r\n                <MDBModalHeader className='text-center'>\r\n                    Welcome {vendor.name}!\r\n                </MDBModalHeader>\r\n                <MDBModalBody className=\"text-center\">\r\n                    <h5> You are registered successfully as a <b className='text-info'>Seller</b>.<br /> Following are your <b className='text-info'>login</b> credentials:</h5><br />\r\n                    <h3 className='text-info'><small className='text-muted'> Username:  </small>{vendor.username}<br />\r\n                        <small className='text-muted'>Password:  </small>{vendor.password}</h3>\r\n                    <h6> <b>Note:</b> Your username is also your <b className='text-info'>Vendor ID</b>.</h6>\r\n                </MDBModalBody>\r\n                <MDBModalFooter>\r\n                    <MDBBtn size='sm' onClick={this.handleClick} color='info'>Ok</MDBBtn>\r\n                </MDBModalFooter>\r\n            </MDBModal>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default WelcomeVendorModal","import React from \"react\";\r\n// import { Redirect } from 'react-router'\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\nimport MyOwnSelect from '../../misc/components/MyOwnSelect'\r\nimport WelcomeVendorModal from '../../misc/components/WelcomeVendorModal'\r\n\r\nclass SignUp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            cell: '',\r\n            address: '',\r\n            cnic: '',\r\n            shopName: '',\r\n            shopAddress: '',\r\n            shopCell: '',\r\n            bankName: '',\r\n            branchName: '',\r\n            branchCode: '',\r\n            accountTitle: '',\r\n            accountNumber: '',\r\n            ibanNumber: '',\r\n            vendor: '',\r\n        }\r\n    }\r\n    handleInput = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectChange = (selectedOption) => {\r\n        this.setState({\r\n            bankName: selectedOption\r\n        })\r\n    }\r\n\r\n\r\n    handleNextButtonClick = (e) => {\r\n\r\n        let current_fs, next_fs; //fieldsets\r\n        // let left, opacity, scale; //fieldset properties which we will animate\r\n        let animating; //flag to prevent quick multi-click glitches\r\n        let progressBar = document.getElementById('progressbar')\r\n        let Fieldsets = document.getElementsByTagName('fieldset')\r\n\r\n\r\n        if (animating) return false;\r\n        animating = true;\r\n\r\n        current_fs = e.target.parentNode.parentNode;\r\n        next_fs = current_fs.nextElementSibling;\r\n\r\n        let indexOFnext_fs;\r\n        for (let i = 0; i < Fieldsets.length; i++) {\r\n            if (Fieldsets[i] === next_fs) {\r\n                indexOFnext_fs = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n        //activate next step on progressbar using the index of next_fs\r\n        progressBar.childNodes[indexOFnext_fs].classList.add(\"active\");\r\n        //hide the current fieldset with style\r\n        current_fs.style.display = 'none'\r\n        //show the next fieldset\r\n        next_fs.style.display = 'block';\r\n\r\n\r\n    }\r\n\r\n    handlePreviousButtonClick = (e) => {\r\n        let current_fs, previous_fs; //fieldsets\r\n        // let left, opacity, scale; //fieldset properties which we will animate\r\n        let animating; //flag to prevent quick multi-click glitches\r\n        let progressBar = document.getElementById('progressbar')\r\n        let Fieldsets = document.getElementsByTagName('fieldset')\r\n\r\n        if (animating) return false;\r\n        animating = true;\r\n\r\n        current_fs = e.target.parentNode.parentNode;\r\n        previous_fs = current_fs.previousElementSibling;\r\n\r\n        let indexOFcurrent_fs;\r\n        for (let i = 0; i < Fieldsets.length; i++) {\r\n            if (Fieldsets[i] === current_fs) {\r\n                indexOFcurrent_fs = i;\r\n                break;\r\n            }\r\n        }\r\n        //de-activate current step on progressbar\r\n        progressBar.childNodes[indexOFcurrent_fs].classList.remove(\"active\");\r\n        //hide the current fieldset with style\r\n        current_fs.style.display = 'none'\r\n        //show the previous fieldset\r\n        previous_fs.style.display = 'block';\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        let { allData } = this.props\r\n        let form = document.getElementById('msform')\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated')\r\n            return\r\n        }\r\n        else if (this.state.bankName === '' || this.state.bankName === null) {\r\n            this.setState({ bankName: null })\r\n            return\r\n        }\r\n        else {\r\n            let vendorRole = allData.allRoles.filter(role => role.name.toLowerCase() === 'vendor').shift()\r\n            let { name, email, cell, address, cnic, shopName, shopAddress, shopCell, bankName, branchName, branchCode, accountTitle, accountNumber, ibanNumber } = this.state\r\n            let usernameCNICpart1 = cnic.substring(0, 5).substring(0, 3).split('').reverse().join('') //123\r\n            let usernameCNICpart2 = cnic.substring(0, 5).substring(3).split('').reverse().join('')//45\r\n            let usernameCNICpart3 = cnic.substring(cnic.length - 3).split('').reverse().join('')//671\r\n            let username = `bkt${usernameCNICpart2}${usernameCNICpart3}${usernameCNICpart1}V`//bkt54176321\r\n            let password = '12345'\r\n\r\n            let newVendor = {\r\n                roleId: vendorRole && vendorRole.id, name: name, email: email, cell: cell, address: address, username: username, password: password,\r\n                cnic: cnic, shopName: shopName, shopAddress: shopAddress, shopCell: shopCell, bankName: bankName.value, branchName: branchName, branchCode: branchCode,\r\n                accountTitle: accountTitle, accountNumber: accountNumber, ibanNumber: ibanNumber\r\n            }\r\n\r\n\r\n            var options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(newVendor),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/addNewUser', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    // console.log(json)\r\n                    // this._isMounted && this.setState({ message: json.message, notificationShow: true })\r\n                    if (json.success === true) {\r\n                        let vendor = json.data\r\n                        this.setState({\r\n                            name: '',\r\n                            email: '',\r\n                            cell: '',\r\n                            address: '',\r\n                            cnic: '',\r\n                            shopName: '',\r\n                            shopAddress: '',\r\n                            shopCell: '',\r\n                            bankName: '',\r\n                            branchName: '',\r\n                            branchCode: '',\r\n                            accountTitle: '',\r\n                            accountNumber: '',\r\n                            ibanNumber: '',\r\n                            vendor: vendor\r\n                        })\r\n                        this.refs.welcomeVendorModal.setState({ modalShow: true })\r\n                        // console.log(vendor);\r\n                    }\r\n                    else {\r\n                        this.name.focus();\r\n                    }\r\n                    this._isMounted && setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    onChangeLabel = () => {\r\n        this.refs.signUpLabel.innerHTML = ''\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let { name, email, cell, address, cnic, shopName, shopAddress, shopCell, bankName, branchName, branchCode, accountTitle,\r\n            accountNumber, ibanNumber, vendor } = this.state\r\n\r\n        let bankOptions = [{\r\n            key: 1,\r\n            label: 'HBL',\r\n            value: 'hbl',\r\n            color: '#112648'\r\n        }, {\r\n            key: 2,\r\n            label: 'MCB',\r\n            value: 'mcb',\r\n            color: '#687722'\r\n        },];\r\n\r\n        return (\r\n            <MDBRow center className='mt-2 p-0'>\r\n                <MDBCol xl='6' lg='8' md='8' sm='10' xs='12' className='p-0 offset-xl-1 offset-lg-1'>\r\n                    <form id=\"msform\" className='mb-4' onSubmit={this.handleSubmit} noValidate>\r\n\r\n                        {/* <!-- progressbar --> */}\r\n                        <ul id=\"progressbar\" className='fontRaleway text-center'>\r\n                            <li className=\"active\">Personal Details</li>\r\n                            <li>Business Details</li>\r\n                            <li>Bank Details</li>\r\n                        </ul>\r\n\r\n                        {/* <!-- fieldsets --> */}\r\n                        {/* <MDBAnimation type=\"fadeInUp\" > */}\r\n                        <fieldset>\r\n                            <h2 className=\"fs-title text-center\">Personal Details</h2>\r\n                            <h3 className=\"fs-subtitle text-center\">Tell us something about you</h3>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-user-tie inputIcon\" />\r\n                                <input\r\n                                    name=\"name\"\r\n                                    value={name}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.name = el}\r\n                                    required\r\n                                    placeholder='Your Name*'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                />\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-envelope inputIcon\" style={{ paddingLeft: '13px' }}></i>\r\n                                <input\r\n                                    name=\"email\"\r\n                                    value={email}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.email = el}\r\n                                    required\r\n                                    placeholder='Email'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-mobile-alt inputIcon\" style={{ paddingLeft: '16px' }}></i>\r\n                                <input\r\n                                    name=\"cell\"\r\n                                    value={cell}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.cell = el}\r\n                                    required\r\n                                    placeholder='Phone'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-map-marker-alt inputIcon\" style={{ paddingLeft: '16px' }}></i>\r\n                                <input\r\n                                    name=\"address\"\r\n                                    value={address}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.address = el}\r\n                                    required\r\n                                    placeholder='Address'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-id-card inputIcon\" style={{ paddingLeft: '13px' }}></i>\r\n                                <input\r\n                                    name=\"cnic\"\r\n                                    value={cnic}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.cnic = el}\r\n                                    pattern=\"^[0-9]{13}\"\r\n                                    required\r\n                                    placeholder='CNIC'\r\n                                    maxLength='13'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                />\r\n                                <p className='invalid-feedback'> <small className='pl-3 m-0'>CNIC must follow the '0000000000000' format !</small></p>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <input type=\"button\" name=\"next\" onClick={this.handleNextButtonClick} className=\"next action-button\" value=\"Next\" />\r\n                            </div>\r\n                        </fieldset>\r\n                        {/* </MDBAnimation> */}\r\n                        {/* <MDBAnimation type=\"fadeInUp\" > */}\r\n\r\n                        <fieldset>\r\n                            <h2 className=\"fs-title text-center\">Business Details</h2>\r\n                            <h3 className=\"fs-subtitle text-center\">Your presence in business</h3>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-store inputIcon\" style={{ paddingLeft: '11px' }}></i>\r\n                                <input\r\n                                    name=\"shopName\"\r\n                                    value={shopName}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.shopName = el}\r\n                                    required\r\n                                    placeholder='Shop Name'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-map-marker-alt inputIcon\" style={{ paddingLeft: '16px' }}></i>\r\n                                <input\r\n                                    name=\"shopAddress\"\r\n                                    value={shopAddress}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.shopAddress = el}\r\n                                    required\r\n                                    placeholder='Shop Address'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-mobile-alt inputIcon\" style={{ paddingLeft: '17px' }}></i>\r\n                                <input\r\n                                    name=\"shopCell\"\r\n                                    value={shopCell}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.shopCell = el}\r\n                                    required\r\n                                    placeholder='Shop Phone'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <input type=\"button\" name=\"previous\" onClick={this.handlePreviousButtonClick} className=\"previous action-button-previous\" value=\"Back\" />\r\n                                <input type=\"button\" name=\"next\" onClick={this.handleNextButtonClick} className=\"next action-button\" value=\"Next\" />\r\n                            </div>\r\n                        </fieldset>\r\n                        {/* </MDBAnimation> */}\r\n                        {/* <MDBAnimation type=\"fadeInUp\" > */}\r\n\r\n                        <fieldset>\r\n                            <h2 className=\"fs-title text-center\">Bank Details</h2>\r\n                            <h3 className=\"fs-subtitle text-center\">Fill in your bank account details</h3>\r\n                            <div className='my-3'>\r\n                                <MyOwnSelect\r\n                                    options={bankOptions}\r\n                                    handleChange={this.handleSelectChange}\r\n                                    placeHolder={'Bank Name*'}\r\n                                    selectedValue={bankName}\r\n                                    iconClass={'fa fa-university'}\r\n                                    required={true}\r\n                                    isMulti={false}\r\n                                />\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-hand-holding-usd inputIcon\"></i>\r\n                                <input\r\n                                    name=\"branchName\"\r\n                                    value={branchName}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.branchName = el}\r\n                                    required\r\n                                    placeholder='Branch Name'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-qrcode inputIcon\"></i>\r\n                                <input\r\n                                    name=\"branchCode\"\r\n                                    value={branchCode}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"number\"\r\n                                    ref={el => this.branchCode = el}\r\n                                    required\r\n                                    placeholder='Branch Code'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-book inputIcon\"></i>\r\n                                <input\r\n                                    name=\"accountTitle\"\r\n                                    value={accountTitle}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.accountTitle = el}\r\n                                    required\r\n                                    placeholder='A/C Title'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-portrait inputIcon\"></i>\r\n                                <input\r\n                                    name=\"accountNumber\"\r\n                                    value={accountNumber}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"number\"\r\n                                    ref={el => this.accountNumber = el}\r\n                                    required\r\n                                    placeholder='A/C #'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='mt-3 '>\r\n                                <i className=\"fa fa-credit-card inputIcon\" style={{ paddingLeft: '11px' }}></i>\r\n                                <input\r\n                                    name=\"ibanNumber\"\r\n                                    value={ibanNumber}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.ibanNumber = el}\r\n                                    required\r\n                                    placeholder='IBAN #'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='text-center'>\r\n                                <label ref='signUpLabel' className='m-0 p-0 validatingLabel'></label><br />\r\n                                <input type=\"button\" name=\"previous\" onClick={this.handlePreviousButtonClick} className=\"previous action-button-previous mb-0\" value=\"Back\" />\r\n                                <input type=\"submit\" name=\"submit\" className=\"submit action-button mb-0\" value=\"Submit\" />\r\n                            </div>\r\n                        </fieldset>\r\n                        {/* </MDBAnimation> */}\r\n                    </form>\r\n                </MDBCol>\r\n                <WelcomeVendorModal\r\n                    vendor={vendor}\r\n                    ref='welcomeVendorModal'\r\n                    {...this.props}\r\n                />\r\n            </MDBRow>\r\n        )\r\n    }\r\n}\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport SignUp from './pages/SignUp';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass SecuredSignupVendor extends Component {\r\n    loggedIn = false\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        if (this.loggedIn === true) {\r\n            return <Redirect to='/home' />\r\n        }\r\n        else {\r\n            return <SignUp {...this.props} />\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredSignupVendor","import React from \"react\";\r\n// import { Redirect } from 'react-router'\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\nimport MyOwnSelect from '../../misc/components/MyOwnSelect'\r\n\r\n\r\nclass EditVendor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let params = new URLSearchParams(window.location.search)\r\n        this.vendorId = Number(params.get('vendor'))\r\n        let vendorToBeEdited = props.allData.allUsers.filter(user => user.id === this.vendorId).shift()\r\n\r\n        this.state = {\r\n            name: vendorToBeEdited && vendorToBeEdited.name,\r\n            email: vendorToBeEdited && vendorToBeEdited.email,\r\n            cell: vendorToBeEdited && vendorToBeEdited.cell,\r\n            address: vendorToBeEdited && vendorToBeEdited.address,\r\n            cnic: vendorToBeEdited && vendorToBeEdited.cnic,\r\n            shopName: vendorToBeEdited && vendorToBeEdited.shop_name,\r\n            shopAddress: vendorToBeEdited && vendorToBeEdited.shop_address,\r\n            shopCell: vendorToBeEdited && vendorToBeEdited.shop_cell,\r\n            bankName: vendorToBeEdited && { key: Math.random(), label: vendorToBeEdited.bank_name.toUpperCase(), value: vendorToBeEdited.bank_name },\r\n            branchName: vendorToBeEdited && vendorToBeEdited.branch_name,\r\n            branchCode: vendorToBeEdited && vendorToBeEdited.branch_code,\r\n            accountTitle: vendorToBeEdited && vendorToBeEdited.account_title,\r\n            accountNumber: vendorToBeEdited && vendorToBeEdited.account_id,\r\n            ibanNumber: vendorToBeEdited && vendorToBeEdited.iban_id,\r\n            username: vendorToBeEdited && vendorToBeEdited.username,\r\n            password: vendorToBeEdited && vendorToBeEdited.password,\r\n            vendor: '',\r\n        }\r\n    }\r\n    handleInput = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectChange = (selectedOption) => {\r\n        this.setState({\r\n            bankName: selectedOption\r\n        })\r\n    }\r\n\r\n\r\n    handleNextButtonClick = (e) => {\r\n\r\n        let current_fs, next_fs; //fieldsets\r\n        // let left, opacity, scale; //fieldset properties which we will animate\r\n        let animating; //flag to prevent quick multi-click glitches\r\n        let progressBar = document.getElementById('progressbar')\r\n        let Fieldsets = document.getElementsByTagName('fieldset')\r\n\r\n\r\n        if (animating) return false;\r\n        animating = true;\r\n\r\n        current_fs = e.target.parentNode.parentNode;\r\n        next_fs = current_fs.nextElementSibling;\r\n\r\n        let indexOFnext_fs;\r\n        for (let i = 0; i < Fieldsets.length; i++) {\r\n            if (Fieldsets[i] === next_fs) {\r\n                indexOFnext_fs = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n        //activate next step on progressbar using the index of next_fs\r\n        progressBar.childNodes[indexOFnext_fs].classList.add(\"active\");\r\n        //show the next fieldset\r\n        next_fs.style.display = 'block';\r\n        //hide the current fieldset with style\r\n        current_fs.style.display = 'none';\r\n\r\n    }\r\n\r\n    handlePreviousButtonClick = (e) => {\r\n        let current_fs, previous_fs; //fieldsets\r\n        // let left, opacity, scale; //fieldset properties which we will animate\r\n        let animating; //flag to prevent quick multi-click glitches\r\n        let progressBar = document.getElementById('progressbar')\r\n        let Fieldsets = document.getElementsByTagName('fieldset')\r\n\r\n        if (animating) return false;\r\n        animating = true;\r\n\r\n        current_fs = e.target.parentNode.parentNode;\r\n        previous_fs = current_fs.previousElementSibling;\r\n\r\n        let indexOFcurrent_fs;\r\n        for (let i = 0; i < Fieldsets.length; i++) {\r\n            if (Fieldsets[i] === current_fs) {\r\n                indexOFcurrent_fs = i;\r\n                break;\r\n            }\r\n        }\r\n        //de-activate current step on progressbar\r\n        progressBar.childNodes[indexOFcurrent_fs].classList.remove(\"active\");\r\n        //show the previous fieldset\r\n        previous_fs.style.display = 'block';\r\n        //hide the current fieldset with style\r\n        current_fs.style.display = 'none'\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        let form = this.editVendorForm\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated')\r\n            return\r\n        }\r\n        else if (this.state.bankName === '' || this.state.bankName === null) {\r\n            this.setState({ bankName: null })\r\n            return\r\n        }\r\n        else {\r\n            let { name, email, cell, address, cnic, shopName, shopAddress, shopCell, bankName, branchName, branchCode,\r\n                accountTitle, accountNumber, ibanNumber, roleId, username, password } = this.state\r\n\r\n            let updatedVendor = {\r\n                id: this.vendorId, name: name, email: email, cell: cell, address: address, username: username, password: password,\r\n                cnic: cnic, shopName: shopName, shopAddress: shopAddress, shopCell: shopCell, bankName: bankName.value, branchName: branchName, branchCode: branchCode,\r\n                accountTitle: accountTitle, accountNumber: accountNumber, ibanNumber: ibanNumber\r\n            }\r\n\r\n\r\n            var options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify(updatedVendor),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/updateUser', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    // console.log(json)\r\n                    // this._isMounted && this.setState({ message: json.message, notificationShow: true })\r\n                    if (json.success === true) {\r\n                        let vendor = json.data\r\n                        this.setState({\r\n                            name: '',\r\n                            email: '',\r\n                            cell: '',\r\n                            address: '',\r\n                            cnic: '',\r\n                            shopName: '',\r\n                            shopAddress: '',\r\n                            shopCell: '',\r\n                            bankName: '',\r\n                            branchName: '',\r\n                            branchCode: '',\r\n                            accountTitle: '',\r\n                            accountNumber: '',\r\n                            ibanNumber: '',\r\n                            vendor: vendor\r\n                        })\r\n                        window.location.reload()\r\n                        // this.refs.welcomeVendorModal.setState({ modalShow: true })\r\n                        // console.log(vendor);\r\n                    }\r\n                    else {\r\n                        this.name.focus();\r\n                    }\r\n                    this._isMounted && setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    onChangeLabel = () => {\r\n        this.refs.signUpLabel.innerHTML = ''\r\n    }\r\n\r\n\r\n    render() {\r\n        let { name, email, cell, address, shopName, shopAddress, shopCell, bankName, branchName, branchCode, accountTitle,\r\n            accountNumber, ibanNumber, password } = this.state\r\n\r\n        let bankOptions = [{\r\n            key: 1,\r\n            label: 'HBL',\r\n            value: 'hbl',\r\n            color: '#112648'\r\n        }, {\r\n            key: 2,\r\n            label: 'MCB',\r\n            value: 'mcb',\r\n            color: '#687722'\r\n        },];\r\n\r\n\r\n        return (\r\n            <MDBRow center className='mt-2 p-0'>\r\n                <MDBCol xl='6' lg='8' md='8' sm='10' xs='12' className='p-0 offset-xl-2 offset-lg-2'>\r\n                    <form id=\"msform\" ref={el => this.editVendorForm = el} className='mb-4' onSubmit={this.handleSubmit} noValidate>\r\n\r\n                        {/* <!-- progressbar --> */}\r\n                        <ul id=\"progressbar\" className='fontRaleway text-center'>\r\n                            <li className=\"active\">Personal Details</li>\r\n                            <li>Business Details</li>\r\n                            <li>Bank Details</li>\r\n                        </ul>\r\n\r\n                        {/* <!-- fieldsets --> */}\r\n                        {/* <MDBAnimation type=\"fadeInUp\" > */}\r\n                        <fieldset>\r\n                            <h2 className=\"fs-title text-center\">Personal Details</h2>\r\n                            <h3 className=\"fs-subtitle text-center\">Tell us something about you</h3>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-user-tie inputIcon\" />\r\n                                <input\r\n                                    name=\"name\"\r\n                                    value={name}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.name = el}\r\n                                    required\r\n                                    placeholder='Your Name*'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                />\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-envelope inputIcon\" style={{ paddingLeft: '13px' }}></i>\r\n                                <input\r\n                                    name=\"email\"\r\n                                    value={email}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.email = el}\r\n                                    required\r\n                                    disabled\r\n                                    placeholder='Email'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-mobile-alt inputIcon\" style={{ paddingLeft: '16px' }}></i>\r\n                                <input\r\n                                    name=\"cell\"\r\n                                    value={cell}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.cell = el}\r\n                                    required\r\n                                    placeholder='Phone'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-map-marker-alt inputIcon\" style={{ paddingLeft: '16px' }}></i>\r\n                                <input\r\n                                    name=\"address\"\r\n                                    value={address}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.address = el}\r\n                                    required\r\n                                    placeholder='Address'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-lock inputIcon\" style={{ paddingLeft: '13px' }}></i>\r\n                                <input\r\n                                    name=\"password\"\r\n                                    value={password}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.password = el}\r\n                                    required\r\n                                    placeholder='Your Password*'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                />\r\n                                <p className='colorBlue'> <small className='pl-3 m-0'>You can change your password here.</small></p>\r\n\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <input type=\"button\" name=\"next\" onClick={this.handleNextButtonClick} className=\"next action-button\" value=\"Next\" />\r\n                            </div>\r\n                        </fieldset>\r\n                        {/* </MDBAnimation> */}\r\n                        {/* <MDBAnimation type=\"fadeInUp\" > */}\r\n\r\n                        <fieldset>\r\n                            <h2 className=\"fs-title text-center\">Business Details</h2>\r\n                            <h3 className=\"fs-subtitle text-center\">Your presence in business</h3>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-store inputIcon\" style={{ paddingLeft: '11px' }}></i>\r\n                                <input\r\n                                    name=\"shopName\"\r\n                                    value={shopName}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.shopName = el}\r\n                                    required\r\n                                    placeholder='Shop Name'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-map-marker-alt inputIcon\" style={{ paddingLeft: '16px' }}></i>\r\n                                <input\r\n                                    name=\"shopAddress\"\r\n                                    value={shopAddress}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.shopAddress = el}\r\n                                    required\r\n                                    placeholder='Shop Address'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-mobile-alt inputIcon\" style={{ paddingLeft: '17px' }}></i>\r\n                                <input\r\n                                    name=\"shopCell\"\r\n                                    value={shopCell}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.shopCell = el}\r\n                                    required\r\n                                    placeholder='Shop Phone'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <input type=\"button\" name=\"previous\" onClick={this.handlePreviousButtonClick} className=\"previous action-button-previous\" value=\"Back\" />\r\n                                <input type=\"button\" name=\"next\" onClick={this.handleNextButtonClick} className=\"next action-button\" value=\"Next\" />\r\n                            </div>\r\n                        </fieldset>\r\n                        {/* </MDBAnimation> */}\r\n                        {/* <MDBAnimation type=\"fadeInUp\" > */}\r\n\r\n                        <fieldset>\r\n                            <h2 className=\"fs-title text-center\">Bank Details</h2>\r\n                            <h3 className=\"fs-subtitle text-center\">Fill in your bank account details</h3>\r\n                            <div className='my-3'>\r\n                                <MyOwnSelect\r\n                                    options={bankOptions}\r\n                                    handleChange={this.handleSelectChange}\r\n                                    placeHolder={'Bank Name*'}\r\n                                    selectedValue={bankName}\r\n                                    iconClass={'fa fa-university'}\r\n                                    required={true}\r\n                                    isMulti={false}\r\n                                />\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-hand-holding-usd inputIcon\"></i>\r\n                                <input\r\n                                    name=\"branchName\"\r\n                                    value={branchName}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.branchName = el}\r\n                                    required\r\n                                    placeholder='Branch Name'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-qrcode inputIcon\"></i>\r\n                                <input\r\n                                    name=\"branchCode\"\r\n                                    value={branchCode}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"number\"\r\n                                    ref={el => this.branchCode = el}\r\n                                    required\r\n                                    placeholder='Branch Code'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-book inputIcon\"></i>\r\n                                <input\r\n                                    name=\"accountTitle\"\r\n                                    value={accountTitle}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.accountTitle = el}\r\n                                    required\r\n                                    placeholder='A/C Title'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='my-3'>\r\n                                <i className=\"fa fa-portrait inputIcon\"></i>\r\n                                <input\r\n                                    name=\"accountNumber\"\r\n                                    value={accountNumber}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"number\"\r\n                                    ref={el => this.accountNumber = el}\r\n                                    required\r\n                                    placeholder='A/C #'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='mt-3 '>\r\n                                <i className=\"fa fa-credit-card inputIcon\" style={{ paddingLeft: '11px' }}></i>\r\n                                <input\r\n                                    name=\"ibanNumber\"\r\n                                    value={ibanNumber}\r\n                                    onInput={this.handleInput}\r\n                                    onChange={this.onChangeLabel}\r\n                                    type=\"text\"\r\n                                    ref={el => this.ibanNumber = el}\r\n                                    required\r\n                                    placeholder='IBAN #'\r\n                                    className='fontRaleway inputText pl-5 form-control'\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <div className='text-center'>\r\n                                <label ref='signUpLabel' className='m-0 p-0' style={{ fontFamily: 'monospace', color: 'red' }}></label><br />\r\n                                <input type=\"button\" name=\"previous\" onClick={this.handlePreviousButtonClick} className=\"previous action-button-previous mb-0\" value=\"Back\" />\r\n                                <input type=\"submit\" name=\"submit\" className=\"submit action-button mb-0\" value=\"Submit\" />\r\n                            </div>\r\n                        </fieldset>\r\n                        {/* </MDBAnimation> */}\r\n                    </form>\r\n                </MDBCol>\r\n\r\n            </MDBRow>\r\n        )\r\n    }\r\n}\r\nexport default EditVendor;","import React, { Component } from 'react';\r\nimport EditVendor from './pages/EditVendor';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\n\r\n\r\nclass SecuredEditVendor extends Component {\r\n    loggedIn = false\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/home' />\r\n        }\r\n        else {\r\n            return <Can I='update' a='vendor'><EditVendor {...this.props} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredEditVendor","import React, { Component } from 'react';\r\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBIcon } from\r\n    'mdbreact';\r\n\r\nclass DeleteModal extends Component {\r\n    state = {\r\n        modalShow: false,\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modalShow: !this.state.modalShow,\r\n\r\n        });\r\n    }\r\n\r\n    deleteEntry = () => {\r\n        this.props.deleteEntry();\r\n        this.toggle();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MDBContainer>\r\n                <MDBModal modalStyle=\"danger\" className=\"text-white\" size=\"md\" centered backdrop={true} isOpen={this.state.modalShow}\r\n                    toggle={this.toggle}>\r\n                    <MDBModalHeader className=\"text-center\" titleClass=\"w-100\" tag=\"p\" toggle={this.toggle}>\r\n                        <b>\r\n                            Are you sure?\r\n                        </b><br></br>\r\n                        Record will be deleted permanently.\r\n                    </MDBModalHeader>\r\n                    <MDBModalBody className=\"text-center\">\r\n                        <MDBIcon icon=\"times\" size=\"6x\" className=\"animated rotateIn\" />\r\n                    </MDBModalBody>\r\n                    <MDBModalFooter className=\"justify-content-center\">\r\n                        <MDBBtn color=\"danger\" onClick={this.deleteEntry}>Yes</MDBBtn>\r\n                        <MDBBtn color=\"danger\" outline onClick={this.toggle}>No</MDBBtn>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeleteModal;","import React, { Component } from 'react';\r\nimport { MDBDataTable, MDBCard, MDBCardHeader, MDBCardBody, MDBBtn, MDBIcon } from 'mdbreact';\r\nimport DeleteModal from './DeleteModal'\r\nimport { Can } from \"../../../configs/Ability-context\";\r\n\r\nclass MyOwnListing extends Component {\r\n\r\n\r\n    render() {\r\n        let { cardHeading, permissionEntity, redirectToNewEntityPath, addButtonEntityLabel, tableId, data } = this.props\r\n        let btnStyle = { fontSize: '17px', borderRadius: '4px', color: 'white' }\r\n\r\n        return (\r\n            <MDBCard style={{ marginTop: '50px', borderRadius: '15px' }}>\r\n                <MDBCardHeader tag=\"h3\" className=\"text-center text-white font-weight-bold backGround-green\"\r\n                    style={{ borderTopRightRadius: '15px', borderTopLeftRadius: '15px' }}>\r\n                    {cardHeading}\r\n                </MDBCardHeader>\r\n                <MDBCardBody>\r\n                    {permissionEntity !== 'vendor' && permissionEntity !== 'inventoryHistories' && permissionEntity !== 'orderDetail' && permissionEntity !== 'invoiceDetail' &&\r\n                        < Can I='create' a={permissionEntity}>\r\n                            {/* two buttons used to make it responsive */}\r\n                            <div className='row justify-content-center d-md-none'>\r\n                                <button style={btnStyle} onClick={redirectToNewEntityPath} className='btn py-1 px-2 font-weight-bold backGround-blue borderBlue'>\r\n                                    Add New {addButtonEntityLabel}\r\n                                </button>\r\n                            </div>\r\n                            <div className='row justify-content-end d-none d-md-flex no-gutters'>\r\n                                <button style={btnStyle} onClick={redirectToNewEntityPath} className='btn py-1 px-2 font-weight-bold backGround-blue borderBlue'>\r\n                                    Add New {addButtonEntityLabel}\r\n                                </button>\r\n                            </div>\r\n                        </Can>\r\n                    }\r\n                    <MDBDataTable id={tableId} small hover entriesLabel=\"Show\"\r\n                        bordered searchLabel=\"\" entries={12} entriesOptions={[5, 10, 20, 35, 55, 70, 100, 135]} responsive\r\n                        data={data} theadTextWhite >\r\n                    </MDBDataTable>\r\n                </MDBCardBody>\r\n            </MDBCard >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default MyOwnListing","import React, { Component } from 'react';\r\nimport { MDBBtn, MDBIcon } from 'mdbreact';\r\nimport DeleteModal from '../../misc//components/DeleteModal';\r\nimport { Can } from \"../../../configs/Ability-context\";\r\nimport MyOwnListing from '../components/MyOwnListing'\r\n// import LoaderModal from '../sections/LoaderModal'\r\n\r\n\r\nclass AllPersons extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n        super(props);\r\n        this._isMounted = true\r\n        this.state = {\r\n            allUsers: props.allData.allUsers,\r\n            rowToBeDeleted: '',\r\n            personToBeDeleted: '',\r\n            allRoles: props.allData.allRoles,\r\n            // loaderModalShow: false\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n\r\n    handleEdit = (id) => (e) => {\r\n\r\n        this.props.allPersons === 'Users' &&\r\n            this.props.history.push({ pathname: \"/users/edit\", search: `user=${id}` })\r\n        this.props.allPersons === 'Vendors' &&\r\n            this.props.history.push({ pathname: \"/vendors/edit\", search: `vendor=${id}` })\r\n    }\r\n\r\n    redirectToNewEntityPath = () => {\r\n        this.props.allPersons === 'Users' &&\r\n            this.props.history.push('/users/new')\r\n    }\r\n\r\n    handleDelete = (id) => (e) => {\r\n        let el = e.target\r\n        let row = el.closest('tr')\r\n        var i = row.rowIndex;\r\n        this.setState({\r\n            rowToBeDeleted: i,\r\n            personToBeDeleted: id\r\n        })\r\n        this.refs.deleteModal.setState({\r\n            modalShow: true,\r\n        })\r\n    }\r\n\r\n    deletePerson = () => {\r\n        let { rowToBeDeleted, personToBeDeleted } = this.state\r\n        // let userRole = document.getElementById('personsTable').rows[rowToBeDeleted].cells[6].innerHTML\r\n        let deletePerson = { value: personToBeDeleted }\r\n\r\n        var options = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(deletePerson),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/deleteUser', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json)\r\n                if (json.success) {\r\n                    document.getElementById('allPersonsTable').deleteRow(rowToBeDeleted)\r\n                    // let userId = json.data.id\r\n                    // if (userRole === 'driver') {\r\n                    //     let driver = { driver_id: userId }\r\n                    //     let deleteRouteOptions = {\r\n                    //         method: 'DELETE',\r\n                    //         body: JSON.stringify(driver),\r\n                    //         headers: { 'Content-Type': 'application/json' }\r\n                    //     }\r\n                    //     fetch('/deleteDriverRoutes', deleteRouteOptions)\r\n                    //         .then((res) => res.json())\r\n                    //         .then((json) => {\r\n                    //             // console.log(json)\r\n                    //         })\r\n                    //         .catch((error) => console.log(error))\r\n                    // }\r\n                }\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n\r\n    render() {\r\n        let { allUsers, allRoles } = this.state, rows = [], data, index = 0, { allPersons } = this.props,\r\n            btnStyle = { fontSize: '17px', borderRadius: '50%', border: '2px solid #112648' }\r\n\r\n        switch (allPersons) {\r\n            case 'Users':\r\n                allUsers && allUsers.forEach((user) => {\r\n                    index = index + 1;\r\n                    let currentRole;\r\n                    if (allRoles) {\r\n                        allRoles.forEach(role => {\r\n                            if (role.id === user.role_id) {\r\n                                currentRole = role.name\r\n                            }\r\n                        });\r\n                    }\r\n                    rows.push(\r\n                        {\r\n                            index: index,\r\n                            name: user.name,\r\n                            email: user.email,\r\n                            cell: user.cell,\r\n                            address: user.address,\r\n                            username: currentRole === 'super_admin' ? 'superAdmin' : user.username,\r\n                            // password: user.password,\r\n                            role: currentRole,\r\n                            buttons: <React.Fragment>\r\n                                <Can I='update' a={currentRole === 'super_admin' ? 'superAdmin' : 'user'}>\r\n                                    <MDBBtn style={btnStyle} color='white' onClick={this.handleEdit(user.id)} className='m-1 py-1 px-2' size=\"sm\">\r\n                                        <MDBIcon icon=\"pencil-alt iconGreen\" />\r\n                                    </MDBBtn>\r\n                                </Can>\r\n                                <Can I='delete' a={currentRole === 'super_admin' ? 'superAdmin' : 'user'}>\r\n                                    <MDBBtn style={btnStyle} color='white' onClick={this.handleDelete(user.id)} className='m-1 py-1 px-2' size=\"sm\">\r\n                                        <MDBIcon icon=\"trash iconRed\" />\r\n                                    </MDBBtn>\r\n                                </Can>\r\n                            </React.Fragment>\r\n                        }\r\n                    );\r\n                });\r\n                data = {\r\n                    columns: [\r\n                        { label: '#', field: 'index', }, { label: 'Name', field: 'name' },\r\n                        { label: 'Email', field: 'email', }, { label: 'Cell', field: 'cell', },\r\n                        { label: 'Address', field: 'address', }, { label: 'Username', field: 'username', },\r\n                        { label: 'Role', field: 'role', }, { label: 'Action', field: 'buttons' }\r\n                    ],\r\n                    rows: rows\r\n                }\r\n                break;\r\n            case 'Vendors':\r\n                let roleId;\r\n                if (allRoles) {\r\n                    allRoles.forEach(role => {\r\n                        if (role.name === 'vendor') {\r\n                            roleId = role.id\r\n                        }\r\n                    })\r\n                }\r\n                let allVendors = allUsers && allUsers.filter(user => user.role_id === roleId)\r\n                allVendors.forEach((vendor) => {\r\n                    index = index + 1;\r\n                    rows.push(\r\n                        {\r\n                            index: index,\r\n                            name: vendor.name,\r\n                            email: vendor.email,\r\n                            cell: vendor.cell,\r\n                            address: vendor.address,\r\n                            cnic: vendor.cnic,\r\n                            shopName: vendor.shop_name,\r\n                            shopAddress: vendor.shop_address,\r\n                            shopCell: vendor.shop_cell,\r\n                            bankName: vendor.bank_name,\r\n                            branchName: vendor.branch_name,\r\n                            branchCode: vendor.branch_code,\r\n                            accountTitle: vendor.account_title,\r\n                            accountNo: vendor.account_id,\r\n                            ibanNo: vendor.iban_id,\r\n                            username: vendor.username,\r\n                            // password: user.password,\r\n                            buttons: <React.Fragment>\r\n                                {/* <Can I='read' a='driverInventories'>\r\n                                    <MDBBtn style={{ fontSize: '15px' }} onClick={this.handleViewInventory(driver.id)} className='m-1 py-1 px-2' outline color='secondary' size=\"sm\"><MDBIcon icon=\"boxes\" /></MDBBtn>\r\n                                </Can> */}\r\n                                <Can I='update' a='vendor'>\r\n                                    <MDBBtn style={btnStyle} color='white' onClick={this.handleEdit(vendor.id)} className='m-1 py-1 px-2' size=\"sm\">\r\n                                        <MDBIcon icon=\"pencil-alt iconGreen\" />\r\n                                    </MDBBtn>\r\n                                </Can>\r\n                                <Can I='delete' a='vendor'>\r\n                                    <MDBBtn style={btnStyle} color='white' onClick={this.handleDelete(vendor.id)} className='m-1 py-1 px-2' size=\"sm\">\r\n                                        <MDBIcon icon=\"trash iconRed\" />\r\n                                    </MDBBtn>\r\n                                </Can>\r\n                            </React.Fragment>\r\n                        }\r\n                    );\r\n                });\r\n                data = {\r\n                    columns: [\r\n                        { label: '#', field: 'index', }, { label: 'Name', field: 'name' }, { label: 'Email', field: 'email', }, { label: 'Cell', field: 'cell', },\r\n                        { label: 'Address', field: 'address', }, { label: 'CNIC', field: 'cnic', }, { label: 'Shop', field: 'shopName' },\r\n                        { label: 'Shop-Address', field: 'shopAddress', }, { label: 'Shop-Phone', field: 'shopCell', }, { label: 'Bank', field: 'bankName', },\r\n                        { label: 'Branch', field: 'branchName' }, { label: 'Br. Code', field: 'branchCode', }, { label: 'A/C Title', field: 'accountTitle', },\r\n                        { label: 'A/C #', field: 'accountNo', }, { label: 'IBAN', field: 'ibanNo', }, { label: 'Username', field: 'username', },\r\n                        { label: 'Action', field: 'buttons' }\r\n                    ],\r\n                    rows: rows\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n        return (\r\n            <Can I='read' a={allPersons === 'Users' ? 'user' : 'vendor'}>\r\n                <MyOwnListing\r\n                    cardHeading={allPersons}\r\n                    permissionEntity={allPersons === 'Users' ? 'user' : 'vendor'}\r\n                    redirectToNewEntityPath={this.redirectToNewEntityPath}\r\n                    addButtonEntityLabel={allPersons === 'Users' ? 'User' : ''}\r\n                    tableId='allPersonsTable'\r\n                    data={data}\r\n                />\r\n                <DeleteModal\r\n                    ref='deleteModal'\r\n                    deleteEntry={this.deletePerson}\r\n                />\r\n\r\n                {/* <LoaderModal\r\n                //    show={loaderModalShow}\r\n            // /> */}\r\n            </Can>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AllPersons","import React from 'react';\r\nimport { Can } from \"../../../configs/Ability-context\";\r\nimport AllPersons from '../../misc/pages/AllPersons';\r\n\r\n\r\nconst AllVendors = ({ ...props }) => {\r\n\r\n    return (\r\n        <Can I='read' a='user'>\r\n            <AllPersons allPersons={'Vendors'} {...props} />\r\n        </Can>\r\n    );\r\n}\r\n\r\n\r\nexport default AllVendors","import React, { Component } from 'react';\r\nimport AllVendors from './pages/AllVendors';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\nclass SecuredAllVendors extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='read' a='vendor'> <AllVendors {...this.props} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredAllVendors","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport SecuredSignupVendor from './SecuredSignupVendor';\r\nimport SecuredEditVendor from './SecuredEditVendor';\r\nimport SecuredAllVendors from './SecuredAllVendors';\r\nimport NotFound from '../misc/pages/NotFound'\r\n\r\n\r\nconst Vendors = ({ allData }) => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/vendors/signup\" render={(routeProps) => <SecuredSignupVendor {...routeProps} allData={allData} />} />\r\n            <Route path=\"/vendors/edit\" render={() => <SecuredEditVendor allData={allData} />} />\r\n            <Route path=\"/vendors/all\" render={(routeProps) => <SecuredAllVendors {...routeProps} allData={allData} />} />\r\n            <Route render={() => <NotFound />} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\n\r\nexport default Vendors","import React from 'react';\r\n// import { Can } from '../../../configs/Ability-context'\r\nimport { MDBNavLink } from 'mdbreact';\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        < React.Fragment >\r\n            {/* {displaySidebar()} */}\r\n            {/* <MDBNavLink to='/users/permissions/new'>Create Permission</MDBNavLink> */}\r\n            <MDBNavLink to='/users/roles/new'>Create Role</MDBNavLink>\r\n            <MDBNavLink to='/users/new'>Create User</MDBNavLink>\r\n            <MDBNavLink to='/products/brands/new'>Create Brand</MDBNavLink>\r\n            <MDBNavLink to='/products/categories/new'>Create Product-Category</MDBNavLink>\r\n            <MDBNavLink to='/products/new'>Create Product</MDBNavLink>\r\n            <MDBNavLink to='/inventories/update'>Update Inventory</MDBNavLink>\r\n            <MDBNavLink to={{ pathname: \"/orders/new\", search: `type=sale` }}>Create Sale</MDBNavLink>\r\n            <MDBNavLink to='/orders/all'>All Order</MDBNavLink>\r\n            <MDBNavLink to='/orders/order_details'>All Order-Details</MDBNavLink>\r\n\r\n        </React.Fragment >\r\n    )\r\n}\r\n\r\nexport default Home","import React, { Component } from 'react';\r\nimport Home from './pages/Home';\r\nimport { Redirect } from 'react-router'\r\n\r\n\r\nclass SecuredHome extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            \r\n            return <Home allData={this.props.allData} />\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredHome","import React, { Component } from 'react';\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\nimport { Can } from '../../../configs/Ability-context'\r\nimport MyOwnSelect from '../../misc/components/MyOwnSelect'\r\n\r\n\r\nclass NewUser extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this._isMounted = true\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            cell: '',\r\n            address: '',\r\n            username: '',\r\n            password: '',\r\n            selectedRole: '',\r\n            notificationMessage: '',\r\n            notificationShow: false\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectChange = (selectedOption) => {\r\n        this.setState({\r\n            selectedRole: selectedOption\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let form = this.refs.newUserForm\r\n        if (!this.state.selectedRole) {\r\n            this.setState({ selectedRole: null })\r\n            return\r\n        }\r\n        else if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n            return\r\n        }\r\n        else {\r\n            let { selectedRole, name, email, cell, address, username, password } = this.state\r\n            let newUser = { roleId: selectedRole.value, name: name, email: email, cell: cell, address: address, username: username, password: password }\r\n\r\n            var options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(newUser),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/addNewUser', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    console.log(json)\r\n                    // this._isMounted && this.setState({ message: json.message, notificationShow: true })\r\n                    if (json.success === true) {\r\n                        this.setState({\r\n                            name: '',\r\n                            email: '',\r\n                            cell: '',\r\n                            address: '',\r\n                            username: '',\r\n                            password: '',\r\n                            selectedRole: '',\r\n                        })\r\n                    }\r\n                    else {\r\n                        this.username.focus();\r\n                    }\r\n                    // this._isMounted && setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { name, email, cell, address, username, password, selectedRole } = this.state\r\n        let { allData } = this.props\r\n\r\n\r\n        // let roleOptions = allData.allRoles && allData.allRoles.map(role => (role.name.toLowerCase() !== 'vendor' && {\r\n        //     key: role.id,\r\n        //     label: role.name,\r\n        //     value: role.id,\r\n        //     color: role.id % 2 === 0 ?\r\n        //         '#112648' : '#687722'\r\n        // }));\r\n\r\n        return (\r\n            <Can I='create' a='user' >\r\n                <MDBRow center className='mt-5 p-0'>\r\n                    <MDBCol xl='4' lg='5' md='6' sm='8' xs='10'\r\n                    //  className=' offset-xl-2 offset-lg-3 offset-md-3'\r\n                     >\r\n                        <form ref='newUserForm' className='mb-4' onSubmit={this.handleSubmit} noValidate>\r\n                            <fieldset className='w-100'>\r\n                                <h2 className=\"fontRaleway colorGreen font-weight-bold mb-4 text-center\">New User</h2>\r\n                                <div className='mb-2'>\r\n                                    <MyOwnSelect\r\n                                        // options={roleOptions}\r\n                                        Entities={allData.allRoles}\r\n                                        handleChange={this.handleSelectChange}\r\n                                        placeHolder={'Select Role..*'}\r\n                                        selectedValue={selectedRole}\r\n                                        iconClass={'fa fa-user-tag'}\r\n                                        required={true}\r\n                                        isMulti={false}\r\n                                        isOptionDisabled={(option) => option.label.toLowerCase() === 'vendor'}\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-edit inputIcon\" />\r\n                                    <input\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.name = el}\r\n                                        required\r\n                                        placeholder='Name*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    {/* <p style={{ textAlign: 'left' }}> <small className='pl-4 m-0 text-muted'>*e.g. john doe</small></p> */}\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-envelope inputIcon\" />\r\n                                    <input\r\n                                        name=\"email\"\r\n                                        value={email}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"email\"\r\n                                        ref={el => this.email = el}\r\n                                        required\r\n                                        placeholder='Email*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    <div className='invalid-feedback ml-2 p-0'><small>Please enter a valid email.</small></div>\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-phone inputIcon\" />\r\n                                    <input\r\n                                        name=\"cell\"\r\n                                        value={cell}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.cell = el}\r\n                                        placeholder='Cell'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-map-marker-alt inputIcon\" />\r\n                                    <input\r\n                                        name=\"address\"\r\n                                        value={address}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.address = el}\r\n                                        placeholder='Address'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-user inputIcon\" />\r\n                                    <input\r\n                                        name=\"username\"\r\n                                        value={username}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.username = el}\r\n                                        required\r\n                                        placeholder='Username'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-lock inputIcon\" />\r\n                                    <input\r\n                                        name=\"password\"\r\n                                        value={password}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.password = el}\r\n                                        required\r\n                                        placeholder='Password*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                </div>\r\n                                <div className='text-center'>\r\n                                    <input type=\"submit\" className=\"next action-button\" value=\"Create..\" />\r\n                                </div>\r\n                            </fieldset>\r\n                        </form>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n\r\n                {/* {\r\n                    this.state.notificationShow ?\r\n                        <MDBAnimation type=\"fadeInUp\" >\r\n                            <Notification\r\n                                message={this.state.notificationMessage}\r\n                                icon={\"bell\"}\r\n                            />\r\n                        </MDBAnimation>\r\n                        : null\r\n                } */}\r\n            </Can >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NewUser","import React, { Component } from 'react';\r\nimport NewUser from './pages/NewUser';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\n\r\nclass SecuredNewUser extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n        let { allData } = this.props\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='create' a='user'><NewUser allData={allData} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredNewUser","import React from 'react';\r\nimport { Can } from \"../../../configs/Ability-context\";\r\nimport AllPersons from '../../misc/pages/AllPersons';\r\n\r\n\r\nconst AllUsers = ({ ...props }) => {\r\n    return (\r\n        <Can I='read' a='user'>\r\n            <AllPersons allPersons={'Users'} {...props} />\r\n        </Can>\r\n    );\r\n}\r\n\r\n\r\nexport default AllUsers","import React, { Component } from 'react';\r\nimport AllUsers from './pages/AllUsers';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\nclass SecuredAllUsers extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='read' a='user'> <AllUsers {...this.props} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredAllUsers","import React, { Component } from 'react';\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\nimport { Can } from '../../../configs/Ability-context'\r\nimport MyOwnSelect from '../../misc/components/MyOwnSelect'\r\n\r\n\r\nclass EditUser extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n        super(props);\r\n        this._isMounted = true\r\n        let params = new URLSearchParams(window.location.search), { allData } = props\r\n        this.userId = Number(params.get('user'))\r\n        let userToBeEdited = allData.allUsers && allData.allUsers.filter(user => user.id === this.userId).shift(),\r\n            roleToBeEdited = userToBeEdited && allData.allRoles && allData.allRoles.filter(role => role.id === userToBeEdited.role_id).shift()\r\n        // console.log(userToBeEdited);\r\n\r\n        this.selectedRole = roleToBeEdited && {\r\n            key: roleToBeEdited.id,\r\n            label: roleToBeEdited.name,\r\n            value: roleToBeEdited.id,\r\n            color: roleToBeEdited.id % 2 === 0 ?\r\n                '#112648' : '#687722'\r\n        }\r\n        this.selectedBankName = roleToBeEdited.name === 'vendor' && {\r\n            key: userToBeEdited.id,\r\n            label: userToBeEdited.bank_name,\r\n            value: userToBeEdited.bank_name,\r\n            color: userToBeEdited.id % 2 === 0 ?\r\n                '#112648' : '#687722'\r\n        }\r\n        this.state = {\r\n            name: userToBeEdited && userToBeEdited.name,\r\n            email: userToBeEdited && userToBeEdited.email,\r\n            cell: userToBeEdited && userToBeEdited.cell,\r\n            address: userToBeEdited && userToBeEdited.address,\r\n            username: userToBeEdited && userToBeEdited.username,\r\n            password: userToBeEdited && userToBeEdited.password,\r\n            // allRoles: props.allData.allRoles,\r\n            selectedRole: '',\r\n            cnic: roleToBeEdited.name === 'vendor' ? userToBeEdited.cnic : '',\r\n            shopName: roleToBeEdited.name === 'vendor' ? userToBeEdited.shop_name : '',\r\n            shopAddress: roleToBeEdited.name === 'vendor' ? userToBeEdited.shop_address : '',\r\n            shopCell: roleToBeEdited.name === 'vendor' ? userToBeEdited.shop_cell : '',\r\n            bankName: '',\r\n            branchName: roleToBeEdited.name === 'vendor' ? userToBeEdited.branch_name : '',\r\n            branchCode: roleToBeEdited.name === 'vendor' ? userToBeEdited.branch_code : '',\r\n            accountTitle: roleToBeEdited.name === 'vendor' ? userToBeEdited.account_title : '',\r\n            accountNumber: roleToBeEdited.name === 'vendor' ? userToBeEdited.account_id : '',\r\n            ibanNumber: roleToBeEdited.name === 'vendor' ? userToBeEdited.iban_id : '',\r\n            notificationMessage: '',\r\n            notificationShow: false,\r\n            editingVendor: false,\r\n            retailPricePercent: roleToBeEdited.name === 'vendor' ? userToBeEdited.retail_price_percent : '',\r\n            costPricePercent: roleToBeEdited.name === 'vendor' ? userToBeEdited.cost_price_percent : '',\r\n        };\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onKeyPress = (e) => {\r\n        if ((e.which) === 101 || (e.which) === 45 || (e.which === 43)) e.preventDefault();\r\n    }\r\n\r\n    handleSelectChange = (selectedOption) => {\r\n        this.setState({\r\n            selectedRole: selectedOption,\r\n            editingVendor: selectedOption.label.toLowerCase() === 'vendor' ? true : false\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.handleSelectChange(this.selectedRole)\r\n        this.setState({ bankName: this.selectedBankName })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let form = this.refs.editUserForm\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n            return\r\n        }\r\n        else if (!this.state.selectedRole) {\r\n            this.setState({ selectedRole: null })\r\n            return\r\n        }\r\n        else if (this.state.editingVendor && !this.state.bankName) {\r\n            this.setState({ bankName: null })\r\n            return\r\n        }\r\n        else {\r\n\r\n            let {\r\n                selectedRole, name, email, cell, address, username, password, cnic, shopName, shopCell, shopAddress, bankName,\r\n                branchName, branchCode, accountNumber, accountTitle, ibanNumber, editingVendor, costPricePercent, retailPricePercent\r\n            } = this.state\r\n            let updatedVendor = {\r\n                id: this.userId, name: name, email: email, cell: cell, address: address, password: password,\r\n                cnic: cnic, shopName: shopName, shopAddress: shopAddress, shopCell: shopCell, bankName: bankName.value, branchName: branchName, branchCode: branchCode,\r\n                accountTitle: accountTitle, accountNumber: accountNumber, ibanNumber: ibanNumber, username: username, costPricePercent: Number(costPricePercent),\r\n                retailPricePercent: Number(retailPricePercent)\r\n            },\r\n                updatedUser = {\r\n                    id: this.userId, name: name, email: email, cell: cell, address: address, username: username, password: password,\r\n                    cnic: null, shopName: null, shopAddress: null, shopCell: null, bankName: null, branchName: null, branchCode: null,\r\n                    accountTitle: null, accountNumber: null, ibanNumber: null, roleId: selectedRole.value\r\n                }\r\n\r\n            let options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify(editingVendor ? updatedVendor : updatedUser),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/updateUser', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    console.log(json)\r\n                    // this._isMounted && this.setState({ message: json.message, notificationShow: true })\r\n                    if (json.success === true) {\r\n                        this.setState({\r\n                            name: '',\r\n                            email: '',\r\n                            cell: '',\r\n                            address: '',\r\n                            username: '',\r\n                            password: '',\r\n                            selectedRole: '',\r\n                            cnic: '',\r\n                            shopName: '',\r\n                            shopAddress: '',\r\n                            shopCell: '',\r\n                            bankName: '',\r\n                            branchName: '',\r\n                            branchCode: '',\r\n                            accountTitle: '',\r\n                            accountNumber: '',\r\n                            ibanNumber: '',\r\n                            retailPricePercent: '',\r\n                            costPricePercent: ''\r\n                        })\r\n                        // window.location.reload();\r\n                    }\r\n                    else {\r\n                        this.username.focus();\r\n                    }\r\n                    // this._isMounted && setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let { selectedRole, name, email, cell, address, username, password, cnic, shopName, shopCell, shopAddress, bankName,\r\n            branchName, branchCode, accountNumber, accountTitle, ibanNumber, editingVendor, costPricePercent, retailPricePercent } = this.state\r\n        let { allData } = this.props\r\n\r\n        let bankOptions = [{\r\n            key: 1,\r\n            label: 'HBL',\r\n            value: 'HBL',\r\n            color: '#112648'\r\n        }, {\r\n            key: 2,\r\n            label: 'MCB',\r\n            value: 'MCB',\r\n            color: '#687722'\r\n        },];\r\n\r\n        return (\r\n            <Can I='update' a='user' >\r\n                {/* <MDBCol > */}\r\n                <form ref='editUserForm' className='mb-4 mt-4 p-0' onSubmit={this.handleSubmit} noValidate>\r\n                    <MDBRow center >\r\n                        <MDBCol xl='4' lg='5' md='6' sm='8' xs='10' >\r\n                            <fieldset className='w-100 pb-0'>\r\n                                <h2 className=\"fontRaleway colorGreen font-weight-bold mb-4 text-center\">Edit User</h2>\r\n                                <div className='mb-2'>\r\n                                    <MyOwnSelect\r\n                                        // options={roleOptions}\r\n                                        Entities={allData.allRoles}\r\n                                        handleChange={this.handleSelectChange}\r\n                                        placeHolder={'Select Role..*'}\r\n                                        selectedValue={selectedRole}\r\n                                        iconClass={'fa fa-user-tag'}\r\n                                        required={true}\r\n                                        isMulti={false}\r\n                                        isOptionDisabled={(option) => option.label.toLowerCase() === 'vendor'}\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-edit inputIcon\" />\r\n                                    <input\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.name = el}\r\n                                        required\r\n                                        placeholder='Name*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    {/* <p style={{ textAlign: 'left' }}> <small className='pl-4 m-0 text-muted'>*e.g. john doe</small></p> */}\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-envelope inputIcon\" />\r\n                                    <input\r\n                                        name=\"email\"\r\n                                        value={email || ''}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"email\"\r\n                                        ref={el => this.email = el}\r\n                                        required\r\n                                        placeholder='Email*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    <div className='invalid-feedback ml-2 p-0'><small>Please enter a valid email.</small></div>\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-phone inputIcon\" />\r\n                                    <input\r\n                                        name=\"cell\"\r\n                                        value={cell || ''}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.cell = el}\r\n                                        placeholder='Cell'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-map-marker-alt inputIcon\" />\r\n                                    <input\r\n                                        name=\"address\"\r\n                                        value={address || ''}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.address = el}\r\n                                        placeholder='Address'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                </div>\r\n                                {!editingVendor ?\r\n                                    <div className='mb-2'>\r\n                                        <i className=\"fa fa-user inputIcon\" />\r\n                                        <input\r\n                                            name=\"username\"\r\n                                            value={username}\r\n                                            onInput={this.handleInput}\r\n                                            onChange={() => { }}\r\n                                            type=\"text\"\r\n                                            ref={el => this.username = el}\r\n                                            required\r\n                                            placeholder='Username'\r\n                                            className='fontRaleway inputText pl-5 form-control'\r\n                                        />\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-lock inputIcon\" />\r\n                                    <input\r\n                                        name=\"password\"\r\n                                        value={password}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.password = el}\r\n                                        required\r\n                                        placeholder='Password*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                </div>\r\n                                {editingVendor ?\r\n                                    <>\r\n                                        <div className='mb-2'>\r\n                                            <i className=\"fa fa-id-card inputIcon\" style={{ paddingLeft: '13px' }}></i>\r\n                                            <input\r\n                                                name=\"cnic\"\r\n                                                value={cnic}\r\n                                                onInput={this.handleInput}\r\n                                                type=\"text\"\r\n                                                onChange={() => { }}\r\n                                                ref={el => this.cnic = el}\r\n                                                pattern=\"^[0-9]{13}\"\r\n                                                required\r\n                                                placeholder='CNIC'\r\n                                                maxLength='13'\r\n                                                className='fontRaleway inputText pl-5 form-control'\r\n                                            />\r\n                                            <p className='invalid-feedback'> <small className='pl-3 m-0'>CNIC must follow the '0000000000000' format !</small></p>\r\n                                        </div>\r\n                                        <div className='mb-2'>\r\n                                            <i className=\"fa fa-store inputIcon\" style={{ paddingLeft: '11px' }}></i>\r\n                                            <input\r\n                                                name=\"shopName\"\r\n                                                value={shopName}\r\n                                                onInput={this.handleInput}\r\n                                                onChange={() => { }}\r\n                                                type=\"text\"\r\n                                                ref={el => this.shopName = el}\r\n                                                required\r\n                                                placeholder='Shop Name'\r\n                                                className='fontRaleway inputText pl-5 form-control'\r\n                                            >\r\n                                            </input>\r\n                                        </div>\r\n                                        <div className='m-0'>\r\n                                            <i className=\"fa fa-map-marker-alt inputIcon\" style={{ paddingLeft: '16px' }}></i>\r\n                                            <input\r\n                                                name=\"shopAddress\"\r\n                                                value={shopAddress}\r\n                                                onInput={this.handleInput}\r\n                                                onChange={() => { }}\r\n                                                type=\"text\"\r\n                                                ref={el => this.shopAddress = el}\r\n                                                required\r\n                                                placeholder='Shop Address'\r\n                                                className='fontRaleway inputText pl-5 form-control'\r\n                                            >\r\n                                            </input>\r\n                                        </div>\r\n                                        <div className='mb-2 pb-1'>\r\n                                            <h3 className='font-weight-bold colorBlue text-right m-0 p-0'>....</h3>\r\n                                        </div>\r\n                                    </>\r\n                                    : null\r\n                                }\r\n                                {!editingVendor ?\r\n                                    <div className='text-center'>\r\n                                        <input type=\"submit\" className=\"next action-button\" value=\"Update..\" />\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                            </fieldset>\r\n                        </MDBCol>\r\n                        <MDBCol xl='4' lg='5' md='6' sm='8' xs='10' style={{ display: editingVendor ? '' : 'none' }}>\r\n                            <fieldset className='w-100 pb-2 pt-0' >\r\n                                <div className='mt-1 mb-3 p-0'>\r\n                                    <h3 className='font-weight-bold colorBlue text-left m-0'>....</h3>\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-mobile-alt inputIcon\" style={{ paddingLeft: '17px' }}></i>\r\n                                    <input\r\n                                        name=\"shopCell\"\r\n                                        value={shopCell}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.shopCell = el}\r\n                                        required\r\n                                        placeholder='Shop Phone'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <MyOwnSelect\r\n                                        options={bankOptions}\r\n                                        handleChange={this.handleSelectChange}\r\n                                        placeHolder={'Bank Name*'}\r\n                                        selectedValue={bankName}\r\n                                        iconClass={'fa fa-university'}\r\n                                        required={true}\r\n                                        isMulti={false}\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-hand-holding-usd inputIcon\"></i>\r\n                                    <input\r\n                                        name=\"branchName\"\r\n                                        value={branchName}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.branchName = el}\r\n                                        required\r\n                                        placeholder='Branch Name'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-qrcode inputIcon\"></i>\r\n                                    <input\r\n                                        name=\"branchCode\"\r\n                                        value={branchCode}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"number\"\r\n                                        ref={el => this.branchCode = el}\r\n                                        required\r\n                                        placeholder='Branch Code'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-book inputIcon\"></i>\r\n                                    <input\r\n                                        name=\"accountTitle\"\r\n                                        value={accountTitle}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.accountTitle = el}\r\n                                        required\r\n                                        placeholder='A/C Title'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-portrait inputIcon\"></i>\r\n                                    <input\r\n                                        name=\"accountNumber\"\r\n                                        value={accountNumber}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"number\"\r\n                                        ref={el => this.accountNumber = el}\r\n                                        required\r\n                                        placeholder='A/C #'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n                                <div className='mb-2 '>\r\n                                    <i className=\"fa fa-credit-card inputIcon\" style={{ paddingLeft: '11px' }}></i>\r\n                                    <input\r\n                                        name=\"ibanNumber\"\r\n                                        value={ibanNumber}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.ibanNumber = el}\r\n                                        required\r\n                                        placeholder='IBAN #'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n                                <div className='mb-2 '>\r\n                                    <i className=\"fa fa-percentage inputIcon\" style={{ paddingLeft: '11px' }}></i>\r\n                                    <input\r\n                                        name=\"retailPricePercent\"\r\n                                        value={retailPricePercent}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        pattern=\"^[0-9]+(\\.[0-9][0-9]?)?\"\r\n                                        type=\"number\"\r\n                                        ref={el => this.retailPricePercent = el}\r\n                                        onKeyPress={this.onKeyPress}\r\n                                        placeholder='Retail-Price %'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n                                <div className='mb-2 '>\r\n                                    <i className=\"fa fa-percentage inputIcon\" style={{ paddingLeft: '11px' }}></i>\r\n                                    <input\r\n                                        name=\"costPricePercent\"\r\n                                        value={costPricePercent}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        pattern=\"^[0-9]+(\\.[0-9][0-9]?)?\"\r\n                                        type=\"number\"\r\n                                        ref={el => this.costPricePercent = el}\r\n                                        onKeyPress={this.onKeyPress}\r\n                                        placeholder='Cost-Price %'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n                                <div className='text-center mb-0'>\r\n                                    <input type=\"submit\" className=\"next action-button\" value=\"Update..\" />\r\n                                </div>\r\n                            </fieldset>\r\n                        </MDBCol>\r\n                    </MDBRow>\r\n                </form>\r\n                {/* {\r\n                    this.state.notificationShow ?\r\n                    <MDBAnimation type=\"fadeInUp\" >\r\n                    <Notification\r\n                                message={this.state.notificationMessage}\r\n                                icon={\"bell\"}\r\n                            />\r\n                        </MDBAnimation>\r\n                        : null\r\n                } */}\r\n            </Can >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default EditUser","import React, { Component } from 'react';\r\nimport EditUser from './pages/EditUser';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\n\r\nclass SecuredEditUser extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n        let { allData } = this.props\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='update' a='user'><EditUser allData={allData} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredEditUser","import React, { Component } from 'react';\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\n// import Notification from '../../misc/sections/Notification';\r\nimport { Can } from '../../../../configs/Ability-context'\r\nimport MyOwnSelect from '../../../misc/components/MyOwnSelect'\r\n\r\n\r\n\r\nclass NewRole extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n        super(props);\r\n        this._isMounted = true\r\n        this.state = {\r\n            name: '',\r\n            // allPermissions: props.allData.allPermissions,\r\n            selectedPermissions: [],\r\n            notificationMessage: '',\r\n            notificationShow: false\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectChange = (selectedOption) => {\r\n        this.setState({\r\n            selectedPermissions: selectedOption\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        let form = this.refs.newRoleForm\r\n\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n            return\r\n        }\r\n        else if (!this.state.selectedPermissions || this.state.selectedPermissions.length === 0) {\r\n            this.setState({ selectedPermissions: null })\r\n            return\r\n        }\r\n        else {\r\n            let { name, selectedPermissions } = this.state\r\n\r\n            let newRole = { name: name.toLowerCase() }\r\n            let options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(newRole),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/addNewRole', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    // console.log(json)\r\n                    // this._isMounted && this.setState({ message: json.message, notificationShow: true });\r\n                    if (json.success) {\r\n                        let RolePermissions = [], roleId = json.data.id;\r\n                        selectedPermissions.forEach(permission => {\r\n                            let permissionId = permission.value\r\n                            RolePermissions.push({ role_id: roleId, permission_id: permissionId })\r\n                        })\r\n                        let rolePermissions = { RolePermissions: RolePermissions }\r\n                        var options = {\r\n                            method: 'POST',\r\n                            body: JSON.stringify(rolePermissions),\r\n                            headers: { 'Content-Type': 'application/json' }\r\n                        }\r\n                        fetch('/addNewRolePermissions', options)\r\n                            .then((res) => res.json())\r\n                            .then((json) => {\r\n                                // console.log(json)\r\n                                this.setState({\r\n                                    name: '',\r\n                                    selectedPermissions: []\r\n                                })\r\n                                window.location.reload();\r\n                            })\r\n                            .catch((error) => console.log(error))\r\n                    }\r\n                    else {\r\n                        this.name.focus();\r\n                    }\r\n                    // this._isMounted && setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { name, selectedPermissions } = this.state\r\n        let { allData } = this.props\r\n        let permissionOptions = allData.allPermissions && allData.allPermissions.map(permission => ({\r\n            key: permission.id,\r\n            label: permission.slug,\r\n            value: permission.id,\r\n            color: permission.id % 2 === 0 ?\r\n                '#112648' : '#687722'\r\n        }));\r\n\r\n        return (\r\n            <Can I='create' a='role' >\r\n                <MDBRow center className='mt-5 p-0'>\r\n                    <MDBCol xl='4' lg='5' md='6' sm='8' xs='10'>\r\n                        <form ref='newRoleForm' onSubmit={this.handleSubmit} noValidate>\r\n\r\n                            <fieldset className='w-100'>\r\n                                <h2 className=\"fontRaleway colorGreen font-weight-bold mb-5 text-center\">New Role</h2>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-edit inputIcon\" />\r\n                                    <input\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.name = el}\r\n                                        required\r\n                                        placeholder='Name*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    <p style={{ textAlign: 'left' }}> <small className='pl-4 m-0 text-muted'>*e.g. admin</small></p>\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <MyOwnSelect\r\n                                        options={permissionOptions}\r\n                                        handleChange={this.handleSelectChange}\r\n                                        placeHolder={'Select Permissions..'}\r\n                                        selectedValue={selectedPermissions}\r\n                                        iconClass={'fa fa-exclamation-circle'}\r\n                                        required={true}\r\n                                        isMulti={true}\r\n                                    />\r\n                                </div>\r\n                                <div className='text-center'>\r\n                                    <input type=\"submit\" name=\"next\" className=\"next action-button\" value=\"Create..\" />\r\n                                </div>\r\n                            </fieldset>\r\n                        </form>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n\r\n                {/* {\r\n                    this.state.notificationShow ?\r\n                        <MDBAnimation type=\"fadeInUp\" >\r\n                            <Notification\r\n                                message={this.state.notificationMessage}\r\n                                icon={\"bell\"}\r\n                            />\r\n                        </MDBAnimation>\r\n                        : null\r\n                } */}\r\n            </Can >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NewRole","import React, { Component } from 'react';\r\nimport NewRole from './pages/NewRole';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\n\r\nclass SecuredNewRole extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user !== null ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n        let { allData } = this.props\r\n        if (this.loggedIn === false) {\r\n\r\n            return <Redirect to='/home' />\r\n        }\r\n        else {\r\n            return <Can I='create' a='role'>\r\n                <NewRole allData={allData} />\r\n            </Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredNewRole","import React, { Component } from 'react';\r\nimport { MDBBtn, MDBIcon } from 'mdbreact';\r\nimport DeleteModal from '../../../misc/components/DeleteModal';\r\nimport { Can } from \"../../../../configs/Ability-context\";\r\nimport MyOwnListing from '../../../misc/components/MyOwnListing'\r\n\r\n\r\nclass AllRoles extends Component {\r\n    _isMounted = false\r\n    constructor() {\r\n        super();\r\n        this._isMounted = true\r\n\r\n        this.state = {\r\n            rowToBeDeleted: '',\r\n            roleToBeDeleted: '',\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleEdit = (id) => (e) => {\r\n        this.props.history.push({ pathname: \"/users/roles/edit\", search: `role=${id}` })\r\n    }\r\n\r\n    redirectToNewEntityPath = () => {\r\n        this.props.history.push('/users/roles/new')\r\n    }\r\n\r\n    handleDelete = (id) => (e) => {\r\n        let el = e.target\r\n        let row = el.closest('tr')\r\n        var i = row.rowIndex;\r\n        this.setState({\r\n            rowToBeDeleted: i,\r\n            roleToBeDeleted: id\r\n        })\r\n        this.refs.deleteModal.setState({\r\n            modalShow: true,\r\n        })\r\n    }\r\n\r\n    deleteRole = () => {\r\n        let { rowToBeDeleted, roleToBeDeleted } = this.state\r\n        let deleteRole = { value: roleToBeDeleted }\r\n\r\n        var options = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(deleteRole),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/deleteRole', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                json.success && document.getElementById('allRolesTable').deleteRow(rowToBeDeleted)\r\n                // console.log(json)\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let { allData } = this.props, rows = [], index = 0,\r\n            btnStyle = { fontSize: '17px', borderRadius: '50%', border: '2px solid #112648' };\r\n\r\n        allData.allRoles && allData.allRoles.forEach((role) => {\r\n\r\n            index = index + 1;\r\n            rows.push(\r\n                {\r\n                    index: index,\r\n                    name: role.name,\r\n                    buttons: <React.Fragment>\r\n                        <Can I='update' a='role'>\r\n                            <MDBBtn style={btnStyle} color='white' onClick={this.handleEdit(role.id)} className='m-1 py-1 px-2' size=\"sm\">\r\n                                <MDBIcon icon=\"pencil-alt iconGreen\" />\r\n                            </MDBBtn>\r\n                        </Can>\r\n                        <Can I='delete' a='role'>\r\n                            <MDBBtn style={btnStyle} color='white' onClick={this.handleDelete(role.id)} className='m-1 py-1 px-2' size=\"sm\">\r\n                                <MDBIcon icon=\"trash iconRed\" />\r\n                            </MDBBtn>\r\n                        </Can>\r\n                    </React.Fragment>\r\n                }\r\n            );\r\n        });\r\n\r\n        let data = {\r\n            columns: [\r\n                { label: '#', field: 'index', }, { label: 'Name', field: 'name' },\r\n                { label: 'Action', field: 'buttons' }\r\n            ],\r\n            rows: rows\r\n        }\r\n        return (\r\n            <Can I='read' a='role'>\r\n                <MyOwnListing\r\n                    cardHeading={`Users' Roles`}\r\n                    permissionEntity='role'\r\n                    redirectToNewEntityPath={this.redirectToNewEntityPath}\r\n                    addButtonEntityLabel='Role'\r\n                    tableId='allRolesTable'\r\n                    data={data}\r\n                />\r\n                <DeleteModal\r\n                    ref='deleteModal'\r\n                    deleteEntry={this.deleteRole}\r\n                />\r\n\r\n                {/* <LoaderModal\r\n                //    show={loaderModalShow}\r\n            // /> */}\r\n            </Can>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AllRoles","import React, { Component } from 'react';\r\nimport AllRoles from './pages/AllRoles';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\nclass SecuredAllRoles extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user !== null ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n        if (this.loggedIn === false) {\r\n\r\n            return <Redirect to='/home' />\r\n        }\r\n        else {\r\n            return <Can I='read' a='role'>\r\n                <AllRoles {...this.props} />\r\n            </Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredAllRoles","import React, { Component } from 'react';\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\n// import Notification from '../../misc/sections/Notification';\r\nimport { Can } from '../../../../configs/Ability-context'\r\nimport MyOwnSelect from '../../../misc/components/MyOwnSelect'\r\n\r\n\r\nclass EditRole extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n        super(props);\r\n        this._isMounted = true\r\n        let params = new URLSearchParams(window.location.search), { allData } = props\r\n        this.roleId = Number(params.get('role'))\r\n\r\n        let roleToBeEdited = allData.allRoles && allData.allRoles.filter(role => role.id === this.roleId).shift(),\r\n            thisRolesPermissions = allData.allRolePermissions && allData.allRolePermissions.filter(rolePermission => rolePermission.role_id === this.roleId),\r\n            permissionsToBeEdited = []\r\n\r\n        thisRolesPermissions && thisRolesPermissions.forEach(rolePermission => {\r\n            allData.allPermissions && allData.allPermissions.forEach(permission => {\r\n                if (permission.id === rolePermission.permission_id) {\r\n                    permissionsToBeEdited.push(permission);\r\n                }\r\n            })\r\n        })\r\n        // console.log(roleToBeEdited);\r\n        // console.log(permissionsToBeEdited);\r\n\r\n        this.state = {\r\n            name: roleToBeEdited && roleToBeEdited.name,\r\n            selectedPermissions: permissionsToBeEdited.map(permission => ({\r\n                key: permission.id,\r\n                label: permission.slug,\r\n                value: permission.id,\r\n                color: permission.id % 2 === 0 ?\r\n                    '#112648' : '#687722'\r\n            })),\r\n            notificationMessage: '',\r\n            notificationShow: false\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectChange = (selectedOption) => {\r\n        this.setState({\r\n            selectedPermissions: selectedOption\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        let form = this.refs.editRoleForm\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n            return\r\n        }\r\n        else if (!this.state.selectedPermissions || this.state.selectedPermissions.length === 0) {\r\n            this.setState({ selectedPermissions: null })\r\n            return\r\n        }\r\n        else {\r\n            let { selectedPermissions } = this.state\r\n\r\n            let reqBody = { roleId: this.roleId }\r\n            let options = {\r\n                method: 'DELETE',\r\n                body: JSON.stringify(reqBody),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/deleteAllRolePermissions', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    // console.log(json)\r\n                    // this._isMounted && this.setState({ message: json.message, notificationShow: true });\r\n                    if (json.success) {\r\n                        let RolePermissions = [], roleId = this.roleId;\r\n                        selectedPermissions.forEach(permission => {\r\n                            let permissionId = permission.value\r\n                            RolePermissions.push({ role_id: roleId, permission_id: permissionId })\r\n                        })\r\n                        let rolePermissions = { RolePermissions: RolePermissions }\r\n                        var options = {\r\n                            method: 'POST',\r\n                            body: JSON.stringify(rolePermissions),\r\n                            headers: { 'Content-Type': 'application/json' }\r\n                        }\r\n                        fetch('/addNewRolePermissions', options)\r\n                            .then((res) => res.json())\r\n                            .then((json) => {\r\n                                // console.log(json)\r\n                                this.setState({\r\n                                    name: '',\r\n                                    selectedPermissions: []\r\n                                })\r\n                                window.location.reload()\r\n                            })\r\n                            .catch((error) => console.log(error))\r\n                    }\r\n                    else {\r\n                        this.name.focus();\r\n                    }\r\n                    // this._isMounted && setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { name, selectedPermissions } = this.state\r\n        let { allData } = this.props\r\n        let permissionOptions = allData.allPermissions && allData.allPermissions.map(permission => ({\r\n            key: permission.id,\r\n            label: permission.slug,\r\n            value: permission.id,\r\n            color: permission.id % 2 === 0 ?\r\n                '#112648' : '#687722'\r\n        }));\r\n\r\n        return (\r\n            <Can I='create' a='role' >\r\n                <MDBRow center className='mt-5 p-0'>\r\n                    <MDBCol xl='4' lg='5' md='6' sm='8' xs='10'>\r\n                        <form ref='editRoleForm' onSubmit={this.handleSubmit} noValidate>\r\n\r\n                            <fieldset className='w-100'>\r\n                                <h2 className=\"fontRaleway colorGreen font-weight-bold mb-5 text-center\">Edit Role</h2>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-edit inputIcon\" />\r\n                                    <input\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.name = el}\r\n                                        required\r\n                                        disabled\r\n                                        placeholder='Name*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    {/* <p style={{ textAlign: 'left' }}> <small className='pl-4 m-0 text-muted'>*e.g. admin</small></p> */}\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <MyOwnSelect\r\n                                        options={permissionOptions}\r\n                                        handleChange={this.handleSelectChange}\r\n                                        placeHolder={'Select Permissions..'}\r\n                                        selectedValue={selectedPermissions}\r\n                                        iconClass={'fa fa-exclamation-circle'}\r\n                                        required={true}\r\n                                        isMulti={true}\r\n                                    />\r\n                                </div>\r\n                                <div className='text-center'>\r\n                                    <input type=\"submit\" name=\"next\" className=\"next action-button\" value=\"Update..\" />\r\n                                </div>\r\n                            </fieldset>\r\n                        </form>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n\r\n                {/* {\r\n                    this.state.notificationShow ?\r\n                        <MDBAnimation type=\"fadeInUp\" >\r\n                            <Notification\r\n                                message={this.state.notificationMessage}\r\n                                icon={\"bell\"}\r\n                            />\r\n                        </MDBAnimation>\r\n                        : null\r\n                } */}\r\n            </Can >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default EditRole","import React, { Component } from 'react';\r\nimport EditRole from './pages/EditRole';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\n\r\nclass SecuredEditRole extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user !== null ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n        let { allData } = this.props\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/home' />\r\n        }\r\n        else {\r\n            return <Can I='update' a='role'>\r\n                <EditRole allData={allData} />\r\n            </Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredEditRole","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport SecuredNewRole from './SecuredNewRole';\r\nimport SecuredAllRoles from './SecuredAllRoles';\r\nimport SecuredEditRole from './SecuredEditRole';\r\nimport NotFound from '../../misc/pages/NotFound'\r\n\r\n\r\nconst Roles = ({ allData }) => {\r\n\r\n\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/users/roles/new\" render={() => <SecuredNewRole allData={allData} />} />\r\n            <Route path=\"/users/roles/all\" render={(routeProps) => <SecuredAllRoles {...routeProps} allData={allData} />} />\r\n            <Route path=\"/users/roles/edit\" render={() => <SecuredEditRole allData={allData} />} />\r\n            <Route render={() => <NotFound />} />\r\n        </Switch>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Roles","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport SecuredNewUser from './SecuredNewUser';\r\nimport SecuredAllUsers from './SecuredAllUsers';\r\nimport SecuredEditUser from './SecuredEditUser';\r\nimport Roles from './roles/Roles'\r\n// import Permissions from './permissions/Permissions'\r\nimport NotFound from '../misc/pages/NotFound'\r\n\r\n\r\nconst Users = ({ allData }) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/users/new\" render={() => <SecuredNewUser allData={allData} />} />\r\n            <Route path=\"/users/all\" render={(routeProps) => <SecuredAllUsers {...routeProps} allData={allData} />} />\r\n            <Route path=\"/users/edit\" render={() => <SecuredEditUser allData={allData} />} />\r\n            <Route path=\"/users/roles\" render={() => <Roles allData={allData} />} />\r\n            {/* <Route path=\"/users/permissions\" render={() => <Permissions allData={allData} />} /> */}\r\n            <Route render={() => <NotFound />} />\r\n        </Switch>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Users","import React, { Component } from 'react';\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\nimport { Can } from '../../../configs/Ability-context'\r\nimport MyOwnSelect from '../../misc/components/MyOwnSelect'\r\n\r\n\r\nclass NewProdcut extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this._isMounted = true\r\n        this.state = {\r\n            name: '',\r\n            sku: '',\r\n            bktId: '',\r\n            selectedBrand: '',\r\n            selectedCategory: '',\r\n            selectedVendor: '',\r\n            // notificationMessage: '',\r\n            // notificationShow: false\r\n        };\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectChange = name => (selectedOption) => {\r\n        this.setState({\r\n            [name]: selectedOption\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        let { selectedBrand, selectedCategory, selectedVendor } = this.state\r\n\r\n        e.preventDefault();\r\n        let form = this.refs.newProductForm\r\n\r\n        if (!selectedBrand) {\r\n            this.setState({ selectedBrand: null })\r\n            return\r\n        }\r\n        else if (!selectedCategory) {\r\n            this.setState({ selectedCategory: null })\r\n            return\r\n        }\r\n        else if (!selectedVendor) {\r\n            this.setState({ selectedVendor: null })\r\n            return\r\n        }\r\n        else if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n            return\r\n        }\r\n        else {\r\n            let { name, sku, bktId } = this.state\r\n            let newProduct = {\r\n                status: 'pending', brandId: selectedBrand.value, name: name, sku: sku,\r\n                bktId: bktId, categoryId: selectedCategory.value, vendorId: selectedVendor.value\r\n            }\r\n            console.log(newProduct);\r\n\r\n            var options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(newProduct),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/addNewProduct', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    console.log(json)\r\n                    // this._isMounted && this.setState({ message: json.message, notificationShow: true })\r\n                    json.success ?\r\n                        this.setState({\r\n                            name: '',\r\n                            sku: '',\r\n                            bktId: '',\r\n                            retailPrice: '',\r\n                            costPrice: '',\r\n                            selectedBrand: '',\r\n                            selectedCategory: '',\r\n                            selectedVendor: '',\r\n                        })\r\n                        :\r\n                        this.bktId.focus();\r\n\r\n                    // this._isMounted && setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let { name, sku, bktId, selectedBrand, selectedCategory, selectedVendor } = this.state,\r\n            { allBrands, allProductCategories, allUsers, allRoles } = this.props.allData,\r\n            vendorRoleId = allRoles && allRoles.filter(role => role.name === 'vendor').shift().id,\r\n            allVendors = allUsers && allUsers.filter(user => user.role_id === vendorRoleId);\r\n\r\n        return (\r\n            <Can I='create' a='product' >\r\n                <MDBRow center className='mt-4 p-0'>\r\n                    <MDBCol xl='4' lg='5' md='6' sm='8' xs='10' >\r\n                        <form ref='newProductForm' className='mb-4' onSubmit={this.handleSubmit} noValidate>\r\n                            <fieldset>\r\n                                <h2 className=\"fontRaleway colorGreen font-weight-bold mb-4 text-center\">New Prodcut</h2>\r\n                                <div className='mb-2'>\r\n                                    <MyOwnSelect\r\n                                        // options={brandOptions}\r\n                                        Entities={allBrands}\r\n                                        handleChange={this.handleSelectChange('selectedBrand')}\r\n                                        placeHolder={'Select Brand..*'}\r\n                                        selectedValue={selectedBrand}\r\n                                        iconClass={'fa fa-question-circle'}\r\n                                        required={true}\r\n                                        isMulti={false}\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <MyOwnSelect\r\n                                        // options={categoryOptions}\r\n                                        Entities={allProductCategories}\r\n                                        handleChange={this.handleSelectChange('selectedCategory')}\r\n                                        placeHolder={'Select Product-Category..*'}\r\n                                        selectedValue={selectedCategory}\r\n                                        iconClass={'fa fa-list-alt'}\r\n                                        required={true}\r\n                                        isMulti={false}\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <MyOwnSelect\r\n                                        // options={categoryOptions}\r\n                                        Entities={allVendors}\r\n                                        handleChange={this.handleSelectChange('selectedVendor')}\r\n                                        placeHolder={'Select Vendor..*'}\r\n                                        selectedValue={selectedVendor}\r\n                                        iconClass={'fa fa-user-tie'}\r\n                                        required={true}\r\n                                        isMulti={false}\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-edit inputIcon\" />\r\n                                    <input\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.name = el}\r\n                                        required\r\n                                        placeholder='Name*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    {/* <p style={{ textAlign: 'left' }}> <small className='pl-4 m-0 text-muted'>*e.g. CA Shoes</small></p> */}\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-search-dollar inputIcon\" />\r\n                                    <input\r\n                                        name=\"sku\"\r\n                                        value={sku}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        required\r\n                                        ref={el => this.sku = el}\r\n                                        placeholder='SKU*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-link inputIcon\" />\r\n                                    <input\r\n                                        name=\"bktId\"\r\n                                        value={bktId}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        required\r\n                                        ref={el => this.bktId = el}\r\n                                        placeholder='Product-ID from bucket.pk*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                </div>\r\n                                <div className='text-center mt-2'>\r\n                                    <input type=\"submit\" className=\"mt-2 action-button\" value=\"Create..\" />\r\n                                </div>\r\n                            </fieldset>\r\n                        </form>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n\r\n                {/* {\r\n                    this.state.notificationShow ?\r\n                        <MDBAnimation type=\"fadeInUp\" >\r\n                            <Notification\r\n                                message={this.state.notificationMessage}\r\n                                icon={\"bell\"}\r\n                            />\r\n                        </MDBAnimation>\r\n                        : null\r\n                } */}\r\n            </Can >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NewProdcut","import React, { Component } from 'react';\r\nimport NewProduct from './pages/NewProduct';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\n\r\nclass SecuredNewProduct extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n        let { allData } = this.props\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='create' a='product'><NewProduct allData={allData} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredNewProduct","import React, { Component } from 'react';\r\nimport { MDBBtn, MDBIcon } from 'mdbreact';\r\nimport DeleteModal from '../../misc//components/DeleteModal';\r\nimport { Can } from \"../../../configs/Ability-context\";\r\nimport MyOwnListing from '../../misc/components/MyOwnListing'\r\n// import LoaderModal from '../sections/LoaderModal'\r\n\r\n\r\nclass AllProducts extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n        super(props);\r\n        this._isMounted = true\r\n        this.state = {\r\n            rowToBeDeleted: '',\r\n            productToBeDeleted: '',\r\n            // loaderModalShow: false\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n\r\n    handleEdit = (id) => (e) => {\r\n        this.props.history.push({ pathname: \"/products/edit\", search: `product=${id}` })\r\n    }\r\n\r\n    redirectToNewEntityPath = () => {\r\n        this.props.history.push('/products/new')\r\n    }\r\n\r\n    handleDelete = (id) => (e) => {\r\n        let el = e.target\r\n        let row = el.closest('tr')\r\n        var i = row.rowIndex;\r\n        this.setState({\r\n            rowToBeDeleted: i,\r\n            productToBeDeleted: id\r\n        })\r\n        this.refs.deleteModal.setState({\r\n            modalShow: true,\r\n        })\r\n    }\r\n\r\n    deleteProduct = () => {\r\n        let { rowToBeDeleted, productToBeDeleted } = this.state\r\n        // let userRole = document.getElementById('personsTable').rows[rowToBeDeleted].cells[6].innerHTML\r\n        let deleteProduct = { value: productToBeDeleted }\r\n\r\n        var options = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(deleteProduct),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/deleteProduct', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                json.success && document.getElementById('allProductsTable').deleteRow(rowToBeDeleted)\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n\r\n    render() {\r\n        let { allBrands, allProductCategories, allProducts, allUsers, allRoles } = this.props.allData, rows = [], data, index = 0,\r\n            vendorRoleId = allRoles && allRoles.filter(role => role.name === 'vendor').shift().id,\r\n            allVendors = allUsers && allUsers.filter(user => user.role_id === vendorRoleId),\r\n            btnStyle = { fontSize: '17px', borderRadius: '50%', border: '2px solid #112648' }\r\n\r\n        allProducts && allProducts.forEach((product) => {\r\n            index = index + 1;\r\n            let thisProductCategory, thisProductBrand, thisProductVendor\r\n            allProductCategories && allProductCategories.forEach(category => {\r\n                category.id === product.product_category_id && (thisProductCategory = category.name)\r\n            });\r\n            allBrands && allBrands.forEach(brand => {\r\n                brand.id === product.brand_id && (thisProductBrand = brand.name)\r\n            });\r\n            allVendors && allVendors.forEach(vendor => {\r\n                vendor.id === product.vendor_id && (thisProductVendor = vendor.name)\r\n            });\r\n            rows.push(\r\n                {\r\n                    index: index,\r\n                    status: product.status,\r\n                    name: product.name,\r\n                    sku: product.sku,\r\n                    bktId: product.bkt_id,\r\n                    brand: thisProductBrand,\r\n                    category: thisProductCategory,\r\n                    vendor: thisProductVendor,\r\n                    retailPrice: product.retail_price,\r\n                    buttons: <React.Fragment>\r\n                        <Can I='update' a='product'>\r\n                            <MDBBtn style={btnStyle} color='white' onClick={this.handleEdit(product.id)} className='m-1 py-1 px-2' size=\"sm\">\r\n                                <MDBIcon icon=\"pencil-alt iconGreen\" />\r\n                            </MDBBtn>\r\n                        </Can>\r\n                        <Can I='delete' a='product'>\r\n                            <MDBBtn style={btnStyle} color='white' onClick={this.handleDelete(product.id)} className='m-1 py-1 px-2' size=\"sm\">\r\n                                <MDBIcon icon=\"trash iconRed\" />\r\n                            </MDBBtn>\r\n                        </Can>\r\n                    </React.Fragment>\r\n                }\r\n            );\r\n        });\r\n        data = {\r\n            columns: [\r\n                { label: '#', field: 'index', }, { label: 'Status', field: 'status' }, { label: 'Name', field: 'name' },\r\n                { label: 'SKU', field: 'sku', }, { label: 'Id. @ Bucket', field: 'bktId', },\r\n                { label: 'Brand', field: 'brand', }, { label: 'Product-Category', field: 'category', },\r\n                { label: 'Vendor', field: 'vendor', }, { label: 'Retail-Price', field: 'retailPrice', }, { label: 'Action', field: 'buttons' }\r\n            ],\r\n            rows: rows\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <Can I='read' a='product'>\r\n                <MyOwnListing\r\n                    cardHeading={`Products`}\r\n                    permissionEntity='product'\r\n                    redirectToNewEntityPath={this.redirectToNewEntityPath}\r\n                    addButtonEntityLabel='Product'\r\n                    tableId='allProductsTable'\r\n                    data={data}\r\n                />\r\n                <DeleteModal\r\n                    ref='deleteModal'\r\n                    deleteEntry={this.deleteProduct}\r\n                />\r\n\r\n                {/* <LoaderModal\r\n            //    show={loaderModalShow}\r\n        // /> */}\r\n            </Can>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AllProducts","import React, { Component } from 'react';\r\nimport AllProducts from './pages/AllProducts';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\n\r\nclass SecuredAllProducts extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='read' a='product'><AllProducts  {...this.props} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredAllProducts","import React, { Component } from 'react';\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\nimport { Can } from '../../../configs/Ability-context'\r\nimport MyOwnSelect from '../../misc/components/MyOwnSelect'\r\n\r\n\r\nclass EditProduct extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n        super(props);\r\n        this._isMounted = true\r\n        let params = new URLSearchParams(window.location.search), { allData } = props\r\n        this.productId = Number(params.get('product'))\r\n        let productToBeEdited = props.allData.allProducts && props.allData.allProducts.filter(product => product.id === this.productId).shift(),\r\n            selectedCategory = productToBeEdited && allData.allProductCategories && allData.allProductCategories.filter(\r\n                category => category.id === productToBeEdited.product_category_id).shift(),\r\n            selectedBrand = productToBeEdited && allData.allBrands && allData.allBrands.filter(brand => brand.id === productToBeEdited.brand_id).shift(),\r\n            selectedVendor = productToBeEdited && allData.allUsers && allData.allUsers.filter(user => user.id === productToBeEdited.vendor_id).shift()\r\n        this.state = {\r\n            selectedStatus: productToBeEdited && {\r\n                key: Math.random(),\r\n                label: productToBeEdited.status,\r\n                value: productToBeEdited.status,\r\n                color: '#687722'\r\n            },\r\n            selectedBrand: selectedBrand && {\r\n                key: selectedBrand.id,\r\n                label: selectedBrand.name,\r\n                value: selectedBrand.id,\r\n                color: selectedBrand.id % 2 === 0 ?\r\n                    '#112648' : '#687722'\r\n            },\r\n            selectedCategory: selectedCategory && {\r\n                key: selectedCategory.id,\r\n                label: selectedCategory.name,\r\n                value: selectedCategory.id,\r\n                color: selectedCategory.id % 2 === 0 ?\r\n                    '#112648' : '#687722'\r\n            },\r\n            selectedVendor: selectedVendor && {\r\n                key: selectedVendor.id,\r\n                label: selectedVendor.name,\r\n                value: selectedVendor.id,\r\n                color: selectedVendor.id % 2 === 0 ?\r\n                    '#112648' : '#687722'\r\n            },\r\n            name: productToBeEdited && productToBeEdited.name,\r\n            sku: productToBeEdited && productToBeEdited.sku,\r\n            bktId: productToBeEdited && productToBeEdited.bkt_id,\r\n            retailPrice: productToBeEdited ? productToBeEdited.retail_price ? productToBeEdited.retail_price : '' : '',\r\n            costPrice: productToBeEdited ? productToBeEdited.cost_price ? productToBeEdited.cost_price : '' : '',\r\n            // notificationMessage: '',\r\n            // notificationShow: false\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.editValidatingLabel('')\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectChange = name => (selectedOption) => {\r\n        if (name === 'selectedVendor') {\r\n            if (selectedOption) {\r\n                this.refs.editProductLabel.innerHTML = ''\r\n                let comingVendor = selectedOption.value, alreadySelectedVendor = this.state.selectedVendor.value\r\n                comingVendor !== alreadySelectedVendor ?\r\n                    this.setState({\r\n                        [name]: selectedOption, costPrice: '', retailPrice: ''\r\n                    })\r\n                    :\r\n                    this.setState({\r\n                        [name]: selectedOption\r\n                    })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    [name]: selectedOption, costPrice: '', retailPrice: ''\r\n                })\r\n            }\r\n        }\r\n        else\r\n            this.setState({\r\n                [name]: selectedOption\r\n            })\r\n    }\r\n\r\n    onKeyPress = (e) => {\r\n        if ((e.which) === 101 || (e.which) === 45 || (e.which === 43)) e.preventDefault();\r\n    }\r\n\r\n    handleInputRetail = e => {\r\n        this.editValidatingLabel('')\r\n        let { selectedVendor } = this.state, retailPrice = Number(e.target.value), our_percent\r\n        this.setState({\r\n            retailPrice: retailPrice,\r\n        })\r\n        if (!selectedVendor) {\r\n            this.editValidatingLabel('Please select vendor first')\r\n            this.setState({ retailPrice: '', costPrice: '' })\r\n        }\r\n        else if (!this.override.checked) {\r\n            let selectedUser = this.props.allData && this.props.allData.allUsers.filter(user => user.id === selectedVendor.value).shift()\r\n            if (selectedUser.retail_price_percent)\r\n                our_percent = Number(retailPrice) * Number(selectedUser.retail_price_percent) / 100\r\n            else {\r\n                this.editValidatingLabel('retail-percent-price for this vendor has not been found.')\r\n                this.setState({ retailPrice: '', costPrice: '' })\r\n                return\r\n            }\r\n            let calculatedCostPrice = retailPrice - our_percent\r\n            calculatedCostPrice < retailPrice ?\r\n                this.setState({ costPrice: calculatedCostPrice })\r\n                : this.editValidatingLabel(`you can't set retail-price less than cost-price.`)\r\n        }\r\n    }\r\n\r\n    handleInputCost = (e) => {\r\n        this.editValidatingLabel('')\r\n        let { selectedVendor } = this.state, costPrice = Number(e.target.value), our_percent\r\n        this.setState({\r\n            costPrice: costPrice,\r\n        })\r\n        if (!selectedVendor) {\r\n            this.editValidatingLabel('Please select vendor first')\r\n            this.setState({ costPrice: '', retailPrice: '' })\r\n        }\r\n        else if (!this.override.checked) {\r\n            let selectedUser = this.props.allData && this.props.allData.allUsers.filter(user => user.id === selectedVendor.value).shift()\r\n            if (selectedUser.cost_price_percent)\r\n                our_percent = Number(costPrice) * Number(selectedUser.cost_price_percent) / 100\r\n            else {\r\n                this.editValidatingLabel('cost-percent-price for this vendor has not been found.')\r\n                this.setState({ costPrice: '', retailPrice: '' })\r\n                return\r\n            }\r\n            let calculatedRetailPrice = costPrice + our_percent\r\n            calculatedRetailPrice > costPrice ?\r\n                this.setState({ retailPrice: calculatedRetailPrice })\r\n                : this.editValidatingLabel(`you can't set cost-price more than retail-price.`)\r\n        }\r\n    }\r\n\r\n    handleBlurRetail = e => {\r\n        let retailPrice = Number(e.target.value), { costPrice } = this.state\r\n        if (this.override.checked) {\r\n            this.editValidatingLabel(retailPrice < costPrice ? `you can't set retail-price less than cost-price.` : '');\r\n            retailPrice < costPrice && this.costPrice.focus()\r\n        }\r\n    }\r\n\r\n    handleBlurCost = e => {\r\n        let costPrice = Number(e.target.value), { retailPrice } = this.state\r\n        if (this.override.checked) {\r\n            this.editValidatingLabel(retailPrice < costPrice ? `you can't set cost-price more than retail-price.` : '');\r\n            retailPrice < costPrice && this.retailPrice.focus()\r\n        }\r\n    }\r\n\r\n    handleClickCheckbox = () => {\r\n        this.editValidatingLabel('');\r\n        this.setState({\r\n            retailPrice: '',\r\n            costPrice: ''\r\n        })\r\n    }\r\n\r\n    editValidatingLabel = string => {\r\n        this.refs.editProductLabel.innerHTML = string\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        let { selectedStatus, selectedBrand, selectedCategory, selectedVendor, retailPrice, costPrice, } = this.state\r\n        e.preventDefault();\r\n        let form = this.refs.editProductForm\r\n        if (!selectedStatus) {\r\n            this.setState({ selectedStatus: null })\r\n            return\r\n        }\r\n        else if (!selectedBrand) {\r\n            this.setState({ selectedBrand: null })\r\n            return\r\n        }\r\n        else if (!selectedCategory) {\r\n            this.setState({ selectedCategory: null })\r\n            return\r\n        }\r\n        else if (!selectedVendor) {\r\n            this.setState({ selectedVendor: null })\r\n            return\r\n        }\r\n        else if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n            return\r\n        }\r\n        else if (costPrice > retailPrice || costPrice === retailPrice) {\r\n            this.refs.editProductLabel.innerHTML = `It seems you entered retail-price less than or equal to cost-price but it can't, please change prices.`\r\n            return\r\n        }\r\n        else {\r\n\r\n            let { name, sku, bktId } = this.state\r\n            let updateProduct = {\r\n                id: this.productId, status: selectedStatus.value, brandId: selectedBrand.value, name: name, sku: sku, bktId: bktId, categoryId: selectedCategory.value,\r\n                retailPrice: retailPrice, costPrice: costPrice, vendorId: selectedVendor.value\r\n            }\r\n            var options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify(updateProduct),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/updateProduct', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    console.log(json)\r\n                    // this._isMounted && this.setState({ message: json.message, notificationShow: true })\r\n                    if (json.success === true) {\r\n                        this.setState({\r\n                            name: '',\r\n                            sku: '',\r\n                            bktId: '',\r\n                            retailPrice: '',\r\n                            costPrice: '',\r\n                            selectedBrand: '',\r\n                            selectedCategory: '',\r\n                            selectedVendor: '',\r\n                            selectedStatus: ''\r\n                        })\r\n                        window.location.reload();\r\n                    }\r\n                    else {\r\n                        this.bktId.focus();\r\n                    }\r\n                    // this._isMounted && setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let { name, sku, bktId, selectedBrand, selectedCategory, selectedVendor, costPrice, retailPrice, selectedStatus } = this.state\r\n        let { allBrands, allProductCategories, allUsers, allRoles } = this.props.allData,\r\n            vendorRoleId = allRoles && allRoles.filter(role => role.name === 'vendor').shift().id,\r\n            allVendors = allUsers && allUsers.filter(user => user.role_id === vendorRoleId);\r\n\r\n        let productStatusOptions = [\r\n            {\r\n                key: 1,\r\n                label: 'Pending',\r\n                value: 'Pending',\r\n                color: '#112648'\r\n            },\r\n            {\r\n                key: 2,\r\n                label: 'Published',\r\n                value: 'Published',\r\n                color: '#687722'\r\n            },\r\n        ]\r\n\r\n        return (\r\n            <Can I='update' a='product' >\r\n                <MDBRow center className='mt-4 p-0'>\r\n                    <MDBCol xl='4' lg='5' md='6' sm='8' xs='10' >\r\n                        <form ref='editProductForm' className='mb-4' onSubmit={this.handleSubmit} noValidate>\r\n                            <fieldset className='pb-1'>\r\n                                <h2 className=\"fontRaleway colorGreen font-weight-bold mb-4 text-center\">Edit Prodcut</h2>\r\n                                <div className='mb-2'>\r\n                                    <MyOwnSelect\r\n                                        options={productStatusOptions}\r\n                                        handleChange={this.handleSelectChange('selectedStatus')}\r\n                                        placeHolder={'Status..*'}\r\n                                        selectedValue={selectedStatus}\r\n                                        iconClass={'fa fa-star-half-alt'}\r\n                                        required={true}\r\n                                        isMulti={false}\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <MyOwnSelect\r\n                                        Entities={allBrands}\r\n                                        handleChange={this.handleSelectChange('selectedBrand')}\r\n                                        placeHolder={'Select Brand..*'}\r\n                                        selectedValue={selectedBrand}\r\n                                        iconClass={'fa fa-question-circle'}\r\n                                        required={true}\r\n                                        isMulti={false}\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <MyOwnSelect\r\n                                        Entities={allProductCategories}\r\n                                        handleChange={this.handleSelectChange('selectedCategory')}\r\n                                        placeHolder={'Select Product-Category..*'}\r\n                                        selectedValue={selectedCategory}\r\n                                        iconClass={'fa fa-list-alt'}\r\n                                        required={true}\r\n                                        isMulti={false}\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <MyOwnSelect\r\n                                        Entities={allVendors}\r\n                                        handleChange={this.handleSelectChange('selectedVendor')}\r\n                                        placeHolder={'Select Vendor..*'}\r\n                                        selectedValue={selectedVendor}\r\n                                        iconClass={'fa fa-user-tie'}\r\n                                        required={true}\r\n                                        isMulti={false}\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-edit inputIcon\" />\r\n                                    <input\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.name = el}\r\n                                        required\r\n                                        placeholder='Name*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    {/* <p style={{ textAlign: 'left' }}> <small className='pl-4 m-0 text-muted'>*e.g. CA Shoes</small></p> */}\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-search-dollar inputIcon\" />\r\n                                    <input\r\n                                        name=\"sku\"\r\n                                        value={sku}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        required\r\n                                        ref={el => this.sku = el}\r\n                                        placeholder='SKU*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-link inputIcon\" />\r\n                                    <input\r\n                                        name=\"bktId\"\r\n                                        value={bktId}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        required\r\n                                        ref={el => this.bktId = el}\r\n                                        placeholder='Product-ID from bucket.pk*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <MDBRow>\r\n                                        <MDBCol className='pr-1'>\r\n                                            <i className=\"fa fa-dollar-sign inputIcon\" />\r\n                                            <input\r\n                                                name=\"retailPrice\"\r\n                                                value={retailPrice}\r\n                                                onInput={this.handleInputRetail}\r\n                                                onChange={() => { }}\r\n                                                pattern=\"^[0-9]+(\\.[0-9][0-9]?)?\"\r\n                                                onKeyPress={this.onKeyPress}\r\n                                                onBlur={this.handleBlurRetail}\r\n                                                type=\"number\"\r\n                                                ref={el => this.retailPrice = el}\r\n                                                required\r\n                                                placeholder='Retail-Price*'\r\n                                                className='fontRaleway inputText pl-5 pr-0 form-control'\r\n                                            />\r\n                                        </MDBCol>\r\n                                        <MDBCol className='pl-1'>\r\n                                            <i className=\"fa fa-dollar-sign inputIcon\" />\r\n                                            <input\r\n                                                name=\"costPrice\"\r\n                                                value={costPrice}\r\n                                                onInput={this.handleInputCost}\r\n                                                onChange={() => { }}\r\n                                                type=\"number\"\r\n                                                ref={el => this.costPrice = el}\r\n                                                pattern=\"^[0-9]+(\\.[0-9][0-9]?)?\"\r\n                                                required\r\n                                                onBlur={this.handleBlurCost}\r\n                                                onKeyPress={this.onKeyPress}\r\n                                                placeholder='Cost-Price*'\r\n                                                className='fontRaleway inputText pl-5 pr-0 form-control'\r\n                                            />\r\n                                        </MDBCol>\r\n                                    </MDBRow>\r\n                                </div>\r\n                                <div className='m-0 text-left'>\r\n                                    <input\r\n                                        id=\"override\"\r\n                                        type=\"checkbox\"\r\n                                        ref={el => this.override = el}\r\n                                        onClick={this.handleClickCheckbox}\r\n                                        className='fontRaleway text-left align-middle ml-2'\r\n                                    />\r\n                                    <small className='ml-2 colorBlue fontRaleway align-middle'>Override prices</small>\r\n                                </div>\r\n                                <div className='text-center mt-1 mb-0 pb-0'>\r\n                                    <label ref='editProductLabel' className='m-0 p-0 validatingLabel'></label><br />\r\n                                    <input type=\"submit\" className=\" mt-2 action-button mb-1\" value=\"Update..\" />\r\n                                </div>\r\n                            </fieldset>\r\n                        </form>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n\r\n\r\n                {/* {\r\n                    this.state.notificationShow ?\r\n                        <MDBAnimation type=\"fadeInUp\" >\r\n                            <Notification\r\n                                message={this.state.notificationMessage}\r\n                                icon={\"bell\"}\r\n                            />\r\n                        </MDBAnimation>\r\n                        : null\r\n                } */}\r\n            </Can >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default EditProduct","import React, { Component } from 'react';\r\nimport EditProduct from './pages/EditProduct';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\n\r\nclass SecuredEditProduct extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n        let { allData } = this.props\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='update' a='product'><EditProduct allData={allData} /></Can>\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredEditProduct","import React, { Component } from 'react';\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\nimport { Can } from '../../../../configs/Ability-context'\r\n\r\n\r\nclass NewProductCategory extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this._isMounted = true\r\n        this.state = {\r\n            name: '',\r\n            description: '',\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let form = this.refs.newProductCategoryForm\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n            return\r\n        }\r\n        else {\r\n            let { name, description } = this.state\r\n            let newProductCategory = { name: name, description: description }\r\n\r\n            var options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(newProductCategory),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/addNewProductCategory', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    console.log(json)\r\n                    // this._isMounted && this.setState({ message: json.message, notificationShow: true })\r\n                    if (json.success === true) {\r\n                        this.setState({\r\n                            name: '',\r\n                            description: '',\r\n                        })\r\n                    }\r\n                    else {\r\n                        this.name.focus();\r\n                    }\r\n                    // this._isMounted && setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { name, description } = this.state\r\n\r\n\r\n        return (\r\n            <Can I='create' a='productCategory' >\r\n                <MDBRow center className='mt-5 p-0'>\r\n                    <MDBCol xl='4' lg='5' md='6' sm='8' xs='10' >\r\n                        <form ref='newProductCategoryForm' className='mb-4' onSubmit={this.handleSubmit} noValidate>\r\n                            <fieldset className='w-100'>\r\n                                <h2 className=\"fontRaleway colorGreen font-weight-bold mb-4 text-center\">New Product-Category</h2>\r\n\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-edit inputIcon\" />\r\n                                    <input\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.name = el}\r\n                                        required\r\n                                        placeholder='Name*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    {/* <p style={{ textAlign: 'left' }}> <small className='pl-4 m-0 text-muted'>*e.g. john doe</small></p> */}\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-info-circle inputIcon\" />\r\n                                    <textarea\r\n                                        name=\"description\"\r\n                                        value={description}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"textarea\"\r\n                                        ref={el => this.description = el}\r\n                                        rows='3'\r\n                                        placeholder='Description'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    {/* <div className='invalid-feedback ml-2 p-0'><small>Please enter a valid email.</small></div> */}\r\n                                </div>\r\n\r\n                                <div className='text-center'>\r\n                                    <input type=\"submit\" className=\"next action-button\" value=\"Create..\" />\r\n                                </div>\r\n                            </fieldset>\r\n                        </form>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n\r\n                {/* {\r\n                    this.state.notificationShow ?\r\n                        <MDBAnimation type=\"fadeInUp\" >\r\n                            <Notification\r\n                                message={this.state.notificationMessage}\r\n                                icon={\"bell\"}\r\n                            />\r\n                        </MDBAnimation>\r\n                        : null\r\n                } */}\r\n            </Can >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NewProductCategory","import React, { Component } from 'react';\r\nimport NewProductCategory from './pages/NewProductCategory';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\n\r\nclass SecuredNewProductCategory extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='create' a='productCategory'><NewProductCategory /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredNewProductCategory","import React, { Component } from 'react';\r\nimport { MDBBtn, MDBIcon } from 'mdbreact';\r\nimport DeleteModal from '../../../misc/components/DeleteModal';\r\nimport MyOwnListing from '../../../misc/components/MyOwnListing'\r\nimport { Can } from \"../../../../configs/Ability-context\";\r\n\r\n\r\nclass AllProductCategories extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n        super(props);\r\n        this._isMounted = true\r\n\r\n        this.state = {\r\n            allProductCategories: props.allData.allProductCategories,\r\n            rowToBeDeleted: '',\r\n            categoryToBeDeleted: '',\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n\r\n    handleEdit = (id) => (e) => {\r\n        this.props.history.push({ pathname: \"/products/categories/edit\", search: `category=${id}` })\r\n    }\r\n\r\n    redirectToNewEntityPath = () => {\r\n        this.props.history.push('/products/categories/new')\r\n    }\r\n\r\n    handleDelete = (id) => (e) => {\r\n        let el = e.target\r\n        let row = el.closest('tr')\r\n        var i = row.rowIndex;\r\n        this.setState({\r\n            rowToBeDeleted: i,\r\n            categoryToBeDeleted: id\r\n        })\r\n        this.refs.deleteModal.setState({\r\n            modalShow: true,\r\n        })\r\n    }\r\n\r\n    deleteProductCategory = () => {\r\n        let { rowToBeDeleted, categoryToBeDeleted } = this.state\r\n        let deleteProductCategory = { value: categoryToBeDeleted }\r\n\r\n        var options = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(deleteProductCategory),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/deleteProductCategory', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                // console.log(json)\r\n                json.success && document.getElementById('allProductCategoriesTable').deleteRow(rowToBeDeleted)\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let { allProductCategories } = this.state, rows = [], index = 0,\r\n            btnStyle = { fontSize: '17px', borderRadius: '50%', border: '2px solid #112648' };\r\n\r\n        allProductCategories && allProductCategories.forEach((productCategory) => {\r\n\r\n            index = index + 1;\r\n            rows.push(\r\n                {\r\n                    index: index,\r\n                    name: productCategory.name,\r\n                    description: productCategory.description,\r\n                    buttons: <React.Fragment>\r\n                        <Can I='update' a='productCategory'>\r\n                            <MDBBtn style={btnStyle} color='white' onClick={this.handleEdit(productCategory.id)} className='m-1 py-1 px-2' size=\"sm\">\r\n                                <MDBIcon icon=\"pencil-alt iconGreen\" />\r\n                            </MDBBtn>\r\n                        </Can>\r\n                        <Can I='delete' a='productCategory'>\r\n                            <MDBBtn style={btnStyle} color='white' onClick={this.handleDelete(productCategory.id)} className='m-1 py-1 px-2' size=\"sm\">\r\n                                <MDBIcon icon=\"trash iconRed\" />\r\n                            </MDBBtn>\r\n                        </Can>\r\n                    </React.Fragment>\r\n                }\r\n            );\r\n        });\r\n\r\n        let data = {\r\n            columns: [\r\n                { label: '#', field: 'index', }, { label: 'Name', field: 'name' },\r\n                { label: 'Description', field: 'description', }, { label: 'Action', field: 'buttons' }\r\n            ],\r\n            rows: rows\r\n        }\r\n        return (\r\n            <Can I='read' a='productCategory'>\r\n                <MyOwnListing\r\n                    cardHeading={`Product-Categories`}\r\n                    permissionEntity='productCategory'\r\n                    redirectToNewEntityPath={this.redirectToNewEntityPath}\r\n                    addButtonEntityLabel='Category'\r\n                    tableId='allProductCategoriesTable'\r\n                    data={data}\r\n                />\r\n                <DeleteModal\r\n                    ref='deleteModal'\r\n                    deleteEntry={this.deleteProductCategory}\r\n                />\r\n\r\n                {/* <LoaderModal\r\n                //    show={loaderModalShow}\r\n            // /> */}\r\n            </Can>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AllProductCategories","import React, { Component } from 'react';\r\nimport AllProductCategories from './pages/AllProductCategories';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\nclass SecuredAllProductCategories extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='read' a='productCategory'> <AllProductCategories {...this.props} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredAllProductCategories","import React, { Component } from 'react';\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\nimport { Can } from '../../../../configs/Ability-context'\r\n\r\n\r\nclass EditProductCategory extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n        super(props);\r\n        this._isMounted = true\r\n        let params = new URLSearchParams(window.location.search)\r\n        this.categoryId = Number(params.get('category'))\r\n        let categoryToBeEdited = props.allData.allProductCategories && props.allData.allProductCategories.filter(category => category.id === this.categoryId).shift()\r\n        this.state = {\r\n            name: categoryToBeEdited && categoryToBeEdited.name,\r\n            description: categoryToBeEdited && categoryToBeEdited.description,\r\n            // notificationMessage: '',\r\n            // notificationShow: false\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let form = this.refs.editProductCategoryForm\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n            return\r\n        }\r\n\r\n        else {\r\n            let { name, description } = this.state\r\n            let updatedProductCategory = { id: this.categoryId, name: name, description: description }\r\n\r\n            var options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify(updatedProductCategory),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/updateProductCategory', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    console.log(json)\r\n                    // this._isMounted && this.setState({ message: json.message, notificationShow: true })\r\n                    if (json.success === true) {\r\n                        this.setState({\r\n                            name: '',\r\n                            description: '',\r\n                        })\r\n                        window.location.reload();\r\n                    }\r\n                    else {\r\n                        this.name.focus();\r\n                    }\r\n                    // this._isMounted && setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let { name, description } = this.state\r\n\r\n\r\n        return (\r\n            <Can I='update' a='productCategory' >\r\n                <MDBRow center className='mt-5 p-0'>\r\n                    <MDBCol xl='4' lg='5' md='6' sm='8' xs='10'>\r\n                        <form ref='editProductCategoryForm' className='mb-4' onSubmit={this.handleSubmit} noValidate>\r\n                            <fieldset className='w-100'>\r\n                                <h2 className=\"fontRaleway colorGreen font-weight-bold mb-4 text-center\">Edit Product-Category</h2>\r\n\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-edit inputIcon\" />\r\n                                    <input\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.name = el}\r\n                                        required\r\n                                        placeholder='Name*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    {/* <p style={{ textAlign: 'left' }}> <small className='pl-4 m-0 text-muted'>*e.g. john doe</small></p> */}\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-info-circle inputIcon\" />\r\n                                    <textarea\r\n                                        name=\"description\"\r\n                                        value={description}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"textarea\"\r\n                                        ref={el => this.description = el}\r\n                                        rows='3'\r\n                                        placeholder='Description'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    {/* <div className='invalid-feedback ml-2 p-0'><small>Please enter a valid email.</small></div> */}\r\n                                </div>\r\n\r\n                                <div className='text-center'>\r\n                                    <input type=\"submit\" className=\"next action-button\" value=\"Update..\" />\r\n                                </div>\r\n                            </fieldset>\r\n                        </form>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n\r\n                {/* {\r\n                    this.state.notificationShow ?\r\n                        <MDBAnimation type=\"fadeInUp\" >\r\n                            <Notification\r\n                                message={this.state.notificationMessage}\r\n                                icon={\"bell\"}\r\n                            />\r\n                        </MDBAnimation>\r\n                        : null\r\n                } */}\r\n            </Can >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default EditProductCategory","import React, { Component } from 'react';\r\nimport EditProductCategory from './pages/EditProductCategory';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\n\r\nclass SecuredEditProductCategory extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n        let { allData } = this.props\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='update' a='productCategory'><EditProductCategory allData={allData} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredEditProductCategory","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport SecuredNewProductCategory from './SecuredNewProductCategory';\r\nimport SecuredAllProductCategories from './SecuredAllProductCategories';\r\nimport SecuredEditProductCategory from './SecuredEditProductCategory';\r\nimport NotFound from '../../misc/pages/NotFound'\r\n\r\n\r\nconst ProductCategories = ({ allData }) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/products/categories/new\" render={() => <SecuredNewProductCategory />} />\r\n            <Route path=\"/products/categories/all\" render={(routeProps) => <SecuredAllProductCategories {...routeProps} allData={allData} />} />\r\n            <Route path=\"/products/categories/edit\" render={() => <SecuredEditProductCategory allData={allData} />} />\r\n            <Route render={() => <NotFound />} />\r\n        </Switch>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ProductCategories","import React, { Component } from 'react';\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\nimport { Can } from '../../../../configs/Ability-context'\r\n\r\n\r\nclass NewBrand extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this._isMounted = true\r\n        this.state = {\r\n            name: '',\r\n            description: '',\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let form = this.refs.newBrandForm\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n            return\r\n        }\r\n        else {\r\n            let { name, description } = this.state\r\n            let newBrand = { name: name, description: description }\r\n\r\n            var options = {\r\n                method: 'POST',\r\n                body: JSON.stringify(newBrand),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/addNewBrand', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    console.log(json)\r\n                    // this._isMounted && this.setState({ message: json.message, notificationShow: true })\r\n                    json.success ?\r\n                        this.setState({\r\n                            name: '',\r\n                            description: '',\r\n                        })\r\n                        :\r\n                        this.name.focus();\r\n                    // this._isMounted && setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { name, description } = this.state\r\n\r\n\r\n        return (\r\n            <Can I='create' a='brand' >\r\n                <MDBRow center className='mt-5 p-0'>\r\n                    <MDBCol xl='4' lg='5' md='6' sm='8' xs='10'>\r\n                        <form ref='newBrandForm' className='mb-4' onSubmit={this.handleSubmit} noValidate>\r\n                            <fieldset className='w-100'>\r\n                                <h2 className=\"fontRaleway colorGreen font-weight-bold mb-4 text-center\">New Brand</h2>\r\n\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-edit inputIcon\" />\r\n                                    <input\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.name = el}\r\n                                        required\r\n                                        placeholder='Name*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    {/* <p style={{ textAlign: 'left' }}> <small className='pl-4 m-0 text-muted'>*e.g. john doe</small></p> */}\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-info-circle inputIcon\" />\r\n                                    <textarea\r\n                                        name=\"description\"\r\n                                        value={description}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"textarea\"\r\n                                        ref={el => this.description = el}\r\n                                        rows='3'\r\n                                        placeholder='Description'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    {/* <div className='invalid-feedback ml-2 p-0'><small>Please enter a valid email.</small></div> */}\r\n                                </div>\r\n\r\n                                <div className='text-center'>\r\n                                    <input type=\"submit\" className=\"next action-button\" value=\"Create..\" />\r\n                                </div>\r\n                            </fieldset>\r\n                        </form>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n\r\n                {/* {\r\n                    this.state.notificationShow ?\r\n                        <MDBAnimation type=\"fadeInUp\" >\r\n                            <Notification\r\n                                message={this.state.notificationMessage}\r\n                                icon={\"bell\"}\r\n                            />\r\n                        </MDBAnimation>\r\n                        : null\r\n                } */}\r\n            </Can >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NewBrand","import React, { Component } from 'react';\r\nimport NewBrand from './pages/NewBrand';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\n\r\nclass SecuredNewBrand extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='create' a='brand'><NewBrand /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredNewBrand","import React, { Component } from 'react';\r\nimport { MDBBtn, MDBIcon } from 'mdbreact';\r\nimport DeleteModal from '../../../misc/components/DeleteModal';\r\nimport { Can } from \"../../../../configs/Ability-context\";\r\nimport MyOwnListing from '../../../misc/components/MyOwnListing'\r\n\r\n\r\nclass AllBrands extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n        super(props);\r\n        this._isMounted = true\r\n\r\n        this.state = {\r\n            allBrands: props.allData.allBrands,\r\n            rowToBeDeleted: '',\r\n            brandToBeDeleted: '',\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n\r\n    handleEdit = (id) => (e) => {\r\n        this.props.history.push({ pathname: \"/products/brands/edit\", search: `brand=${id}` })\r\n    }\r\n\r\n    redirectToNewEntityPath = () => {\r\n        this.props.history.push('/products/brands/new')\r\n    }\r\n\r\n    handleDelete = (id) => (e) => {\r\n        let el = e.target\r\n        let row = el.closest('tr')\r\n        var i = row.rowIndex;\r\n        this.setState({\r\n            rowToBeDeleted: i,\r\n            brandToBeDeleted: id\r\n        })\r\n        this.refs.deleteModal.setState({\r\n            modalShow: true,\r\n        })\r\n    }\r\n\r\n    deleteBrand = () => {\r\n        let { rowToBeDeleted, brandToBeDeleted } = this.state\r\n        let deleteBrand = { value: brandToBeDeleted }\r\n\r\n        var options = {\r\n            method: 'DELETE',\r\n            body: JSON.stringify(deleteBrand),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        fetch('/deleteBrand', options)\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n                console.log(json)\r\n                json.success && document.getElementById('allBrandsTable').deleteRow(rowToBeDeleted)\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let { allBrands } = this.state, rows = [], index = 0,\r\n            btnStyle = { fontSize: '17px', borderRadius: '50%', border: '2px solid #112648' };\r\n\r\n        allBrands && allBrands.forEach((brand) => {\r\n\r\n            index = index + 1;\r\n            rows.push(\r\n                {\r\n                    index: index,\r\n                    name: brand.name,\r\n                    description: brand.description,\r\n                    buttons: <React.Fragment>\r\n                        <Can I='update' a='brand'>\r\n                            <MDBBtn style={btnStyle} color='white' onClick={this.handleEdit(brand.id)} className='m-1 py-1 px-2' size=\"sm\">\r\n                                <MDBIcon icon=\"pencil-alt iconGreen\" />\r\n                            </MDBBtn>\r\n                        </Can>\r\n                        <Can I='delete' a='brand'>\r\n                            <MDBBtn style={btnStyle} color='white' onClick={this.handleDelete(brand.id)} className='m-1 py-1 px-2' size=\"sm\">\r\n                                <MDBIcon icon=\"trash iconRed\" />\r\n                            </MDBBtn>\r\n                        </Can>\r\n                    </React.Fragment>\r\n                }\r\n            );\r\n        });\r\n\r\n        let data = {\r\n            columns: [\r\n                { label: '#', field: 'index', }, { label: 'Name', field: 'name' },\r\n                { label: 'Description', field: 'description', }, { label: 'Action', field: 'buttons' }\r\n            ],\r\n            rows: rows\r\n        }\r\n        return (\r\n            <Can I='read' a='brand'>\r\n                <MyOwnListing\r\n                    cardHeading={`Brands`}\r\n                    permissionEntity='brand'\r\n                    redirectToNewEntityPath={this.redirectToNewEntityPath}\r\n                    addButtonEntityLabel='Brand'\r\n                    tableId='allBrandsTable'\r\n                    data={data}\r\n                />\r\n                <DeleteModal\r\n                    ref='deleteModal'\r\n                    deleteEntry={this.deleteBrand}\r\n                />\r\n\r\n                {/* <LoaderModal\r\n                //    show={loaderModalShow}\r\n            // /> */}\r\n            </Can>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AllBrands","import React, { Component } from 'react';\r\nimport AllBrands from './pages/AllBrands';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\nclass SecuredAllBrands extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='read' a='brand'> <AllBrands {...this.props} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredAllBrands","import React, { Component } from 'react';\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\nimport { Can } from '../../../../configs/Ability-context'\r\n\r\n\r\nclass EditBrand extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n        super(props);\r\n        this._isMounted = true\r\n        let params = new URLSearchParams(window.location.search)\r\n        this.brandId = Number(params.get('brand'))\r\n        let brandToBeEdited = props.allData.allBrands && props.allData.allBrands.filter(brand => brand.id === this.brandId).shift()\r\n        this.state = {\r\n            name: brandToBeEdited && brandToBeEdited.name,\r\n            description: brandToBeEdited && brandToBeEdited.description,\r\n            // notificationMessage: '',\r\n            // notificationShow: false\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let form = this.refs.editBrandForm\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n            return\r\n        }\r\n\r\n        else {\r\n            let { name, description } = this.state\r\n            let updatedBrand = { id: this.brandId, name: name, description: description }\r\n\r\n            var options = {\r\n                method: 'PUT',\r\n                body: JSON.stringify(updatedBrand),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/updateBrand', options)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    console.log(json)\r\n                    // this._isMounted && this.setState({ message: json.message, notificationShow: true })\r\n                    if (json.success === true) {\r\n                        this.setState({\r\n                            name: '',\r\n                            description: '',\r\n                        })\r\n                        window.location.reload();\r\n                    }\r\n                    else {\r\n                        this.name.focus();\r\n                    }\r\n                    // this._isMounted && setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let { name, description } = this.state\r\n\r\n\r\n        return (\r\n            <Can I='update' a='brand' >\r\n                <MDBRow center className='mt-5 p-0'>\r\n                    <MDBCol xl='4' lg='5' md='6' sm='8' xs='10'>\r\n                        <form ref='editBrandForm' className='mb-4' onSubmit={this.handleSubmit} noValidate>\r\n                            <fieldset className='w-100'>\r\n                                <h2 className=\"fontRaleway colorGreen font-weight-bold mb-4 text-center\">Edit Brand</h2>\r\n\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-edit inputIcon\" />\r\n                                    <input\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.name = el}\r\n                                        required\r\n                                        placeholder='Name*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    {/* <p style={{ textAlign: 'left' }}> <small className='pl-4 m-0 text-muted'>*e.g. john doe</small></p> */}\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-info-circle inputIcon\" />\r\n                                    <textarea\r\n                                        name=\"description\"\r\n                                        value={description}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"textarea\"\r\n                                        ref={el => this.description = el}\r\n                                        rows='3'\r\n                                        placeholder='Description'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    {/* <div className='invalid-feedback ml-2 p-0'><small>Please enter a valid email.</small></div> */}\r\n                                </div>\r\n\r\n                                <div className='text-center'>\r\n                                    <input type=\"submit\" className=\"next action-button\" value=\"Update..\" />\r\n                                </div>\r\n                            </fieldset>\r\n                        </form>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n\r\n                {/* {\r\n                    this.state.notificationShow ?\r\n                        <MDBAnimation type=\"fadeInUp\" >\r\n                            <Notification\r\n                                message={this.state.notificationMessage}\r\n                                icon={\"bell\"}\r\n                            />\r\n                        </MDBAnimation>\r\n                        : null\r\n                } */}\r\n            </Can >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default EditBrand","import React, { Component } from 'react';\r\nimport EditBrand from './pages/EditBrand';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\n\r\nclass SecuredEditBrand extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n        let { allData } = this.props\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='update' a='brand'><EditBrand allData={allData} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredEditBrand","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport SecuredNewBrand from './SecuredNewBrand';\r\nimport SecuredAllBrands from './SecuredAllBrands';\r\nimport SecuredEditBrand from './SecuredEditBrand';\r\nimport NotFound from '../../misc/pages/NotFound'\r\n\r\n\r\nconst Brands = ({ allData }) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/products/brands/new\" render={() => <SecuredNewBrand />} />\r\n            <Route path=\"/products/brands/all\" render={(routeProps) => <SecuredAllBrands {...routeProps} allData={allData} />} />\r\n            <Route path=\"/products/brands/edit\" render={() => <SecuredEditBrand allData={allData} />} />\r\n            <Route render={() => <NotFound />} />\r\n        </Switch>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Brands","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport SecuredNewProduct from './SecuredNewProduct';\r\nimport SecuredAllProducts from './SecuredAllProducts';\r\nimport SecuredEditProduct from './SecuredEditProduct';\r\nimport ProductCategories from './categories/ProductCategories';\r\nimport Brands from './brands/Brands';\r\nimport NotFound from '../misc/pages/NotFound'\r\n\r\n\r\n\r\nconst Products = ({ allData }) => {\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/products/new\" render={() => <SecuredNewProduct allData={allData} />} />\r\n            <Route path=\"/products/all\" render={(routeProps) => <SecuredAllProducts {...routeProps} allData={allData} />} />\r\n            <Route path=\"/products/edit\" render={() => <SecuredEditProduct allData={allData} />} />\r\n            <Route path=\"/products/categories\" render={() => <ProductCategories allData={allData} />} />\r\n            <Route path=\"/products/brands\" render={() => <Brands allData={allData} />} />\r\n            <Route render={() => <NotFound />} />\r\n        </Switch>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Products","import React, { Component } from 'react';\r\nimport { MDBBtn, MDBIcon } from 'mdbreact';\r\nimport DeleteModal from '../../misc//components/DeleteModal';\r\nimport { Can } from \"../../../configs/Ability-context\";\r\nimport MyOwnListing from '../../misc/components/MyOwnListing'\r\n// import LoaderModal from '../sections/LoaderModal'\r\n\r\n\r\nclass AllInventories extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n        super(props);\r\n        this._isMounted = true\r\n        this.state = {\r\n            allInventories: props.allData.allInventories,\r\n            allProducts: props.allData.allProducts,\r\n            allProductCategories: props.allData.allProductCategories,\r\n            allBrands: props.allData.allBrands,\r\n            // rowToBeDeleted: '',\r\n            // inventorToBeDeleted: '',\r\n            // loaderModalShow: false\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this._isMounted = false\r\n    }\r\n\r\n\r\n    // handleEdit = (id) => (e) => {\r\n    //     this.props.history.push({ pathname: \"/inventories/update\", search: `inventory=${id}` })\r\n    // }\r\n\r\n    redirectToNewEntityPath = () => {\r\n        this.props.history.push('/inventories/update')\r\n    }\r\n\r\n    // handleDelete = (id) => (e) => {\r\n    //     let el = e.target\r\n    //     let row = el.closest('tr')\r\n    //     var i = row.rowIndex;\r\n    //     this.setState({\r\n    //         rowToBeDeleted: i,\r\n    //         productToBeDeleted: id\r\n    //     })\r\n    //     this.refs.deleteModal.setState({\r\n    //         modalShow: true,\r\n    //     })\r\n    // }\r\n\r\n    // deleteInventory = () => {\r\n    //     let { rowToBeDeleted, productToBeDeleted } = this.state\r\n    //     // let userRole = document.getElementById('personsTable').rows[rowToBeDeleted].cells[6].innerHTML\r\n    //     let deleteProduct = { value: productToBeDeleted }\r\n\r\n    //     var options = {\r\n    //         method: 'DELETE',\r\n    //         body: JSON.stringify(deleteProduct),\r\n    //         headers: { 'Content-Type': 'application/json' }\r\n    //     }\r\n    //     fetch('/deleteProduct', options)\r\n    //         .then((res) => res.json())\r\n    //         .then((json) => {\r\n    //             // console.log(json)\r\n    //             json.success && document.getElementById('allProductsTable').deleteRow(rowToBeDeleted)\r\n    //         })\r\n    //         .catch((error) => console.log(error))\r\n    // }\r\n\r\n\r\n    render() {\r\n        let { allInventories, allBrands, allProductCategories, allProducts } = this.state, rows = [], data, index = 0\r\n        // btnStyle = { fontSize: '17px', borderRadius: '50%', border: '2px solid #112648' }\r\n\r\n        allInventories && allInventories.forEach((inventory) => {\r\n\r\n            index = index + 1;\r\n            let thisProductCategory, thisProductBrand, thisProduct\r\n            allProducts && allProducts.forEach(product => {\r\n                product.id === inventory.bkt_id && (thisProduct = product.name)\r\n            });\r\n            allProductCategories && allProductCategories.forEach(category => {\r\n                thisProduct ? category.id === thisProduct.id && (thisProductCategory = category.name) : thisProductCategory = 'Product not found.'\r\n            });\r\n            allBrands && allBrands.forEach(brand => {\r\n                thisProduct ? brand.id === thisProduct.brand_id && (thisProductBrand = brand.name) : thisProductBrand = 'Product not found.'\r\n            });\r\n            rows.push(\r\n                {\r\n                    index: index,\r\n                    name: thisProduct ? thisProduct.name : 'Product not created yet.',\r\n                    bktId: inventory.bkt_id ? inventory.bkt_id : 'Product not found.',\r\n                    sku: thisProduct ? thisProduct.sku : 'Product not created yet.',\r\n                    category: thisProduct ? thisProductCategory : 'Product not created yet.',\r\n                    brand: thisProduct ? thisProductBrand : 'Product not created yet.',\r\n                    qty: inventory.qty,\r\n                    // buttons: <React.Fragment>\r\n                    //     <Can I='update' a='product'>\r\n                    //         <MDBBtn style={btnStyle} color='white' onClick={this.handleEdit(product.id)} className='m-1 py-1 px-2' size=\"sm\">\r\n                    //             <MDBIcon icon=\"pencil-alt iconGreen\" />\r\n                    //         </MDBBtn>\r\n                    //     </Can>\r\n                    //     <Can I='delete' a='product'>\r\n                    //         <MDBBtn style={btnStyle} color='white' onClick={this.handleDelete(product.id)} className='m-1 py-1 px-2' size=\"sm\">\r\n                    //             <MDBIcon icon=\"trash iconRed\" />\r\n                    //         </MDBBtn>\r\n                    //     </Can>\r\n                    // </React.Fragment>\r\n                }\r\n            );\r\n        });\r\n        data = {\r\n            columns: [\r\n                { label: '#', field: 'index', }, { label: 'Name', field: 'name' }, { label: 'bucket-ID', field: 'bktId', },\r\n                { label: 'SKU', field: 'sku', }, { label: 'Category', field: 'category', }, { label: 'Brand', field: 'brand', }, {\r\n                    label: 'QTY.', field: 'qty', attributes: {\r\n                        \"fontWeight\": \"bold\"\r\n                    }\r\n                },\r\n                // { label: 'Action', field: 'buttons' }\r\n            ],\r\n            rows: rows\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <Can I='read' a='inventories'>\r\n                <MyOwnListing\r\n                    cardHeading={`Inventories`}\r\n                    permissionEntity='inventories'\r\n                    redirectToNewEntityPath={this.redirectToNewEntityPath}\r\n                    addButtonEntityLabel='Inventory'\r\n                    tableId='allInventoriesTable'\r\n                    data={data}\r\n                />\r\n                {/* <DeleteModal\r\n                    ref='deleteModal'\r\n                    deleteEntry={this.deleteProduct}\r\n                /> */}\r\n\r\n                {/* <LoaderModal\r\n            //    show={loaderModalShow}\r\n        // /> */}\r\n            </Can>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AllInventories","import React, { Component } from 'react';\r\nimport AllInventories from './pages/AllInventories';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\n\r\nclass SecuredAllInventories extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='read' a='inventories'><AllInventories  {...this.props} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredAllInventories","import React from 'react';\r\nimport { Can } from \"../../../configs/Ability-context\";\r\nimport MyOwnListing from '../../misc/components/MyOwnListing'\r\n// import LoaderModal from '../sections/LoaderModal'\r\n\r\n\r\nconst InventoryHistories = ({ allData }) => {\r\n\r\n    let { allInventoryHistories, allProducts, allUsers, allRoles } = allData, rows = [], data, index = 0,\r\n        vendorRoleId = allRoles && allRoles.filter(role => role.name === 'vendor').shift().id,\r\n        allVendors = allUsers && allUsers.filter(user => user.role_id === vendorRoleId);\r\n    // btnStyle = { fontSize: '17px', borderRadius: '50%', border: '2px solid #112648' }\r\n\r\n    allInventoryHistories && allInventoryHistories.forEach((history) => {\r\n        index = index + 1;\r\n        let thisVendor, thisProduct\r\n        allProducts && allProducts.forEach(product => {\r\n            product.bkt_id === history.bkt_id && (thisProduct = product)\r\n        });\r\n        allVendors && allVendors.forEach(vendor => {\r\n            vendor.id === history.vendor_id && (thisVendor = vendor)\r\n        });\r\n\r\n        rows.push(\r\n            {\r\n                index: index,\r\n                name: thisProduct ? thisProduct.name : history.bkt_id,\r\n                bktId: history.bkt_id,\r\n                option: history.option,\r\n                qty: history.qty,\r\n                vendor: thisVendor.name\r\n                // buttons: <React.Fragment>\r\n                //     <Can I='update' a='product'>\r\n                //         <MDBBtn style={btnStyle} color='white' onClick={this.handleEdit(product.id)} className='m-1 py-1 px-2' size=\"sm\">\r\n                //             <MDBIcon icon=\"pencil-alt iconGreen\" />\r\n                //         </MDBBtn>\r\n                //     </Can>\r\n                //     <Can I='delete' a='product'>\r\n                //         <MDBBtn style={btnStyle} color='white' onClick={this.handleDelete(product.id)} className='m-1 py-1 px-2' size=\"sm\">\r\n                //             <MDBIcon icon=\"trash iconRed\" />\r\n                //         </MDBBtn>\r\n                //     </Can>\r\n                // </React.Fragment>\r\n            }\r\n        );\r\n    });\r\n    data = {\r\n        columns: [\r\n            { label: '#', field: 'index', }, { label: 'Name', field: 'name' }, { label: 'bucket-ID', field: 'bktId', },\r\n            { label: 'Update-Option', field: 'option', }, {\r\n                label: 'QTY.', field: 'qty', attributes: {\r\n                    \"fontWeight\": \"bold\"\r\n                }\r\n            }, { label: 'Vendor', field: 'vendor', },\r\n            // { label: 'Action', field: 'buttons' }\r\n        ],\r\n        rows: rows\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Can I='read' a='inventoryHistories'>\r\n            <MyOwnListing\r\n                cardHeading={`inventory Histories`}\r\n                permissionEntity='inventoryHistories'\r\n                redirectToNewEntityPath={null}\r\n                addButtonEntityLabel='inventory History'\r\n                tableId='allinventoryHistoriesTable'\r\n                data={data}\r\n            />\r\n            {/* <DeleteModal\r\n                    ref='deleteModal'\r\n                    deleteEntry={this.deleteProduct}\r\n                /> */}\r\n\r\n            {/* <LoaderModal\r\n            //    show={loaderModalShow}\r\n        // /> */}\r\n        </Can>\r\n    );\r\n\r\n}\r\n\r\nexport default InventoryHistories","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router'\r\nimport InventoryHistories from './pages/InventoryHistories';\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\n\r\nclass SecuredInventoryHistory extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='read' a='inventoryHistories'> <InventoryHistories {...this.props} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredInventoryHistory","import React, { Component } from 'react';\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\nimport { Can } from '../../../configs/Ability-context'\r\nimport MyOwnSelect from '../../misc/components/MyOwnSelect'\r\n\r\n\r\nclass UpdateInventories extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this._isMounted = true\r\n        this.state = {\r\n            selectedUpdateOption: '',\r\n            selectedVendor: '',\r\n            bktId: '',\r\n            qty: ''\r\n            // notificationMessage: '',\r\n            // notificationShow: false\r\n        };\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSelectChange = name => (selectedOption) => {\r\n        this.setState({\r\n            [name]: selectedOption\r\n        })\r\n    }\r\n\r\n    onKeyPress = (e) => {\r\n        if ((e.which) === 101 || (e.which) === 45 || (e.which === 43)) e.preventDefault();\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        let { selectedUpdateOption, selectedVendor } = this.state\r\n        e.preventDefault();\r\n        let form = this.refs.updateInventoriesForm\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n            return\r\n        }\r\n        else if (!selectedUpdateOption) {\r\n            this.setState({ selectedUpdateOption: null })\r\n            return\r\n        }\r\n        else if (!selectedVendor) {\r\n            this.setState({ selectedVendor: null })\r\n            return\r\n        }\r\n        else {\r\n            let { bktId, qty } = this.state\r\n            let updatedInventory = {\r\n                bktId: bktId, qty: qty, updateOption: selectedUpdateOption.value\r\n            }\r\n\r\n            let updateCallOptions = {\r\n                method: 'POST',\r\n                body: JSON.stringify(updatedInventory),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            fetch('/manualUpdateInventories', updateCallOptions)\r\n                .then((res) => res.json())\r\n                .then((json) => {\r\n                    // console.log(json)\r\n                    // this._isMounted && this.setState({ message: json.message, notificationShow: true })\r\n                    if (json.success) {\r\n                        this.setState({\r\n                            selectedUpdateOption: '',\r\n                            selectedVendor: '',\r\n                            bktId: '',\r\n                            qty: ''\r\n                        })\r\n                        let inventoryHistory = updatedInventory\r\n                        inventoryHistory.vendor = selectedVendor ? selectedVendor.value : selectedVendor\r\n                        let historyOptions = {\r\n                            method: 'POST',\r\n                            body: JSON.stringify(inventoryHistory),\r\n                            headers: { 'Content-Type': 'application/json' }\r\n                        }\r\n                        fetch('/addNewInventoryHistory', historyOptions)\r\n                            .then((res) => res.json())\r\n                            .then((json) => {\r\n                                // console.log(json)\r\n                            })\r\n                            .catch((error) => console.log(error))\r\n\r\n\r\n                        ////////////////////////////////////add sale or return to vendor ledgers\r\n\r\n\r\n                    }\r\n                    else {\r\n                        this.bktId.focus();\r\n                    }\r\n\r\n                    // this._isMounted && setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                })\r\n                .catch((error) => console.log(error))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { selectedUpdateOption, selectedVendor, bktId, qty } = this.state, { allUsers, allRoles } = this.props.allData,\r\n            vendorRoleId = allRoles && allRoles.filter(role => role.name === 'vendor').shift().id,\r\n            allVendors = allUsers && allUsers.filter(user => user.role_id === vendorRoleId);\r\n        let inventoryUpdateOptions = [\r\n            {\r\n                key: Math.random(),\r\n                label: 'Create',\r\n                value: 'create',\r\n                color: '#112648'\r\n            },\r\n            {\r\n                key: Math.random(),\r\n                label: 'Return',\r\n                value: 'return',\r\n                color: '#687722'\r\n            },\r\n            {\r\n                key: Math.random(),\r\n                label: 'Delete',\r\n                value: 'delete',\r\n                color: '#112648'\r\n            },\r\n        ]\r\n\r\n\r\n        return (\r\n            <Can I='create' a='product' >\r\n                <MDBRow center className='mt-5 p-0'>\r\n                    <MDBCol xl='4' lg='5' md='6' sm='8' xs='10'\r\n                    //  className=' offset-xl-2 offset-lg-3 offset-md-3'\r\n                    >\r\n                        <form ref='updateInventoriesForm' className='mb-4' onSubmit={this.handleSubmit} noValidate>\r\n                            <fieldset className='w-100'>\r\n                                <h2 className=\"fontRaleway colorGreen font-weight-bold mb-4 text-center\">Update Your Inventory</h2>\r\n                                <div className='mb-2'>\r\n                                    <MyOwnSelect\r\n                                        options={inventoryUpdateOptions}\r\n                                        // Entities={allBrands}\r\n                                        handleChange={this.handleSelectChange('selectedUpdateOption')}\r\n                                        placeHolder={'Select an update option..*'}\r\n                                        selectedValue={selectedUpdateOption}\r\n                                        iconClass={'fa fa-question-circle'}\r\n                                        required={true}\r\n                                        isMulti={false}\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <MyOwnSelect\r\n                                        // options={categoryOptions}\r\n                                        Entities={allVendors}\r\n                                        handleChange={this.handleSelectChange('selectedVendor')}\r\n                                        placeHolder={'Select Vendor..*'}\r\n                                        selectedValue={selectedVendor}\r\n                                        iconClass={'fa fa-list-alt'}\r\n                                        required={true}\r\n                                        isMulti={false}\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-edit inputIcon\" />\r\n                                    <input\r\n                                        name=\"bktId\"\r\n                                        value={bktId}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.bktId = el}\r\n                                        required\r\n                                        placeholder={`Product's bucket-ID*`}\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                    {/* <p style={{ textAlign: 'left' }}> <small className='pl-4 m-0 text-muted'>*e.g. CA Shoes</small></p> */}\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-info-circle inputIcon\" />\r\n                                    <input\r\n                                        name=\"qty\"\r\n                                        value={qty}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"number\"\r\n                                        onKeyPress={this.onKeyPress}\r\n                                        ref={el => this.qty = el}\r\n                                        required\r\n                                        placeholder='Qty.*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='text-center'>\r\n                                    <input type=\"submit\" className=\"next action-button\" value=\"Update..\" />\r\n                                </div>\r\n                            </fieldset>\r\n                        </form>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n\r\n                {/* {\r\n                    this.state.notificationShow ?\r\n                        <MDBAnimation type=\"fadeInUp\" >\r\n                            <Notification\r\n                                message={this.state.notificationMessage}\r\n                                icon={\"bell\"}\r\n                            />\r\n                        </MDBAnimation>\r\n                        : null\r\n                } */}\r\n            </Can >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default UpdateInventories","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router'\r\nimport UpdateInventories from './pages/UpdateInventories';\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\n\r\nclass SecuredUpdateInventories extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return (\r\n                <React.Fragment>\r\n                    <Can I='update' a='inventories'><UpdateInventories allData={this.props.allData} /></Can>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredUpdateInventories","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport SecuredAllInventories from './SecuredAllInventories';\r\nimport SecuredInventoryHistories from './SecuredInventoryHistories';\r\nimport SecuredUpdateInventories from './SecuredUpdateInventories';\r\n\r\n\r\n\r\nconst Inventories = ({ allData }) => {\r\n\r\n    return (\r\n\r\n        <Switch>\r\n            <Route path=\"/inventories/update\" render={() => <SecuredUpdateInventories allData={allData} />} />\r\n            <Route path=\"/inventories/all\" render={(routeProps) => <SecuredAllInventories {...routeProps} allData={allData} />} />\r\n            <Route path=\"/inventories/history\" render={() => < SecuredInventoryHistories allData={allData} />} />\r\n        </Switch>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Inventories","import React, { Component } from 'react';\r\nimport { MDBContainer, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBIcon, MDBRow, MDBCol } from\r\n    'mdbreact';\r\n\r\nclass QuestionModal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            modalShow: false,\r\n            option: ''\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modalShow: !this.state.modalShow,\r\n        });\r\n    }\r\n\r\n    sendResponseBack = (boolean) => e => {\r\n        let { option } = this.state\r\n        if (boolean) {\r\n            this.props.positiveBtnClicked(option)\r\n            this.toggle()\r\n        }\r\n        else {\r\n            this.props.negativeBtnClicked(option)\r\n            this.toggle()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { positiveBtnTxt, negativeBtnTxt, message, heading } = this.props\r\n        return (\r\n            <MDBContainer>\r\n                <MDBModal modalStyle='info' style={{ borderRadius: '10px' }} className=\"text-white\" size=\"md\" centered backdrop={true} isOpen={this.state.modalShow}\r\n                    toggle={this.toggle}>\r\n                    <MDBModalHeader className=\"text-center questionModalHeader\" titleClass=\"w-100\" tag=\"p\" toggle={this.toggle}>\r\n                        <b style={{ letterSpacing: '0.2vw' }}>\r\n                            {heading}\r\n                        </b><br />\r\n                        {message}.\r\n                    </MDBModalHeader>\r\n                    <MDBModalBody className=\"text-center\">\r\n                        <MDBIcon icon=\"question\" size=\"6x\" className=\"animated rotateIn colorGreen\" />\r\n                    </MDBModalBody>\r\n                    <MDBModalFooter className=\"justify-content-center\">\r\n                        <MDBRow center className='w-100'>\r\n                            <MDBCol className='text-center' size='4'>\r\n                                <button type='button' className='questionModalBtn w-100 px-0' onClick={this.sendResponseBack(true)}>{positiveBtnTxt}</button>\r\n                            </MDBCol>\r\n                            <MDBCol className='text-center' size='4'>\r\n                                <button type='button' className='questionModalBtn w-100 px-0' onClick={this.sendResponseBack(false)}>{negativeBtnTxt}</button>\r\n                            </MDBCol>\r\n                        </MDBRow>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionModal;","import React, { Component } from 'react';\r\nimport { MDBInput, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\r\nimport DatePicker from \"react-datepicker\";\r\nimport MyOwnSelect from '../../../misc/components/MyOwnSelect';\r\nimport QuestionModal from '../../../misc/components/QuestionModal';\r\n\r\n\r\n\r\nconst sourceOptions = [\r\n    { value: 'Website', label: 'Website', key: 1, color: '#112648' },\r\n    { value: 'facebook', label: 'Facebook', key: 2, color: '#687722' },\r\n    { value: 'WhatsApp', label: 'WhatsApp', key: 3, color: '#112648' },\r\n    { value: 'Phone', label: 'Phone', key: 4, color: '#687722' },\r\n];\r\n\r\nconst statusOptions = [\r\n    { value: 'Waiting vendor confirmation', label: 'Waiting vendor confirmation', key: 1, color: '#112648' },\r\n    { value: 'Waiting customer confirmation', label: 'Waiting customer confirmation', key: 2, color: '#687722' },\r\n    { value: 'On-hold', label: 'On-hold', key: 3, color: '#112648' },\r\n    { value: 'Cancelled', label: 'Cancelled', key: 4, color: 'red' },\r\n    { value: 'Confirmed', label: 'Confirmed', key: 5, color: '#112648' },\r\n    { value: 'Requested', label: 'Requested', key: 6, color: '#687722' },\r\n    { value: 'Awaiting dispatch', label: 'Awaiting dispatch', key: 7, color: '#112648' },\r\n    { value: 'Awaiting pickup', label: 'Awaiting pickup', key: 8, color: '#687722' },\r\n    { value: 'Rider notified', label: 'Rider notified', key: 9, color: '#112648' },\r\n    { value: 'Packing in process', label: 'Packing in process', key: 10, color: '#687722' },\r\n    { value: 'RTS', label: 'RTS', key: 11, color: '#112648' },\r\n    { value: 'Shipped', label: 'Shipped', key: 12, color: '#687722' },\r\n    { value: 'Delivered', label: 'Delivered', key: 13, color: '#112648' },\r\n    { value: 'Refused', label: 'Refused', key: 14, color: 'red' },\r\n];\r\n\r\n\r\nclass OrderDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.orderId = '';\r\n        this.state = {\r\n            orderId: '',\r\n            orderDate: '',\r\n            orderSource: '',\r\n            orderStatus: { value: 'Waiting vendor confirmation', label: 'Waiting vendor confirmation', key: 1, color: '#112648' },\r\n            courier: '',\r\n            orderTracking: '',\r\n            orderNote: '',\r\n            questionHeading: '',\r\n            questionMessage: '',\r\n            positiveBtnTxt: \"\",\r\n            negativeBtnTxt: '',\r\n        }\r\n    }\r\n\r\n    handleDateChange = (value) => {\r\n        this.setState({\r\n            orderDate: value\r\n        });\r\n    }\r\n\r\n    handleSelectChange = name => selectedOption => {\r\n        const { orderState } = this.props\r\n        var questionHeading, questionMessage, positiveBtnTxt, negativeBtnTxt\r\n        if (name === 'orderStatus' && orderState === 'edit') {\r\n            switch (selectedOption.label) {\r\n                case 'Waiting customer confirmation':\r\n                    questionHeading = 'Are You Confirm that?'\r\n                    questionMessage = 'Goods Demanded By Customer are Available'\r\n                    positiveBtnTxt = 'Yes'\r\n                    negativeBtnTxt = 'No'\r\n                    this.setQuestionModalProps(questionHeading, questionMessage, positiveBtnTxt, negativeBtnTxt, selectedOption)\r\n                    break;\r\n                case 'On-hold':\r\n                    questionHeading = 'Are You Confirm that?'\r\n                    questionMessage = 'Customer Put the Order On-Hold'\r\n                    positiveBtnTxt = 'Yes'\r\n                    negativeBtnTxt = 'No'\r\n                    this.setQuestionModalProps(questionHeading, questionMessage, positiveBtnTxt, negativeBtnTxt, selectedOption)\r\n                    break;\r\n                case 'Cancelled':\r\n                    questionHeading = 'Are You Confirm that?'\r\n                    questionMessage = 'Customer Cancelled the Order'\r\n                    positiveBtnTxt = 'Yes'\r\n                    negativeBtnTxt = 'No'\r\n                    this.setQuestionModalProps(questionHeading, questionMessage, positiveBtnTxt, negativeBtnTxt, selectedOption)\r\n                    break;\r\n                case 'Confirmed':\r\n                    questionHeading = 'Are You Confirm that?'\r\n                    questionMessage = 'Customer Confirmed the Order'\r\n                    positiveBtnTxt = 'Yes'\r\n                    negativeBtnTxt = 'No'\r\n                    this.setQuestionModalProps(questionHeading, questionMessage, positiveBtnTxt, negativeBtnTxt, selectedOption)\r\n                    break;\r\n                case 'Requested':\r\n                    questionHeading = 'Did You Call Vendor?'\r\n                    questionMessage = 'to process the Order'\r\n                    positiveBtnTxt = 'Yes'\r\n                    negativeBtnTxt = 'No'\r\n                    this.setQuestionModalProps(questionHeading, questionMessage, positiveBtnTxt, negativeBtnTxt, selectedOption)\r\n                    break;\r\n                case 'Awaiting dispatch':\r\n                    questionHeading = 'Did You Receive Call from Vendor?'\r\n                    questionMessage = 'that Parcel is ready to dispatch'\r\n                    positiveBtnTxt = 'Yes'\r\n                    negativeBtnTxt = 'No'\r\n                    this.setQuestionModalProps(questionHeading, questionMessage, positiveBtnTxt, negativeBtnTxt, selectedOption)\r\n                    break;\r\n                case 'Awaiting pickup':\r\n                    break;\r\n                case 'Rider notified':\r\n                    break;\r\n                case 'Packing in process':\r\n                    break;\r\n                case 'RTS':\r\n                    break;\r\n                case 'Shipped':\r\n                    break;\r\n                case 'Delivered':\r\n                    break;\r\n                case 'Refused':\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            this.setState({\r\n                [name]: selectedOption\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChangingStatus = (selectedOption) => {\r\n        this.setState({\r\n            orderStatus: selectedOption\r\n        })\r\n    }\r\n\r\n    setQuestionModalProps = (questionHeading, questionMessage, positiveBtnTxt, negativeBtnTxt, selectedOption) => {\r\n        this.setState({\r\n            questionHeading: questionHeading,\r\n            questionMessage: questionMessage,\r\n            positiveBtnTxt: positiveBtnTxt,\r\n            negativeBtnTxt: negativeBtnTxt\r\n        })\r\n        this.refs.questionModal.setState({ modalShow: true, option: selectedOption })\r\n    }\r\n\r\n    questionModalPositiveBtnClicked = (selectedOption) => {\r\n        if (selectedOption) {\r\n            this.handleChangingStatus(selectedOption)\r\n        }\r\n        else {\r\n            this.setState({ courier: 'M&P', orderTracking: '' }, () => { this.exportCSV('M&P') })\r\n        }\r\n    }\r\n\r\n    questionModalNegativeBtnClicked = (selectedOption) => {\r\n        if (selectedOption) {\r\n        }\r\n        else {\r\n            this.setState({ courier: 'TCS', orderTracking: '' }, () => { this.exportCSV('TCS') })\r\n        }\r\n    }\r\n\r\n    chooseCourier = () => {\r\n        let { orderStatus, courier } = this.state\r\n        if (orderStatus.label === 'Awaiting dispatch') {\r\n            if (courier) {\r\n                if (window.confirm(`Do you want to export CSV file for this order again ?\\nIf you choose 'OK' Tracking # for this order will be cleared.`)) {\r\n                    let positiveBtnTxt = <img className='w-100 h-100' alt={`M&P`} src={'/images/m&p.png'} />\r\n                    let negativeBtnTxt = <img className='w-100 h-100' alt='TCS' src={'/images/tcs.png'} />\r\n                    let selectedOption = ''\r\n                    this.setQuestionModalProps('Which Company?', 'Do You Want to Use to Ship Parcel', positiveBtnTxt, negativeBtnTxt, selectedOption)\r\n                }\r\n            }\r\n            else {\r\n                let positiveBtnTxt = <img className='w-100 h-100' alt={`M&P`} src={'/images/m&p.png'} />\r\n                let negativeBtnTxt = <img className='w-100 h-100' alt='TCS' src={'/images/tcs.png'} />\r\n                let selectedOption = ''\r\n                this.setQuestionModalProps('Which Company?', 'Do You Want to Use to Ship Parcel', positiveBtnTxt, negativeBtnTxt, selectedOption)\r\n            }\r\n        }\r\n    }\r\n\r\n    exportCSV = (courier) => {\r\n        let { orderBeingEdited, orderDetailsBeingEdited } = this.props\r\n        let order = orderBeingEdited, orderToBeExported = []\r\n        let orderDetails = orderDetailsBeingEdited\r\n        console.log(order);\r\n        console.log(orderDetails);\r\n        if (courier === 'TCS') {\r\n            orderToBeExported.push(\r\n                {\r\n\r\n                }\r\n            )\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    checkValidity = () => {\r\n        let form = this.orderDetailsForm, { orderSource, orderStatus } = this.state\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated')\r\n            return false\r\n        }\r\n        else if (!orderSource) {\r\n            this.setState({\r\n                orderSource: null\r\n            })\r\n            return false;\r\n        }\r\n        else if (!orderStatus) {\r\n            this.setState({\r\n                orderStatus: null\r\n            })\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    makeFormEmpty = () => {\r\n        this.setState({\r\n            orderId: '',\r\n            orderDate: '',\r\n            orderSource: '',\r\n            orderStatus: { value: 'Pending confirmation', label: 'Pending confirmation', key: 1, color: '#112648' },\r\n            orderTracking: '',\r\n            orderNote: '',\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let { orderId, orderSource, orderStatus, orderDate, courier, orderTracking, orderNote, questionMessage, positiveBtnTxt, negativeBtnTxt, questionHeading } = this.state\r\n        const { orderState } = this.props\r\n\r\n        return (\r\n            <MDBRow className='m-0 p-0'>\r\n                <MDBCol className='m-0 p-0'>\r\n                    <form className='m-0 p-0 orderDetailsForm' ref={el => (this.orderDetailsForm = el)} noValidate>\r\n                        <fieldset className='borderBlue py-0 px-3 w-100'>\r\n                            <legend className='legend-border'> Order:</legend>\r\n                            <MDBRow className='m-0 p-0'>\r\n                                <MDBCol className='m-0'>\r\n                                    <MDBRow center className='m-0 p-0'>\r\n                                        <MDBCol xl='2' lg='2' md='2' sm='6' className='m-0' middle >\r\n                                            <MDBInput\r\n                                                name='orderId'\r\n                                                onInput={this.handleInput}\r\n                                                className='m-0'\r\n                                                value={orderId}\r\n                                                label='Id'\r\n                                                outline\r\n                                                required\r\n                                                disabled={orderState === 'edit' && true}\r\n                                            />\r\n                                        </MDBCol>\r\n                                        <MDBCol xl='2' lg='2' md='3' sm='6' className='my-2' middle >\r\n                                            <DatePicker\r\n                                                id='datePicker'\r\n                                                selected={orderDate}\r\n                                                placeholderText='Date'\r\n                                                onChange={this.handleDateChange}\r\n                                                className='form-control'\r\n                                                peekNextMonth\r\n                                                showMonthDropdown\r\n                                                showYearDropdown\r\n                                                dropdownMode=\"select\"\r\n                                                dateFormat=\"dd/MM/yy\"\r\n                                                autoComplete='off'\r\n                                                required\r\n                                            />\r\n                                        </MDBCol>\r\n                                        <MDBCol xl='4' lg='4' md='3' sm='6' className='my-2' middle>\r\n                                            <MyOwnSelect\r\n                                                options={sourceOptions}\r\n                                                handleChange={this.handleSelectChange('orderSource')}\r\n                                                placeHolder={'Source..*'}\r\n                                                selectedValue={orderSource}\r\n                                                required={true}\r\n                                                withOutIcon={true}\r\n                                                isMulti={false}\r\n                                            />\r\n                                        </MDBCol>\r\n                                        {orderState === 'edit' ?\r\n                                            <>\r\n                                                <MDBCol xl='4' lg='4' md='4' sm='6' className='my-2' middle>\r\n                                                    <MyOwnSelect\r\n                                                        options={statusOptions}\r\n                                                        handleChange={this.handleSelectChange('orderStatus')}\r\n                                                        placeHolder={'Status..*'}\r\n                                                        selectedValue={orderStatus}\r\n                                                        required={true}\r\n                                                        withOutIcon={true}\r\n                                                        isMulti={false}\r\n                                                    />\r\n                                                </MDBCol>\r\n                                                <MDBCol md='4' className='m-0' sm='6' middle>\r\n                                                    <MDBInput\r\n                                                        label=\"Tracking Id\"\r\n                                                        name=\"orderTracking\"\r\n                                                        onInput={this.handleInput}\r\n                                                        hint={courier}\r\n                                                        value={orderTracking}\r\n                                                        outline\r\n                                                        className='m-0'\r\n                                                    />\r\n                                                </MDBCol>\r\n                                            </>\r\n                                            : null}\r\n                                        <MDBCol\r\n                                            md={orderState === 'edit' ? orderStatus.label === 'Awaiting dispatch' ? '6' : '8' : '4'}\r\n                                            sm={orderState === 'edit' ? orderStatus.label === 'Awaiting dispatch' ? '3' : '6' : '6'} className='m-0' middle>\r\n                                            <MDBInput\r\n                                                type='textarea'\r\n                                                rows='1'\r\n                                                label=\"Note\"\r\n                                                name=\"orderNote\"\r\n                                                onInput={this.handleInput}\r\n                                                value={orderNote}\r\n                                                outline\r\n                                                className='m-0'\r\n                                                style={{ borderRadius: '4px' }}\r\n                                            />\r\n                                        </MDBCol>\r\n                                        {orderState === 'edit' && orderStatus.label === 'Awaiting dispatch' ?\r\n                                            <MDBCol md='2' sm='3' className='m-0' middle>\r\n                                                <button\r\n                                                    style={{ fontSize: '17px', borderRadius: '4px' }}\r\n                                                    type='button'\r\n                                                    onClick={this.chooseCourier}\r\n                                                    className='btn py-1 px-2 w-100 mx-0 mt-0 mb-1 font-weight-bold text-white backGround-blue borderBlue fontRaleway'>\r\n                                                    Export CSV\r\n                                                </button>\r\n                                            </MDBCol>\r\n                                            : null}\r\n                                        <QuestionModal\r\n                                            ref='questionModal'\r\n                                            heading={questionHeading}\r\n                                            message={questionMessage}\r\n                                            positiveBtnClicked={this.questionModalPositiveBtnClicked}\r\n                                            negativeBtnClicked={this.questionModalNegativeBtnClicked}\r\n                                            positiveBtnTxt={positiveBtnTxt}\r\n                                            negativeBtnTxt={negativeBtnTxt}\r\n                                        />\r\n                                    </MDBRow>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                        </fieldset>\r\n                    </form>\r\n                </MDBCol>\r\n            </MDBRow >\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderDetails","import React, { Component } from 'react';\r\nimport { MDBInput, MDBRow, MDBCol } from 'mdbreact';\r\n\r\n\r\n\r\nclass OrderCustomerDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.orderId = '';\r\n        this.state = {\r\n            cName: '',\r\n            cContact: '',\r\n            cAddress: '',\r\n        }\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    checkValidity = () => {\r\n        let form = this.orderCustomerDetailsForm\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated')\r\n            return false\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    makeFormEmpty = () => {\r\n        this.setState({\r\n            cName: '',\r\n            cContact: '',\r\n            cAddress: '',\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { cName, cContact, cAddress, } = this.state\r\n\r\n        return (\r\n            <MDBRow className='my-3 mx-0 p-0'>\r\n                <MDBCol className='m-0 p-0'>\r\n                    <form className='m-0 p-0 orderCustomerDetailsForm' ref={el => (this.orderCustomerDetailsForm = el)} noValidate>\r\n                        <fieldset className='borderBlue py-0 px-3 w-100'>\r\n                            <legend className='legend-border'>Customer:</legend>\r\n                            <MDBRow className='m-0 p-0'>\r\n                                <MDBCol sm='4' className='m-0'>\r\n                                    <MDBInput\r\n                                        value={cName}\r\n                                        className='my-0'\r\n                                        style={{ marginRight: '4px' }}\r\n                                        label=\"Name\"\r\n                                        name=\"cName\"\r\n                                        onInput={this.handleInput}\r\n                                        required\r\n                                        validate\r\n                                        outline />\r\n                                </MDBCol>\r\n                                <MDBCol sm='4' className='m-0'>\r\n                                    <MDBInput\r\n                                        value={cContact}\r\n                                        className='my-0'\r\n                                        style={{ marginRight: '4px' }}\r\n                                        label=\"Contact\"\r\n                                        name=\"cContact\"\r\n                                        onInput={this.handleInput}\r\n                                        required\r\n                                        validate\r\n                                        outline />\r\n                                </MDBCol>\r\n                                <MDBCol sm='4' className='m-0'>\r\n                                    <MDBInput\r\n                                        value={cAddress}\r\n                                        className='my-0'\r\n                                        type='textarea'\r\n                                        rows='1'\r\n                                        style={{ marginRight: '4px' }}\r\n                                        label=\"Address\"\r\n                                        name=\"cAddress\"\r\n                                        onInput={this.handleInput}\r\n                                        required\r\n                                        validate\r\n                                        outline />\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                        </fieldset>\r\n                    </form>\r\n                </MDBCol>\r\n            </MDBRow>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderCustomerDetails","import React, { Component } from 'react';\r\nimport { MDBInput, MDBRow, MDBCol } from 'mdbreact';\r\nimport MyOwnSelect from '../../../misc/components/MyOwnSelect'\r\n\r\n\r\n\r\nclass OrderProductDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.orderId = '';\r\n        this.state = {\r\n            selectedProduct: '',\r\n            pQTY: 1,\r\n            pRemarks: '',\r\n            pDiscount: 0,\r\n            displayForm: props.orderState === 'edit' ? false : true,\r\n        }\r\n    }\r\n\r\n    handleSelectChange = name => selectedOption => {\r\n        this.setState({\r\n            [name]: selectedOption\r\n        })\r\n    }\r\n\r\n    onKeyPress = (e) => {\r\n        if ((e.which) === 101 || (e.which) === 45 || (e.which === 43)) e.preventDefault();\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleAddProduct = (e) => {\r\n        e.preventDefault();\r\n        let form = this.orderProductDetailsForm;\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n            return\r\n        }\r\n        else if (!this.state.selectedProduct) {\r\n            this.setState({ selectedProduct: null })\r\n            return\r\n        }\r\n        else {\r\n            // document.getElementById('pTableCard').style.display = '';\r\n            let { selectedProduct, pQTY, pRemarks, pDiscount } = this.state\r\n            let pId = selectedProduct.value, pSKU = selectedProduct.sku, pRate = selectedProduct.retailPrice, pCost = selectedProduct.costPrice,\r\n                pPrice = parseFloat(this.pPrice.value).toFixed(2), pChecked = (this.checkbox.checked) ? true : false\r\n            // console.log(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\r\n            this.props.addProductToTbl(pId, pSKU, pRate, pQTY, pDiscount, pPrice, pRemarks, pChecked, pCost);\r\n            this.setState({\r\n                selectedProduct: '',\r\n                pQTY: 1,\r\n                pRemarks: '',\r\n                pDiscount: 0\r\n            })\r\n            form.classList.remove('was-validated')\r\n            this.checkbox.checked = false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { selectedProduct, pQTY, pRemarks, pDiscount, displayForm } = this.state, { allProducts } = this.props.allData,\r\n            productOptions = allProducts && allProducts.map(product => ({\r\n                key: product.id,\r\n                label: product.name,\r\n                value: product.id,\r\n                retailPrice: product.retail_price,\r\n                costPrice: product.cost_price,\r\n                sku: product.sku,\r\n                color: product.id % 2 === 0 ?\r\n                    '#112648' : '#687722'\r\n            }));\r\n\r\n\r\n        return (\r\n            <MDBRow className='m-0 p-0'>\r\n                <MDBCol className='m-0 p-0'>\r\n                    {displayForm ?\r\n                        <form className='m-0 p-0 orderProductDetailsForm' ref={el => (this.orderProductDetailsForm = el)} onSubmit={this.handleAddProduct} noValidate>\r\n                            <fieldset className='borderBlue pt-0 pb-2 px-3 w-100'>\r\n                                <legend className='legend-border'>Product:</legend>\r\n                                <MDBRow className='m-0 p-0'>\r\n                                    <MDBCol xl='3' lg='3' md='3' sm='6' className='my-2' middle>\r\n                                        <MyOwnSelect\r\n                                            options={productOptions}\r\n                                            handleChange={this.handleSelectChange('selectedProduct')}\r\n                                            placeHolder={'Product..*'}\r\n                                            selectedValue={selectedProduct}\r\n                                            required={true}\r\n                                            withOutIcon={true}\r\n                                            isMulti={false}\r\n                                        />\r\n                                    </MDBCol>\r\n                                    <MDBCol xl='2' lg='2' md='2' sm='6' className='m-0'>\r\n                                        <MDBInput\r\n                                            value={pQTY}\r\n                                            // type='number'\r\n                                            label=\"Qty\"\r\n                                            name=\"pQTY\"\r\n                                            onKeyPress={this.onKeyPress}\r\n                                            onInput={this.handleInput}\r\n                                            required\r\n                                            pattern='^[1-9]\\d*|(^[0-9]\\d*[.]?)+[1-9]+'\r\n                                            outline\r\n                                            className='my-0'\r\n                                        />\r\n                                    </MDBCol>\r\n                                    <MDBCol xl='2' lg='2' md='2' sm='6' className='m-0'>\r\n                                        <MDBInput\r\n                                            value={pDiscount}\r\n                                            type='number'\r\n                                            label=\"Discount(%)\"\r\n                                            name='pDiscount'\r\n                                            onKeyPress={this.onKeyPress}\r\n                                            onInput={this.handleInput}\r\n                                            inputRef={e => { this.pDiscount = e }}\r\n                                            outline\r\n                                            className='my-0'\r\n                                            max={selectedProduct ? (((selectedProduct.retailPrice - selectedProduct.costPrice) / (selectedProduct.retailPrice)) * 100) - 1 : 0}\r\n                                        />\r\n                                    </MDBCol>\r\n                                    <MDBCol xl='2' lg='2' md='2' sm='6' className='m-0'>\r\n                                        <MDBInput\r\n                                            value={selectedProduct ? ((selectedProduct.retailPrice * pQTY) - (((selectedProduct.retailPrice * pQTY) * pDiscount) / 100)).toFixed(2) : 0}\r\n                                            type='number'\r\n                                            label=\"Price\"\r\n                                            inputRef={e => { this.pPrice = e }}\r\n                                            disabled\r\n                                            outline\r\n                                            className='my-0'\r\n                                        />\r\n                                    </MDBCol>\r\n                                    <MDBCol xl='3' lg='3' md='3' sm='6' className='m-0'>\r\n                                        <MDBInput\r\n                                            value={pRemarks}\r\n                                            type='textarea'\r\n                                            rows='1'\r\n                                            label=\"Remarks\"\r\n                                            name=\"pRemarks\"\r\n                                            onInput={this.handleInput}\r\n                                            outline\r\n                                            className='my-0'\r\n                                            style={{ borderRadius: '4px' }}\r\n                                        />\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                                <MDBRow className='m-0 p-0' end>\r\n                                    <MDBCol xl='3' lg='3' md='4' sm='5' className='m-0 p-0 text-center' middle>\r\n                                        <div className=\"form-check\">\r\n                                            <input className=\"align-middle\" type=\"checkbox\" ref={e => { this.checkbox = e }} />\r\n                                            <label className=\"ml-2 colorBlue\" >\r\n                                                Is extra added?\r\n                                    </label>\r\n                                        </div>\r\n                                    </MDBCol>\r\n                                    <MDBCol xl='3' lg='4' md='5' sm='6' className='m-0 text-center' middle>\r\n                                        <div className='text-center m-0'>\r\n                                            <input type=\"submit\" style={{ width: '80%' }} className=\" action-button\" value=\"Sale Product\" />\r\n                                        </div>\r\n                                    </MDBCol>\r\n                                </MDBRow>\r\n                            </fieldset>\r\n                        </form>\r\n                        :\r\n                        null\r\n                    }\r\n                </MDBCol>\r\n            </MDBRow>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderProductDetails","import React, { Component, PureComponent } from 'react';\nimport { MDBBtn, MDBIcon } from 'mdbreact'\n\n\nclass PTableRow extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            pRate: props.pRate,\n            pQTY: props.pQTY,\n            pDiscount: props.pDiscount,\n            pPrice: props.pPrice,\n            pChecked: props.pChecked\n        };\n    }\n\n    mouseEntered = () => {\n        this.inputEditQty.style.backgroundColor = '#f2f2f2'\n        this.inputEditDiscount.style.backgroundColor = '#f2f2f2'\n    }\n\n    mouseLeft = () => {\n        this.inputEditQty.style.backgroundColor = 'white'\n        this.inputEditDiscount.style.backgroundColor = 'white'\n    }\n\n    deleteRowfn(e) {\n        let el = e.target,\n            row = el.closest('tr'),\n            rowToBeDeleted = row.rowIndex,\n            pPrice = row.cells[6].innerHTML,\n            pChecked = this.state.pChecked\n        this.props.deleteProductFrmTbl(pPrice, rowToBeDeleted, pChecked);\n    }\n\n    handleInputQty = e => {\n        let { pPrice, pChecked, pDiscount, pRate } = this.state,\n            { pCost } = this.props,\n            updatedQty = e.target.value,\n            updatedPrice;\n        this.setState({ pQTY: updatedQty })\n        // console.log(updatedQty > 0);\n        updatedPrice = updatedQty > 0 ?\n            parseFloat((pRate * updatedQty) - (((pRate * updatedQty) * pDiscount) / 100)).toFixed(2)\n            : 0\n        // console.log(updatedPrice);\n        // console.log(this.props.pCost);\n        if (updatedPrice > (updatedQty * pCost).toFixed(2)) {\n            this.props.minusFromTotal(pPrice);\n            pChecked && this.props.minusFromTotalValueAdded(pPrice);\n            this.setState({\n                pPrice: updatedPrice,\n            }, function () {\n                this.props.addToTotal(updatedPrice);\n                pChecked && this.props.addToTotalValueAdded(updatedPrice);\n            })\n        }\n    }\n\n    handleInputDiscount = e => {\n        let { pPrice, pChecked, pRate, pQTY } = this.state,\n            { pCost } = this.props,\n            updatedDiscount = e.target.value,\n            updatedPrice = pQTY ? parseFloat((pRate * pQTY) - (((pRate * pQTY) * updatedDiscount) / 100)).toFixed(2) : 0\n        // console.log(pQTY);\n        // console.log(pCost);\n        // console.log(pCost * pQTY);\n        // console.log(updatedPrice);\n\n        if (updatedPrice > (pQTY * pCost).toFixed(2)) {\n            this.props.minusFromTotal(pPrice);\n            pChecked && this.props.minusFromTotalValueAdded(pPrice);\n            this.setState({\n                pDiscount: updatedDiscount,\n                pPrice: updatedPrice,\n            }, function () {\n                this.props.addToTotal(updatedPrice);\n                pChecked && this.props.addToTotalValueAdded(updatedPrice);\n            })\n        }\n    }\n\n    handleBlurQty = e => {\n        if (e.target.value == 0 || e.target.value == '') {\n            let { pPrice, pChecked, pDiscount, pRate } = this.state,\n                { pCost } = this.props,\n                updatedQty = 1,\n                updatedPrice;\n            this.setState({ pQTY: updatedQty })\n            updatedPrice = updatedQty > 0 ?\n                parseFloat((pRate * updatedQty) - (((pRate * updatedQty) * pDiscount) / 100)).toFixed(2)\n                : 0\n            if (updatedPrice > (updatedQty * pCost)) {\n                this.props.minusFromTotal(pPrice);\n                pChecked && this.props.minusFromTotalValueAdded(pPrice);\n                this.setState({\n                    pPrice: updatedPrice,\n                }, function () {\n                    this.props.addToTotal(updatedPrice);\n                    pChecked && this.props.addToTotalValueAdded(updatedPrice);\n                })\n            }\n        }\n    }\n\n    onKeyPress = (e) => {\n\n        // if (isNaN(String.fromCharCode(e.which))) e.preventDefault();\n        // if ((e.which) === 32 || (e.which) === 13) e.preventDefault();\n        let array = [46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]\n        if (array.includes(e.which)) {\n        }\n        else {\n            e.preventDefault()\n        }\n    }\n\n    handleChangeExtraAdded = () => {\n        this.setState({\n            pChecked: !this.state.pChecked\n        }, function () {\n            this.state.pChecked ?\n                this.props.addToTotalValueAdded(this.state.pPrice) :\n                this.props.minusFromTotalValueAdded(this.state.pPrice)\n        })\n    }\n\n    render() {\n        let { index, pId, pSKU, pRemarks, pRate, pCost, allData } = this.props,\n            { pQTY, pPrice, pDiscount, pChecked } = this.state,\n            product = allData.allProducts && allData.allProducts.filter(product => product.id === Number(pId)).shift(),\n            pName = product ? product.name : 'Not Found'\n\n\n        return (\n\n            <tr onMouseEnter={this.mouseEntered} onMouseLeave={this.mouseLeft}>\n                <th scope='row' className='font-weight-bold colorBlue'>{index}</th>\n                <td >{pName}</td>\n                <td >{pSKU}</td>\n                <td >{pRate}</td>\n                <td>\n                    <input type='text' className='m-0 text-center w-75 colorBlue p-0'\n                        onKeyPress={this.onKeyPress} onInput={this.handleInputQty} ref={el => this.inputEditQty = el}\n                        value={pQTY} onChange={() => { }} onBlur={this.handleBlurQty}\n                        style={{ border: 'none', outline: 'none' }} />\n                </td>\n                <td>\n                    <input type='text' className='m-0 text-center w-75 colorBlue p-0'\n                        onKeyPress={this.onKeyPress} onInput={this.handleInputDiscount} ref={el => this.inputEditDiscount = el}\n                        value={pDiscount} onChange={() => { }}\n                        style={{ border: 'none', outline: 'none' }} />\n                </td>\n                <td >{pPrice}</td>\n                <td suppressContentEditableWarning={true} contentEditable='true'>{pRemarks}</td>\n                <td >\n                    <input type='checkbox' onChange={this.handleChangeExtraAdded} checked={pChecked} style={{ verticalAlign: 'middle' }} className='fontRaleway' />\n                </td>\n\n                {/* \"id\" needed when pTable row called from edit modal */}\n\n                <td style={{ display: 'none' }}>{pCost}</td>\n                <td style={{ display: 'none' }}>{pId}</td>\n                <td >\n                    <MDBBtn\n                        style={{ fontSize: '17px', borderRadius: '50%', border: '2px solid #112648' }}\n                        color='white'\n                        onClick={this.deleteRowfn.bind(this)}\n                        className='mx-0 my-1 py-1 px-2'\n                        size=\"sm\"\n                    >\n                        <MDBIcon icon=\"trash iconRed\" />\n                    </MDBBtn>\n\n                </td>\n            </tr >\n        );\n    }\n}\n\n\nexport default PTableRow","import React, { Component } from 'react';\nimport PTableRow from '../../../misc/components/PTableRow';\nimport { Animation, MDBCol, MDBRow } from 'mdbreact';\n\n\n\nclass ProductsTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Rows: [],\n            submitOrderBtn: false,\n            displayTable: false\n        }\n    }\n\n    addProductToTbl = (pId, pSKU, pRate, pQTY, pDiscount, pPrice, pRemarks, pChecked, pCost) => {\n        let row = [], { Rows } = this.state, index = Rows.length + 1,\n            { allData, minusFromTotal, addToTotal, minusFromTotalValueAdded, addToTotalValueAdded } = this.props\n        row.push(\n            <PTableRow\n                index={index}\n                pId={pId}\n                pSKU={pSKU}\n                pRate={pRate}\n                pQTY={pQTY}\n                pDiscount={pDiscount}\n                pPrice={pPrice}\n                pRemarks={pRemarks}\n                pChecked={pChecked}\n                pCost={pCost}\n                key={Math.random()}\n                deleteProductFrmTbl={this.deleteProductFrmTbl}\n                minusFromTotal={minusFromTotal}\n                addToTotal={addToTotal}\n                minusFromTotalValueAdded={minusFromTotalValueAdded}\n                addToTotalValueAdded={addToTotalValueAdded}\n                allData={allData}\n            />\n        );\n\n        Rows.length === 0 ?\n            this.setState({\n                displayTable: true,\n                submitOrderBtn: true,\n                Rows: [...Rows, row]\n            })\n            :\n            this.setState({\n                Rows: [...Rows, row]\n            })\n    }\n\n    deleteProductFrmTbl = (pPrice, rowToBeDeleted, pChecked) => {\n        let updatedRows = this.state.Rows\n        rowToBeDeleted !== -1 && updatedRows.splice(rowToBeDeleted - 1, 1)\n        this.props.minusFromTotal(pPrice);\n        pChecked && this.props.minusFromTotalValueAdded(pPrice);\n        updatedRows.length === 0 ?\n            this.setState({ Rows: updatedRows, submitOrderBtn: false, displayTable: false })\n            :\n            this.setState({ Rows: updatedRows })\n    }\n\n    submitOrder = () => {\n        // this.refs.loaderModal.setState({ modalShow: true })\n        let allFormsValid = this.props.checkOrderValidity(),\n            // let allFormsValid = false,\n            orderDetails = [], tableValid = true\n        if (allFormsValid) {\n            let pTable = document.getElementById('orderProductsTable');\n            for (let index = pTable.rows.length - 1; index > 0; index--) {\n                const pId = pTable.rows[index].cells[10].innerHTML;\n                const pSKU = pTable.rows[index].cells[2].innerHTML;\n                const pRate = pTable.rows[index].cells[3].innerHTML;\n                const pQTY = pTable.rows[index].cells[4].childNodes[0].value;\n                const pDiscount = pTable.rows[index].cells[5].childNodes[0].value;\n                const pPrice = pTable.rows[index].cells[6].innerHTML;\n                const pRemarks = pTable.rows[index].cells[7].innerHTML;\n                const pChecked = pTable.rows[index].cells[8].childNodes[0].checked;\n                const pCost = pTable.rows[index].cells[9].innerHTML;\n                // console.log(pName, pSKU, pRate, pQTY,pDiscount, pPrice, pRemarks, pChecked)\n                if (pQTY == 0 || pQTY == '') {\n                    this.refs.validatingLabel.innerHTML = `You can't set any product's quantity to 0.`\n                    tableValid = false\n                    break;\n                }\n                const orderDetail = {\n                    product_id: pId, product_sku: pSKU, product_cost: pCost, product_rate: pRate, product_qty: pQTY, product_discount: pDiscount, product_price: pPrice,\n                    product_remarks: pRemarks, product_extra_added: pChecked\n                }\n                orderDetails.push(orderDetail)\n            }\n            // console.log(tableValid && orderDetails);\n            tableValid && this.props.saveOrderDetailsToDB(orderDetails);\n        }\n        else {\n            alert('Please enter all required data.')\n        }\n    }\n\n    makeTableEmpty = () => {\n        // this.refs.loaderModal.setState({ modalShow: false })\n        this.setState({\n            Rows: [],\n            submitOrderBtn: false,\n            displayTable: false,\n        })\n    }\n\n    render() {\n        let { submitOrderBtn, displayTable } = this.state, { orderState } = this.props\n\n\n        return (\n            <MDBRow className='my-3 mx-0 p-0'>\n                <MDBCol className='m-0 p-0'>\n                    {\n                        displayTable ?\n                            <Animation type=\"fadeInDown\" duration=\"1500ms\" delay=\"0ms\">\n                                <fieldset className='borderBlue px-3 pb-0 pt-2 w-100'>\n                                    <legend className='legend-border'>Products to be sale:</legend>\n                                    <MDBRow className='m-0 p-0 table-responsive'>\n                                        <table id='orderProductsTable' className='table table-sm table-hover table-bordered mb-0'>\n                                            {submitOrderBtn ?\n                                                <caption className='mx-0 my-2 p-0 text-left'>\n                                                    <button type='button' onClick={this.submitOrder}\n                                                        style={{ fontSize: \"17px\", borderRadius: '4px' }}\n                                                        className='fontRaleway btn py-1 px-2 mx-0 my-2 w-100 font-weight-bold text-white borderBlue backGround-blue'\n                                                    >\n                                                        {orderState === 'new' ? 'SUBMIT' : 'UPDATE'}\n                                                    </button>\n                                                    <label ref='validatingLabel' className='p-0 validatingLabel'></label>\n                                                </caption>\n                                                : null}\n                                            <thead className='text-white' >\n                                                <tr >\n                                                    <th scope='col' style={{ borderTopLeftRadius: '10px' }}>#</th>\n                                                    <th scope='col'>Product</th>\n                                                    <th scope='col'>SKU</th>\n                                                    <th scope='col'>Rate</th>\n                                                    <th scope='col'>QTY</th>\n                                                    <th scope='col'>Discount (%)</th>\n                                                    <th scope='col'>Price</th>\n                                                    <th scope='col'>Remarks</th>\n                                                    <th scope='col'>Extra Added?</th>\n                                                    <th scope='col' style={{ borderTopRightRadius: '10px' }}>Action</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody className='p-0 m-0'>\n                                                {this.state.Rows}\n                                            </tbody>\n                                        </table>\n                                    </MDBRow>\n                                </fieldset>\n                            </Animation>\n                            : null\n                    }\n                </MDBCol>\n            </MDBRow>\n        );\n    }\n\n}\n\nexport default ProductsTable","import React from 'react';\nimport OrderDetails from './sections/OrderDetails';\nimport OrderCustomerDetails from './sections/OrderCustomerDetails';\nimport OrderProductDetails from './sections/OrderProductDetails';\nimport OrderProductsTable from './sections/OrderProductsTable';\nimport { MDBRow, MDBCol, MDBInput, MDBCard, MDBCardBody, MDBCardHeader } from 'mdbreact';\nimport { Can } from '../../../configs/Ability-context'\n\n\nclass NewOrder extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      orderTotal: 0,\n      totalValueAdded: 0,\n      orderType: 'sale',\n      orderState: 'new'\n    };\n  }\n  addProductToTbl = (pId, pSKU, pRate, pQTY, pDiscount, pPrice, pRemarks, pChecked, pCost) => {\n    // console.log(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\n    this.refs.orderProductsTable.addProductToTbl(pId, pSKU, pRate, pQTY, pDiscount, pPrice, pRemarks, pChecked, pCost);\n    this.addToTotal(pPrice);\n    pChecked && this.addToTotalValueAdded(pPrice);\n  }\n\n  //handling total prices\n  minusFromTotal = (pPrice) => {\n    let updatedTotal = parseFloat(Number(this.state.orderTotal) - Number(pPrice)).toFixed(2)\n    this.setState({\n      orderTotal: updatedTotal\n    })\n  }\n\n  addToTotal = (pPrice) => {\n    // console.log((pPrice));\n    // console.log((this.state.orderTotal));\n    let updatedTotal = parseFloat(Number(this.state.orderTotal) + Number(pPrice)).toFixed(2)\n    // let updatedTotal = Number(this.state.orderTotal) + Number(pPrice)\n    // console.log(updatedTotal);\n    this.setState({\n      orderTotal: updatedTotal\n    })\n  }\n\n  minusFromTotalValueAdded = (pPrice) => {\n    let updatedTotalValueAdded = parseFloat(Number(this.state.totalValueAdded) - Number(pPrice)).toFixed(2)\n    this.setState({\n      totalValueAdded: updatedTotalValueAdded\n    })\n  }\n\n  addToTotalValueAdded = (pPrice) => {\n    let updatedTotalValueAdded = parseFloat(Number(this.state.totalValueAdded) + Number(pPrice)).toFixed(2)\n    this.setState({\n      totalValueAdded: updatedTotalValueAdded\n    })\n  }\n\n  checkOrderValidity = () => {\n    let orderDetailsValidity = this.refs.orderDetails.checkValidity();\n    let orderCustomerDetailsValidity = this.refs.orderDetails.checkValidity();\n    if (!orderDetailsValidity || !orderCustomerDetailsValidity) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n\n  saveOrderDetailsToDB = (orderDetails) => {\n    let { orderDate, orderId, orderSource, orderStatus } = this.refs.orderDetails.state\n    orderDetails.map(detail => {\n      detail.order_date = orderDate\n      detail.order_id = orderId\n      detail.order_source = orderSource.value\n      detail.order_status = orderStatus.value\n      detail.detail_type = this.state.orderType === 'sale' && 'Sale'\n    })\n    // console.log(orderDetails);\n    let orderDetailsOptions = {\n      method: 'POST',\n      body: JSON.stringify({ orderDetails: orderDetails }),\n      headers: { 'Content-Type': 'application/json' }\n    }\n    fetch('/addNewOrderDetails', orderDetailsOptions)\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json)\n        let success = true;\n        json.data.forEach(data => { if (!data.success) success = false; return })\n        success && this.saveOrderToDB()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  saveOrderToDB = () => {\n    let { orderId, orderDate, orderSource, orderNote, orderStatus } = this.refs.orderDetails.state,\n      { orderTotal, totalValueAdded, orderType } = this.state,\n      { cName, cContact, cAddress } = this.refs.orderCustomerDetails.state,\n      newOrder = {\n        orderId: orderId, date: orderDate, source: orderSource.value, status: orderStatus.value,\n        orderType: orderType, note: orderNote, total: orderTotal, totalAddedValue: totalValueAdded,\n        cName: cName, cContact: cContact, cAddress: cAddress\n      }\n    // console.log(\n    //   JSON.stringify(newOrder)\n    // );\n    var newOrderOptions = {\n      method: 'POST',\n      body: JSON.stringify(newOrder),\n      headers: { 'Content-Type': 'application/json' }\n    }\n    fetch('/addNewOrder', newOrderOptions)\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json)\n        if (json.success) {\n          this.refs.orderProductsTable.makeTableEmpty();\n          this.refs.orderDetails.makeFormEmpty();\n          this.refs.orderCustomerDetails.makeFormEmpty();\n          this.setState({\n            orderTotal: 0,\n            totalValueAdded: 0,\n          })\n          // window.location.reload()\n        }\n        else\n          alert(json.message)\n      })\n      .catch((error) => console.log(error))\n  }\n\n\n\n  render() {\n    let { orderTotal, totalValueAdded, orderState, orderType } = this.state, { allData } = this.props\n\n    return (\n      <Can I='create' a='order'>\n        <MDBCard style={{ marginTop: '50px', borderRadius: '15px', marginBottom: '20px' }} className='w-100'>\n          <MDBCardHeader tag=\"h4\" className=\"text-center text-white font-weight-bold backGround-green\"\n            style={{ borderTopRightRadius: '15px', borderTopLeftRadius: '15px' }}>\n            {orderType === 'sale' ? 'Order' : orderType === 'refund' ? 'Refund' : 'Replacement'} Details\n          </MDBCardHeader>\n          <MDBCardBody className='px-5 py-4 m-0'>\n            <OrderDetails\n              ref='orderDetails'\n              orderState={orderState}\n              orderType={orderType}\n            />\n            <OrderCustomerDetails\n              ref='orderCustomerDetails'\n            />\n\n            <OrderProductDetails\n              ref='orderProductDetails'\n              addProductToTbl={this.addProductToTbl}\n              deleteRowsFromtbl={this.deleteRowsFromtbl}\n              allData={allData}\n              orderState={orderState}\n              orderType={orderType}\n            />\n            <MDBRow end className='mb-0 mt-3 p-0' >\n              <MDBCol sm='4' className='m-0'>\n                <MDBInput\n                  value={orderTotal}\n                  label=\"Total\"\n                  hint=\"Total\"\n                  disabled\n                  className='m-0'\n                  style={{ fontWeight: 'bold' }}\n                />\n              </MDBCol>\n              <MDBCol sm='4' className='m-0'>\n                <MDBInput\n                  value={totalValueAdded}\n                  className='m-0'\n                  style={{ fontWeight: 'bold' }}\n                  label=\"Total value added\"\n                  hint=\"Total value added\"\n                  disabled\n                />\n              </MDBCol>\n            </MDBRow>\n            <OrderProductsTable\n              ref='orderProductsTable'\n              saveOrderDetailsToDB={this.saveOrderDetailsToDB}\n              saveOrderToDB={this.saveOrderToDB}\n              checkOrderValidity={this.checkOrderValidity}\n              minusFromTotal={this.minusFromTotal}\n              addToTotal={this.addToTotal}\n              minusFromTotalValueAdded={this.minusFromTotalValueAdded}\n              addToTotalValueAdded={this.addToTotalValueAdded}\n              orderState={orderState}\n              orderType={orderType}\n              allData={allData}\n            />\n          </MDBCardBody>\n        </MDBCard >\n      </Can>\n    );\n  }\n}\n\nexport default NewOrder;","import React, { Component } from 'react';\r\nimport NewOrder from './pages/NewOrder';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\n\r\nclass SecuredNewOrder extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n        let { allData } = this.props\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='create' a='order'><NewOrder allData={allData} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredNewOrder","import React from 'react';\nimport { MDBRow, MDBCol, MDBInput, MDBCard, MDBCardBody, MDBCardHeader } from 'mdbreact';\nimport { Can } from '../../../configs/Ability-context'\n\n\n\nconst ViewOrder = ({ allData }) => {\n\n  let params = new URLSearchParams(window.location.search), orderId = Number(params.get('order')), tableRows = [],\n    desiredOrder = allData && allData.allOrders.filter(order => order.id === orderId).shift(),\n    desiredOrderDetails = allData && allData.allOrderDetails.filter(detail => detail.order_id === desiredOrder.order_id)\n  // console.log(desiredOrder);\n  // console.log(desiredOrderDetails);\n  desiredOrderDetails && desiredOrderDetails.forEach(detail => {\n    tableRows.push(\n      <tr key={tableRows.length}>\n        <th scope='row' className='font-weight-bold colorBlue'>{tableRows.length+1}</th>\n        <td >{detail.product_name}</td>\n        <td >{detail.product_sku}</td>\n        <td >{detail.product_rate}</td>\n        <td >{detail.product_qty}</td>\n        <td >{detail.product_discount} </td>\n        <td >{detail.product_price}</td>\n        <td >{detail.product_remarks}</td>\n        <td >\n          <input type='checkbox' disabled checked={detail.product_extra_added} style={{ verticalAlign: 'middle' }} className='fontRaleway' />\n        </td>\n      </tr >\n    )\n  })\n\n\n  return (\n    <Can I='read' a='order'>\n      <MDBCard style={{ marginTop: '50px', borderRadius: '15px', marginBottom: '20px' }} className='w-100'>\n        <MDBCardHeader tag=\"h4\" className=\"text-center text-white font-weight-bold backGround-green\"\n          style={{ borderTopRightRadius: '15px', borderTopLeftRadius: '15px' }}>\n          Your Order\n        </MDBCardHeader>\n        <MDBCardBody className='px-5 py-4 m-0'>\n          <fieldset className='borderBlue py-0 px-3 mb-3 w-100'>\n            <legend className='legend-border'> Order:</legend>\n            <MDBRow className='m-0 p-0'>\n              <MDBCol className='m-0'>\n                <MDBRow center className='m-0 p-0'>\n                  <MDBCol xl='2' lg='2' md='2' sm='6' className='m-0' middle >\n                    <MDBInput\n                      className='m-0'\n                      value={desiredOrder.order_id}\n                      label='Id'\n                      outline\n                      disabled\n                    />\n                  </MDBCol>\n                  <MDBCol xl='2' lg='2' md='3' sm='6' className='my-2' middle >\n                    <MDBInput\n                      className='m-0'\n                      value={new Date(desiredOrder.date).toLocaleDateString()}\n                      label='Date'\n                      outline\n                      disabled\n                    />\n                  </MDBCol>\n                  <MDBCol xl='4' lg='4' md='3' sm='6' className='my-2' middle>\n                    <MDBInput\n                      className='m-0'\n                      value={desiredOrder.source}\n                      label='Source'\n                      outline\n                      disabled\n                    />\n                  </MDBCol>\n                  <MDBCol xl='4' lg='4' md='4' sm='6' className='my-2' middle>\n                    <MDBInput\n                      className='m-0'\n                      value={desiredOrder.status}\n                      label='Status'\n                      outline\n                      disabled\n                    />\n                  </MDBCol>\n                  <MDBCol md='4' className='m-0' sm='6' middle>\n                    <MDBInput\n                      label=\"Tracking Id\"\n                      value={desiredOrder.tracking_id || ' '}\n                      outline\n                      className='m-0'\n                      disabled\n                    />\n                  </MDBCol>\n                  <MDBCol md={'8' || '4'} sm='6' className='m-0' middle>\n                    <MDBInput\n                      type='textarea'\n                      rows='1'\n                      label=\"Note\"\n                      value={desiredOrder.note}\n                      outline\n                      className='m-0'\n                      style={{ borderRadius: '4px' }}\n                    />\n                  </MDBCol>\n                </MDBRow>\n              </MDBCol>\n            </MDBRow>\n          </fieldset>\n          <fieldset className='borderBlue mb-3 py-0 px-3 w-100'>\n            <legend className='legend-border'>Customer:</legend>\n            <MDBRow className='m-0 p-0'>\n              <MDBCol sm='4' className='m-0'>\n                <MDBInput\n                  value={desiredOrder.customer_name}\n                  className='my-0'\n                  style={{ marginRight: '4px' }}\n                  label=\"Name\"\n                  disabled\n                  outline />\n              </MDBCol>\n              <MDBCol sm='4' className='m-0'>\n                <MDBInput\n                  value={desiredOrder.customer_contact}\n                  className='my-0'\n                  style={{ marginRight: '4px' }}\n                  label=\"Contact\"\n                  disabled\n                  outline />\n              </MDBCol>\n              <MDBCol sm='4' className='m-0'>\n                <MDBInput\n                  value={desiredOrder.customer_address}\n                  className='my-0'\n                  type='textarea'\n                  rows='1'\n                  style={{ marginRight: '4px' }}\n                  label=\"Address\"\n                  disabled\n                  outline />\n              </MDBCol>\n            </MDBRow>\n          </fieldset>\n          <MDBRow end className='mb-0 mt-3 p-0' >\n            <MDBCol sm='4' className='m-0'>\n              <MDBInput\n                value={desiredOrder.total}\n                label=\"Total\"\n                disabled\n                className='m-0'\n                style={{ fontWeight: 'bold' }}\n              />\n            </MDBCol>\n            <MDBCol sm='4' className='m-0'>\n              <MDBInput\n                value={desiredOrder.total_value_added}\n                className='m-0'\n                style={{ fontWeight: 'bold' }}\n                label=\"Total value added\"\n                disabled\n              />\n            </MDBCol>\n          </MDBRow>\n          <fieldset className='borderBlue px-3 pb-0 pt-2 w-100'>\n            <legend className='legend-border'>Products:</legend>\n            <MDBRow className='m-0 p-0 table-responsive'>\n              <table id='' className='table table-sm table-hover table-bordered mb-3'>\n                <thead className='text-white' >\n                  <tr >\n                    <th scope='col' style={{ borderTopLeftRadius: '10px' }}>#</th>\n                    <th scope='col'>Product</th>\n                    <th scope='col'>SKU</th>\n                    <th scope='col'>Rate</th>\n                    <th scope='col'>QTY</th>\n                    <th scope='col'>Discount (%)</th>\n                    <th scope='col'>Price</th>\n                    <th scope='col'>Remarks</th>\n                    <th scope='col' style={{ borderTopRightRadius: '10px' }}>Extra Added ?</th>\n                  </tr>\n                </thead>\n                <tbody className='p-0 m-0'>\n                  {tableRows}\n                </tbody>\n              </table>\n            </MDBRow>\n          </fieldset>\n        </MDBCardBody>\n      </MDBCard >\n    </Can>\n  );\n}\n\nexport default ViewOrder;","import React, { Component } from 'react';\r\nimport ViewOrder from './pages/ViewOrder';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\n\r\nclass SecuredViewOrder extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n        let { allData } = this.props\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='read' a='order'><ViewOrder allData={allData} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredViewOrder","import React from 'react';\nimport OrderDetails from './sections/OrderDetails';\nimport OrderCustomerDetails from './sections/OrderCustomerDetails';\nimport OrderProductDetails from './sections/OrderProductDetails';\nimport OrderProductsTable from './sections/OrderProductsTable';\nimport { MDBRow, MDBCol, MDBInput, MDBCard, MDBCardBody, MDBCardHeader, MDBIcon } from 'mdbreact';\nimport PTableRow from '../../misc/components/PTableRow';\nimport { Can } from '../../../configs/Ability-context'\n\n\n\n\nclass EditOrder extends React.Component {\n  constructor(props) {\n    super();\n    let params = new URLSearchParams(window.location.search),\n      orderId = Number(params.get('order')),\n      { allData } = props,\n      desiredOrder = allData && allData.allOrders && allData.allOrders.filter(order => order.id === orderId).shift(),\n      desiredOrderDetails = desiredOrder && allData && allData.allOrderDetails && allData.allOrderDetails.filter(detail => detail.order_id === desiredOrder.order_id)\n    this.state = {\n      orderBeingEdited: desiredOrder,\n      orderDetailsBeingEdited: desiredOrderDetails,\n      orderTotal: desiredOrder && desiredOrder.total || 0,\n      totalValueAdded: desiredOrder && desiredOrder.total_value_added || 0,\n      orderType: 'sale',\n      orderState: 'edit',\n      desiredOrder: desiredOrder,\n      desiredOrderDetails: desiredOrderDetails,\n      displayAddFormButton: true,\n      tableUpdated: false,\n    };\n  }\n\n  //setting existing data \n  componentDidMount = () => {\n    let { desiredOrder, desiredOrderDetails } = this.state, tableRows = []\n    if (desiredOrder) {\n      this.refs.orderDetails.setState({\n        orderId: desiredOrder.order_id,\n        orderDate: new Date(desiredOrder.date),\n        orderSource: { value: desiredOrder.source, label: desiredOrder.source, key: 1, color: '#112648' },\n        orderStatus: { value: desiredOrder.status, label: desiredOrder.status, key: 1, color: '#112648' },\n        courier: desiredOrder.courier || '',\n        orderTracking: desiredOrder.tracking_id || '',\n        orderNote: desiredOrder.note,\n      })\n      this.refs.orderCustomerDetails.setState({\n        cName: desiredOrder.customer_name,\n        cContact: desiredOrder.customer_contact,\n        cAddress: desiredOrder.customer_address,\n      })\n      if (desiredOrderDetails) {\n        desiredOrderDetails.forEach(detail => {\n          tableRows.push(\n            <PTableRow\n              index={tableRows.length}\n              pId={detail.product_id}\n              pSKU={detail.product_sku}\n              pCost={detail.product_cost}\n              pRate={detail.product_rate}\n              pQTY={detail.product_qty}\n              pDiscount={detail.product_discount}\n              pPrice={detail.product_price}\n              pRemarks={detail.product_remarks}\n              pChecked={detail.product_extra_added}\n              key={Math.random()}\n              deleteProductFrmTbl={this.refs.orderProductsTable.deleteProductFrmTbl}\n              minusFromTotal={this.minusFromTotal}\n              addToTotal={this.addToTotal}\n              minusFromTotalValueAdded={this.minusFromTotalValueAdded}\n              addToTotalValueAdded={this.addToTotalValueAdded}\n              allData={this.props.allData}\n            />\n          )\n        })\n        this.refs.orderProductsTable.setState({\n          Rows: tableRows,\n          submitOrderBtn: true,\n          displayTable: true,\n        })\n      }\n    }\n  }\n\n  addProductToTbl = (pId, pSKU, pRate, pQTY, pDiscount, pPrice, pRemarks, pChecked, pCost) => {\n    // console.log(pName, pSKU, pRate, pQTY, pPrice, pRemarks, pChecked);\n    this.refs.orderProductsTable.addProductToTbl(pId, pSKU, pRate, pQTY, pDiscount, pPrice, pRemarks, pChecked, pCost);\n    this.addToTotal(pPrice);\n    pChecked && this.addToTotalValueAdded(pPrice);\n  }\n\n  //handling total prices\n  minusFromTotal = (pPrice) => {\n    let updatedTotal = parseFloat(Number(this.state.orderTotal) - Number(pPrice)).toFixed(2)\n    this.setState({\n      orderTotal: updatedTotal,\n      tableUpdated: true\n    })\n  }\n\n  addToTotal = (pPrice) => {\n    let updatedTotal = parseFloat(Number(this.state.orderTotal) + Number(pPrice)).toFixed(2)\n    this.setState({\n      orderTotal: updatedTotal,\n      tableUpdated: true\n    })\n  }\n\n  minusFromTotalValueAdded = (pPrice) => {\n    let updatedTotalValueAdded = parseFloat(Number(this.state.totalValueAdded) - Number(pPrice)).toFixed(2)\n    this.setState({\n      totalValueAdded: updatedTotalValueAdded,\n      tableUpdated: true\n    })\n  }\n\n  addToTotalValueAdded = (pPrice) => {\n    let updatedTotalValueAdded = parseFloat(Number(this.state.totalValueAdded) + Number(pPrice)).toFixed(2)\n    this.setState({\n      totalValueAdded: updatedTotalValueAdded,\n      tableUpdated: true\n    })\n  }\n\n  //checking order forms validity\n  checkOrderValidity = () => {\n    let orderDetailsValidity = this.refs.orderDetails.checkValidity();\n    let orderCustomerDetailsValidity = this.refs.orderDetails.checkValidity();\n    if (!orderDetailsValidity || !orderCustomerDetailsValidity) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n\n  //updating order-products to DB\n  saveOrderDetailsToDB = (orderDetails) => {\n    let { orderDate, orderId, orderSource, orderStatus } = this.refs.orderDetails.state,\n      { tableUpdated } = this.state\n\n    //deleting existing order-products of updated-order\n    if (tableUpdated) {\n      let deleteOrderDetailsOptions = {\n        method: 'DELETE',\n        body: JSON.stringify({ orderId: orderId }),\n        headers: { 'Content-Type': 'application/json' }\n      }\n      fetch('/deleteOrderDetails', deleteOrderDetailsOptions)\n        .then((res) => res.json())\n        .then((json) => {\n          console.log(json)\n\n          //creating again order-products of updated order\n          if (json.success) {\n            orderDetails.map(detail => {\n              detail.order_date = orderDate\n              detail.order_id = orderId\n              detail.order_source = orderSource.value\n              detail.order_status = orderStatus.value\n              detail.detail_type = this.state.orderType === 'sale' && 'Sale'\n            })\n            // console.log(orderDetails);\n            let orderDetailsOptions = {\n              method: 'POST',\n              body: JSON.stringify({ orderDetails: orderDetails }),\n              headers: { 'Content-Type': 'application/json' }\n            }\n            fetch('/addNewOrderDetails', orderDetailsOptions)\n              .then((res) => res.json())\n              .then((json) => {\n                console.log(json)\n                let success = true;\n                json.data.forEach(data => { if (!data.success) success = false; return })\n                success && this.saveOrderToDB()\n              })\n              .catch((error) => console.log(error))\n          }\n        })\n        .catch((error) => console.log(error))\n    }\n    else {\n      let updates = {\n        orderId: orderId, orderDate: orderDate,\n        orderSource: orderSource.value,\n        orderStatus: orderStatus.value,\n      },\n        updateOrderDetailsOptions = {\n          method: 'PUT',\n          body: JSON.stringify(updates),\n          headers: { 'Content-Type': 'application/json' }\n        }\n      fetch('/updateOrderDetails', updateOrderDetailsOptions)\n        .then((res) => res.json())\n        .then((json) => {\n          console.log(json)\n          json.success && this.saveOrderToDB()\n        })\n        .catch((error) => console.log(error))\n    }\n  }\n\n  //updating order to DB\n  saveOrderToDB = () => {\n    let { orderDate, orderSource, orderNote, orderStatus, orderTracking, courier } = this.refs.orderDetails.state,\n      { orderTotal, totalValueAdded, desiredOrder } = this.state,\n      { cName, cContact, cAddress } = this.refs.orderCustomerDetails.state,\n      updatedOrder = {\n        id: desiredOrder.id, date: orderDate, source: orderSource.value, status: orderStatus.value, courier: courier,\n        trackingId: orderTracking, note: orderNote, total: orderTotal, totalAddedValue: totalValueAdded,\n        cName: cName, cContact: cContact, cAddress: cAddress\n      }\n    // console.log(\n    //   JSON.stringify(newOrder)\n    // );\n    let updatedOrderOptions = {\n      method: 'PUT',\n      body: JSON.stringify(updatedOrder),\n      headers: { 'Content-Type': 'application/json' }\n    }\n    fetch('/updateOrder', updatedOrderOptions)\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json)\n        if (json.success) {\n          window.location.reload()\n        }\n        else\n          alert(json.message)\n      })\n      .catch((error) => console.log(error))\n  }\n\n\n\n  render() {\n    let { orderTotal, totalValueAdded, orderState, displayAddFormButton, desiredOrder, desiredOrderDetails } = this.state, { allData } = this.props\n\n    return (\n      <Can I='create' a='order'>\n        <MDBCard style={{ marginTop: '50px', borderRadius: '15px', marginBottom: '20px' }} className='w-100'>\n          <MDBCardHeader tag=\"h4\" className=\"text-center text-white font-weight-bold backGround-green\"\n            style={{ borderTopRightRadius: '15px', borderTopLeftRadius: '15px' }}>\n            Order Details\n          </MDBCardHeader>\n          <MDBCardBody className='px-5 py-4 m-0'>\n\n            <OrderDetails\n              ref='orderDetails'\n              orderState={orderState}\n              orderBeingEdited={desiredOrder}\n              orderDetailsBeingEdited={desiredOrderDetails}\n            />\n\n            <OrderCustomerDetails\n              ref='orderCustomerDetails'\n            />\n\n            <OrderProductDetails\n              ref='orderProductDetails'\n              addProductToTbl={this.addProductToTbl}\n              deleteRowsFromtbl={this.deleteRowsFromtbl}\n              allData={allData}\n              orderState={orderState}\n            />\n\n            <MDBRow end className='mb-0 mt-3 p-0' >\n              {displayAddFormButton ?\n                <MDBCol sm='4' middle className='m-0'>\n                  <button style={{ fontSize: '17px', borderRadius: '4px', color: 'white' }}\n                    onClick={() => {\n                      this.refs.orderProductDetails.setState({ displayForm: true },\n                        this.setState({ displayAddFormButton: false }))\n                    }}\n                    className='btn py-1 px-2 font-weight-bold backGround-blue fontRaleway borderBlue'>\n                    {/* <MDBIcon icon=\"plus colorBlue mr-1\" /> */}\n                    Add New Product\n                  </button>\n                </MDBCol>\n                : null}\n              <MDBCol sm='4' className='m-0'>\n                <MDBInput\n                  value={orderTotal}\n                  label=\"Total\"\n                  hint=\"Total\"\n                  disabled\n                  className='m-0'\n                  style={{ fontWeight: 'bold' }}\n                />\n              </MDBCol>\n              <MDBCol sm='4' className='m-0'>\n                <MDBInput\n                  value={totalValueAdded}\n                  className='m-0'\n                  style={{ fontWeight: 'bold' }}\n                  label=\"Total value added\"\n                  hint=\"Total value added\"\n                  disabled\n                />\n              </MDBCol>\n            </MDBRow>\n\n            <OrderProductsTable\n              ref='orderProductsTable'\n              saveOrderDetailsToDB={this.saveOrderDetailsToDB}\n              saveOrderToDB={this.saveOrderToDB}\n              checkOrderValidity={this.checkOrderValidity}\n              minusFromTotal={this.minusFromTotal}\n              addToTotal={this.addToTotal}\n              minusFromTotalValueAdded={this.minusFromTotalValueAdded}\n              addToTotalValueAdded={this.addToTotalValueAdded}\n              orderState={orderState}\n              allData={allData}\n            />\n          </MDBCardBody>\n        </MDBCard >\n      </Can >\n    );\n  }\n}\n\nexport default EditOrder;","import React, { Component } from 'react';\r\nimport EditOrder from './pages/EditOrder';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\n\r\nclass SecuredEditOrder extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n        let { allData } = this.props\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='update' a='order'><EditOrder allData={allData} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredEditOrder","import React, { Component } from 'react';\nimport { MDBBtn, MDBIcon } from 'mdbreact';\nimport DeleteModal from '../../misc//components/DeleteModal';\nimport { Can } from \"../../../configs/Ability-context\";\nimport MyOwnListing from '../../misc/components/MyOwnListing'\n// import LoaderModal from '../sections/LoaderModal'\n\n\nclass AllOrders extends Component {\n    _isMounted = false\n    constructor(props) {\n        super(props);\n        this._isMounted = true\n        this.state = {\n            rowToBeDeleted: '',\n            orderToBeDeleted: '',\n            // loaderModalShow: false\n        }\n    }\n\n    componentWillUnmount = () => {\n        this._isMounted = false\n    }\n\n    handleEdit = (id) => (e) => {\n        this.props.history.push({ pathname: \"/orders/edit\", search: `order=${id}` })\n    }\n\n    handleView = (id) => (e) => {\n        this.props.history.push({ pathname: \"/orders/view\", search: `order=${id}` })\n    }\n\n    redirectToNewEntityPath = () => {\n        this.props.history.push('/orders/new')\n    }\n\n    handleDelete = (id) => (e) => {\n        let el = e.target\n        let row = el.closest('tr')\n        var i = row.rowIndex;\n        this.setState({\n            rowToBeDeleted: i,\n            orderToBeDeleted: id\n        })\n        this.refs.deleteModal.setState({\n            modalShow: true,\n        })\n    }\n\n    deleteOrder = () => {\n        let { rowToBeDeleted, orderToBeDeleted } = this.state\n        let deleteOrder = { value: orderToBeDeleted }\n\n        let deleteOrderOptions = {\n            method: 'DELETE',\n            body: JSON.stringify(deleteOrder),\n            headers: { 'Content-Type': 'application/json' }\n        }\n        fetch('/deleteOrder', deleteOrderOptions)\n            .then((res) => res.json())\n            .then((json) => {\n                // console.log(json)\n                json.success && document.getElementById('allOrdersTable').deleteRow(rowToBeDeleted)\n            })\n            .catch((error) => console.log(error))\n    }\n\n\n    render() {\n        let { allOrders } = this.props.allData, rows = [], data, index = 0,\n            btnStyle = { fontSize: '17px', borderRadius: '50%', border: '2px solid #112648' }\n;\n\n        allOrders && allOrders.forEach((order) => {\n            index = index + 1;\n            rows.push(\n                {\n                    index: index,\n                    orderId: order.order_id,\n                    date: new Date(order.date).toLocaleDateString(),\n                    source: order.source,\n                    status: order.status,\n                    tracking: order.tracking_id,\n                    total: order.total,\n                    totalValueAdded: order.total_value_added,\n                    cName: order.customer_name,\n                    cContact: order.customer_contact,\n                    cAddress: order.customer_address,\n                    buttons: <React.Fragment>\n                        <Can I='read' a='order'>\n                            <MDBBtn style={btnStyle} color='white' onClick={this.handleView(order.id)} className='m-1 py-1 px-2' size=\"sm\">\n                                <MDBIcon icon=\"eye iconGreen\" />\n                            </MDBBtn>\n                        </Can>\n                        <Can I='update' a='order'>\n                            <MDBBtn style={btnStyle} color='white' onClick={this.handleEdit(order.id)} className='m-1 py-1 px-2' size=\"sm\">\n                                <MDBIcon icon=\"pencil-alt iconGreen\" />\n                            </MDBBtn>\n                        </Can>\n                        <Can I='delete' a='order'>\n                            <MDBBtn style={btnStyle} color='white' onClick={this.handleDelete(order.id)} className='m-1 py-1 px-2' size=\"sm\">\n                                <MDBIcon icon=\"trash iconRed\" />\n                            </MDBBtn>\n                        </Can>\n                    </React.Fragment>\n                }\n            );\n        });\n        data = {\n            columns: [\n                { label: '#', field: 'index', }, { label: 'Id', field: 'orderId' }, { label: 'Date', field: 'date' }, { label: 'Source', field: 'source', },\n                { label: 'Status', field: 'status', }, { label: 'Tracking Id', field: 'tracking', }, { label: 'Total', field: 'total', },\n                { label: 'TVA', field: 'totalValueAdded', }, { label: 'Customer', field: 'cName', }, { label: 'Contact', field: 'cContact', },\n                { label: 'Address', field: 'cAddress', }, { label: 'Action', field: 'buttons' }\n            ],\n            rows: rows\n        }\n\n        return (\n            <Can I='read' a='order'>\n                <MyOwnListing\n                    cardHeading={`Orders`}\n                    permissionEntity='order'\n                    redirectToNewEntityPath={this.redirectToNewEntityPath}\n                    addButtonEntityLabel='Order'\n                    tableId='allOrdersTable'\n                    data={data}\n                />\n                <DeleteModal\n                    ref='deleteModal'\n                    deleteEntry={this.deleteOrder}\n                />\n\n                {/* <LoaderModal\n            //    show={loaderModalShow}\n        // /> */}\n            </Can>\n        );\n    }\n\n}\n\nexport default AllOrders","import React, { Component } from 'react';\r\nimport AllOrders from './pages/AllOrders';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\nclass SecuredAllOrders extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='read' a='order'><AllOrders  {...this.props} /></Can>\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredAllOrders","import React from 'react';\nimport { Can } from \"../../../configs/Ability-context\";\nimport MyOwnListing from '../../misc/components/MyOwnListing'\n// import LoaderModal from '../sections/LoaderModal'\n\n\nconst AllOrderDetails = ({ allData }) => {\n\n    let { allOrderDetails, allProducts } = allData, rows = [], data, index = 0\n    allOrderDetails && allOrderDetails.forEach((detail) => {\n        index = index + 1;\n        let product = allProducts && allProducts.filter(product => product.id === Number(detail.product_id)).shift(),\n            pName = product ? product.name : 'Not Found'\n        rows.push(\n            {\n                index: index,\n                orderId: detail.order_id,\n                date: new Date(detail.order_date).toLocaleDateString(),\n                source: detail.order_source,\n                status: detail.order_status,\n                pName: pName,\n                pSku: detail.product_sku,\n                pCost: detail.product_cost,\n                pRate: detail.product_rate,\n                pQty: detail.product_qty,\n                pDiscount: detail.product_discount,\n                pPrice: detail.product_price,\n            }\n        );\n    });\n    data = {\n        columns: [\n            { label: '#', field: 'index', }, { label: 'Order-Id', field: 'orderId' }, { label: 'Date', field: 'date' }, { label: 'Source', field: 'source', },\n            { label: 'Status', field: 'status', }, { label: 'Product', field: 'pName', }, { label: 'SKU', field: 'pSku', }, { label: 'Cost', field: 'pCost', },\n            { label: 'Rate', field: 'pRate', },\n            { label: 'QTY', field: 'pQty', }, { label: 'Discount (%)', field: 'pDiscount', }, { label: 'Price', field: 'pPrice', },\n        ],\n        rows: rows\n    }\n\n    return (\n        <Can I='read' a='orderDetail'>\n            <MyOwnListing\n                cardHeading={`Order-Details`}\n                permissionEntity='orderDetail'\n                tableId='allOrderDetailsTable'\n                data={data}\n            />\n            {/* <LoaderModal\n            //    show={loaderModalShow}\n        // /> */}\n        </Can>\n    );\n\n}\n\nexport default AllOrderDetails","import React, { Component } from 'react';\r\nimport AllOrderDetails from './pages/AllOrderDetails';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\nclass SecuredAllOrderDetails extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='read' a='orderDetail'><AllOrderDetails  {...this.props} /></Can>\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredAllOrderDetails","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport SecuredNewOrder from './SecuredNewOrder';\r\nimport SecuredViewOrder from './SecuredViewOrder';\r\nimport SecuredEditOrder from './SecuredEditOrder';\r\nimport SecuredAllOrders from './SecuredAllOrders';\r\nimport SecuredAllOrderDetails from './SecuredAllOrderDetails';\r\n\r\n\r\n\r\nconst Orders = ({ allData }) => {\r\n\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/orders/new\" render={() => <SecuredNewOrder allData={allData} />} />\r\n            <Route path=\"/orders/view\" render={() => <SecuredViewOrder allData={allData} />} />\r\n            <Route path=\"/orders/edit\" render={() => <SecuredEditOrder allData={allData} />} />\r\n            <Route path=\"/orders/all\" render={(routeProps) => <SecuredAllOrders {...routeProps} allData={allData} />} />\r\n            <Route path=\"/orders/order_details\" render={() => <SecuredAllOrderDetails allData={allData} />} />\r\n        </Switch>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Orders","import React, { Component } from \"react\";\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBInput, MDBIcon, } from 'mdbreact';\r\n\r\n\r\n\r\nconst serviceOptions = [\r\n    { value: 'seo', label: 'SEO', key: 1, color: '#112648' },\r\n    { value: 'web development', label: 'Web Development', key: 1, color: '#687722' },\r\n    { value: 'graphics designing', label: 'Graphics Designing', key: 1, color: '#112648' },\r\n    { value: 'mobile apps', label: 'Mobile App', key: 1, color: '#687722' }\r\n];\r\n\r\n\r\nclass Invoice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.editingInvoiceId = props.id\r\n        let { allRoles, allUsers, allCompanies } = props.allData,\r\n            clientRoleId = allRoles && allRoles.filter(role => role.name === 'client').shift().id,\r\n            allClients = allUsers && allUsers.filter(user => user.role_id === clientRoleId)\r\n        this.state = {\r\n            date: new Date().toDateString(),\r\n            invoice_id: Math.floor((Math.random() * 200000) + 1),\r\n            address: '',\r\n            phone: '',\r\n            total: 0,\r\n            selectedClient: '',\r\n            clients: allClients,\r\n            selectedCompany: '',\r\n            companies: allCompanies,\r\n            items: [],\r\n            service: '',\r\n            detail: '',\r\n            rate: '',\r\n            qty: '',\r\n            message: '',\r\n            printInvoice: false\r\n        }\r\n    }\r\n\r\n    makeStateEmpty = () => {\r\n        this.setState({\r\n            invoice_id: Math.floor((Math.random() * 200000) + 1),\r\n            selectedClient: '',\r\n            selectedCompany: '',\r\n            address: '',\r\n            phone: '',\r\n            items: [],\r\n            service: '',\r\n            detail: '',\r\n            rate: '',\r\n            qty: '',\r\n        })\r\n    }\r\n\r\n    printInvoice = () => {\r\n        this.setState({ message: '' })\r\n        const printArea = document.getElementById('capture').innerHTML;\r\n        const wholeContent = document.body.innerHTML;\r\n        document.body.innerHTML = printArea;\r\n        window.print();\r\n        document.body.innerHTML = wholeContent;\r\n        window.location.reload()\r\n        setTimeout(() => {\r\n            this.makeStateEmpty()\r\n        }, 1500)\r\n    }\r\n\r\n    submitInvoice = () => {\r\n        let { items, printInvoice } = this.state, total = this.total_amount.state.innerValue\r\n        let form = this.selectClientForm;\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n        } else if (items.length === 0) {\r\n            this.setState({ message: 'No Invoice Data !' })\r\n            return\r\n        }\r\n        else if (isNaN(total)) {\r\n            this.setState({ message: 'Please enter a valid price!' })\r\n            return\r\n        }\r\n        else {\r\n            let { invoice_id, selectedClient, selectedCompany, address, phone, date } = this.state\r\n\r\n            const obj = {\r\n                slagme: invoice_id,\r\n                companyId: selectedCompany,\r\n                cId: selectedClient,\r\n                address: address,\r\n                number: phone,\r\n                date: date,\r\n                total_amount: total,\r\n            };\r\n            if (!this.editingInvoiceId) {\r\n                let newInvoiceOptions = {\r\n                    method: 'POST',\r\n                    body: JSON.stringify(obj),\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                }\r\n                fetch('/addNewInvoice', newInvoiceOptions)\r\n                    .then(res => res.json())\r\n                    .then(json => {\r\n                        console.log(json);\r\n                        this.setState({ message: json.message });\r\n                        if (json.success) {\r\n                            newInvoiceOptions.body = JSON.stringify(items)\r\n                            fetch('/addNewInvoiceDetails', newInvoiceOptions)\r\n                                .then(res => res.json())\r\n                                .then(json => {\r\n                                    console.log(json)\r\n                                    this.setState({ message: json.message });\r\n                                    if (json.success) {\r\n                                        this.selectClientForm.classList.remove('was-validated')\r\n                                        printInvoice ? this.printInvoice() : this.makeStateEmpty()\r\n                                    }\r\n                                })\r\n                                .catch(error => console.log(error))\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                    });\r\n            }\r\n            else {\r\n                let deleteInvoiceDetailsOptions = {\r\n                    method: 'DELETE',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                }\r\n                fetch(`/deleteInvoiceDetails/${invoice_id}`, deleteInvoiceDetailsOptions)\r\n                    .then(res => res.json())\r\n                    .then((json) => {\r\n                        console.log(json);\r\n                        this.setState({ message: json.message });\r\n                        if (json.success) {\r\n                            let updateInvoiceOptions = deleteInvoiceDetailsOptions\r\n                            updateInvoiceOptions.method = 'PUT'\r\n                            updateInvoiceOptions.body = JSON.stringify(obj)\r\n                            fetch(`/updateInvoice/${this.editingInvoiceId}`, updateInvoiceOptions)\r\n                                .then(res => res.json())\r\n                                .then((json) => {\r\n                                    console.log(json);\r\n                                    this.setState({ message: json.message });\r\n                                    if (json.success) {\r\n                                        let updateInvoiceDetailsOptions = updateInvoiceOptions\r\n                                        updateInvoiceDetailsOptions.method = 'POST'\r\n                                        updateInvoiceDetailsOptions.body = JSON.stringify(items)\r\n                                        fetch('/addNewInvoiceDetails', updateInvoiceDetailsOptions)\r\n                                            .then(res => res.json())\r\n                                            .then(json => {\r\n                                                console.log(json);\r\n                                                this.setState({ message: json.message });\r\n                                                if (json.success) {\r\n                                                    this.selectClientForm.classList.remove('was-validated')\r\n                                                    printInvoice ? this.printInvoice() : this.makeStateEmpty()\r\n                                                }\r\n                                            })\r\n                                    }\r\n                                })\r\n                                .catch(err => console.log(err))\r\n                        }\r\n                    })\r\n                    .catch(err => console.log(err))\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.editingInvoiceId) {\r\n            let { allInvoices, allInvoiceDetails } = this.props.allData,\r\n                invoiceToBeEdited = allInvoices && allInvoices.filter(invoice => invoice.id === this.editingInvoiceId).shift(),\r\n                editingInvoiceDetails = invoiceToBeEdited && allInvoiceDetails && allInvoiceDetails.filter(\r\n                    detail => detail.invoice_id === Number(invoiceToBeEdited.slagme)\r\n                ), items = [];\r\n            editingInvoiceDetails && editingInvoiceDetails.forEach(detail => {\r\n                items.push({\r\n                    invoice_id: detail.invoice_id,\r\n                    service: detail.service,\r\n                    detail: detail.detail,\r\n                    rate: detail.rate,\r\n                    qty: detail.qty,\r\n                    price: detail.price\r\n                })\r\n            })\r\n            invoiceToBeEdited && this.setState({\r\n                date: new Date(invoiceToBeEdited.date).toDateString(),\r\n                invoice_id: invoiceToBeEdited.slagme,\r\n                selectedClient: invoiceToBeEdited.c_id,\r\n                selectedCompany: invoiceToBeEdited.company_id,\r\n                address: invoiceToBeEdited.c_address,\r\n                phone: invoiceToBeEdited.c_number,\r\n                items: items\r\n            })\r\n        }\r\n    }\r\n\r\n    calculateTotal = () => {\r\n        let total = 0;\r\n        this.state.items.length !== 0 && this.state.items.forEach(item => {\r\n            total += Number(item.price)\r\n        })\r\n        return total\r\n    };\r\n\r\n    onChangeSelect = name => (e) => {\r\n        if (name === 'client') {\r\n            let ourClient = this.state.clients.filter(client => client.id == e.target.value).shift()\r\n            ourClient ?\r\n                this.setState({\r\n                    selectedClient: ourClient.id,\r\n                    address: ourClient.address,\r\n                    phone: ourClient.cell\r\n                })\r\n                :\r\n                this.setState({\r\n                    selectedClient: '',\r\n                    address: '',\r\n                    phone: ''\r\n                })\r\n        }\r\n        else {\r\n            this.setState({ selectedCompany: Number(e.target.value) })\r\n        }\r\n    }\r\n\r\n    onInput = name => e => {\r\n        this.setState({\r\n            [name]: e.target.value,\r\n            message: ''\r\n        })\r\n    }\r\n\r\n    addItem = (e) => {\r\n        e.preventDefault()\r\n        if (this.addItemForm.checkValidity() === false) {\r\n            this.addItemForm.classList.add('was-validated')\r\n            return\r\n        } else {\r\n            let { invoice_id, detail, qty, rate, service } = this.state\r\n            let newitem = {\r\n                invoice_id: invoice_id,\r\n                service: service,\r\n                detail: detail,\r\n                rate: rate,\r\n                qty: qty,\r\n                price: this.price.state.innerValue\r\n            };\r\n            this.setState({\r\n                items: [...this.state.items, newitem],\r\n                detail: '',\r\n                service: '',\r\n                rate: '',\r\n                qty: '',\r\n                price: '',\r\n            }, function () {\r\n                this.addItemForm.classList.remove('was-validated')\r\n            });\r\n        }\r\n    }\r\n\r\n    tdOnBlur = (Index, name) => (e) => {\r\n        let el = e.target\r\n        this.setState(state => {\r\n            const items = state.items.map((item, index) => {\r\n                if (index === Index) {\r\n                    item[name] = el.innerHTML\r\n                    name !== 'detail' && (item.price = name === 'rate' ? Number(el.innerHTML * item.qty) : Number(item.rate * el.innerHTML))\r\n                    return item;\r\n                } else {\r\n                    return item;\r\n                }\r\n            });\r\n            return {\r\n                items,\r\n            };\r\n        });\r\n    }\r\n\r\n    deleteItemData = Index => (e) => {\r\n        this.setState(prevState => ({\r\n            items: prevState.items.filter((itemData, index) => {\r\n                return index !== Index\r\n            })\r\n        }))\r\n    }\r\n\r\n    onKeyPress = (e) => {\r\n        let array = [46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]\r\n        if (array.includes(e.which)) {\r\n        }\r\n        else {\r\n            e.preventDefault()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let { date, invoice_id, selectedClient, selectedCompany, phone, address, service, detail, rate, qty, clients, companies, message, printInvoice } = this.state,\r\n            companyDetailStyle = { fontSize: '0.8rem' },\r\n            clientOptions = clients && clients.map((client) => <option key={client.id} value={client.id}>{client.name}</option>),\r\n            companyOptions = companies && companies.map((company) => <option key={company.id} value={company.id}>{company.name}</option>),\r\n            companyDetails = companies && companies.filter(company => company.id === Number(selectedCompany)).shift(),\r\n            tableRows = [];\r\n\r\n\r\n        this.state.items.map((item, index) => {\r\n            tableRows.push(\r\n                <tr key={index} className='text-center'>\r\n                    <td>\r\n                        {item.service}\r\n                    </td>\r\n                    <td\r\n                        onBlur={this.tdOnBlur(index, 'detail')}\r\n                        suppressContentEditableWarning={true}\r\n                        contentEditable={true}\r\n                    >\r\n                        {item.detail}\r\n                    </td>\r\n                    <td\r\n                        onBlur={this.tdOnBlur(index, 'rate')}\r\n                        suppressContentEditableWarning={true}\r\n                        contentEditable={true}\r\n                        onKeyPress={this.onKeyPress}\r\n                    >\r\n                        {item.rate}\r\n                    </td>\r\n                    <td\r\n                        onBlur={this.tdOnBlur(index, 'qty')}\r\n                        suppressContentEditableWarning={true}\r\n                        contentEditable={true}\r\n                        onKeyPress={this.onKeyPress}\r\n                    >\r\n                        {item.qty}\r\n                    </td>\r\n                    <td>\r\n                        {item.rate * item.qty}\r\n                    </td>\r\n                    <td className='printHide'>\r\n                        <MDBBtn size=\"sm\" color=\"danger\" onClick={this.deleteItemData(index)}>\r\n                            <i className=\"fas fa-trash\" />\r\n                        </MDBBtn>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row m-4\">\r\n                    <div className=\"col-sm-12\" id=\"capture\">\r\n                        <MDBCard>\r\n                            <MDBCardBody>\r\n                                <h2 className=\"text-center invoiceHeader\"\r\n                                    style={{ backgroundColor: \"#9ACD32\", color: \"white\" }}>INVOICE</h2>\r\n                                <div className=\"row m-0 p-0\">\r\n                                    <div className=\"col-sm-3 align-self-center mb-0 mt-4 p-0\">\r\n                                        <MDBInput label=\"Date\" className='m-0' disabled value={date} />\r\n                                        <MDBInput label=\"Id\" className='m-0' disabled value={invoice_id} />\r\n                                    </div>\r\n                                    <div className=\"col-sm-6 align-self-center m-0 p-0\">\r\n                                        <img src={companyDetails && `/getImage/${companyDetails.logo}`} alt={companyDetails && companyDetails.name} width=\"100%\" height=\"auto\" /><br />\r\n                                    </div>\r\n                                    <div className=\"col-md-3 mb-0 mt-4 p-0 align-self-center\">\r\n                                        <div className='row mb-2'>\r\n                                            <div className='col-2 text-center  m-0 p-0'>\r\n                                                <i className='fa fa-mobile-alt' />\r\n                                            </div>\r\n                                            <div className='col-10 m-0 p-0 text-left'\r\n                                                style={companyDetailStyle}>\r\n                                                {companyDetails && companyDetails.cell}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='row mb-2'>\r\n                                            <div className='col-2 text-center  m-0 py-0 pr-0 pl-0'>\r\n                                                <i className='fa fa-envelope' />\r\n                                            </div>\r\n                                            <div className='col-10 m-0 p-0 text-left'\r\n                                                style={companyDetailStyle}>\r\n                                                {companyDetails && companyDetails.email}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='row'>\r\n                                            <div className='col-2 text-center  m-0 p-0'>\r\n                                                <i className='fa fa-map-marker-alt' />\r\n                                            </div>\r\n                                            <div className='col-10 m-0 p-0 text-left'\r\n                                                style={companyDetailStyle}>\r\n                                                {companyDetails && companyDetails.address}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <form ref={el => this.selectClientForm = el} noValidate>\r\n                                    <div className=\"row justify-content-start\">\r\n                                        <div className=\"col-sm-4 mb-0\">\r\n                                            <br />\r\n                                            <select\r\n                                                value={selectedClient}\r\n                                                className=\"browser-default custom-select mt-1 p-2\"\r\n                                                onChange={this.onChangeSelect('client')}\r\n                                                required\r\n                                            >\r\n                                                <option key={Math.random()} value='' disabled>Select Client...</option>\r\n                                                {clientOptions}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"col-sm-4 mb-0\">\r\n                                            <MDBInput\r\n                                                label=\"Phone\"\r\n                                                value={phone}\r\n                                                className='my-0 px-2'\r\n                                                disabled\r\n                                                required />\r\n                                        </div>\r\n                                        <div className=\"col-sm-4 m-0 printHide\">\r\n                                            <br />\r\n                                            <select\r\n                                                value={selectedCompany}\r\n                                                className=\"browser-default custom-select mt-1 p-2\"\r\n                                                onChange={this.onChangeSelect('company')}\r\n                                                required\r\n                                            >\r\n                                                <option key={Math.random()} value='' disabled>Select Company...</option>\r\n                                                {companyOptions}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"col-sm-12 clientAddress \">\r\n                                            <MDBInput\r\n                                                label=\"Address\"\r\n                                                value={address}\r\n                                                disabled\r\n                                                required\r\n                                                validate\r\n                                                className='my-0 px-2'\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                                <div className='text-center'><label className='validatingLabel'>{message}</label></div>\r\n\r\n                                <div className=\"container-fluid m-0 p-0\"\r\n                                    style={{ borderStyle: \"groove\", borderRadius: \"10px\" }}>\r\n                                    <form onSubmit={this.addItem} className='p-0 printHide' ref={ref => this.addItemForm = ref}\r\n                                        noValidate>\r\n                                        <div className=\"row px-2 m-0\">\r\n                                            <div className=\"col-md-3 m-0\">\r\n                                                <br />\r\n                                                <select\r\n                                                    className=\"form-control mt-1\"\r\n                                                    onChange={this.onInput('service')}\r\n                                                    required\r\n                                                    value={service}\r\n                                                >\r\n                                                    <option value='' disabled>Select Services...</option>\r\n                                                    <option value=\"seo\">SEO</option>\r\n                                                    <option value=\"web development\">Web Development</option>\r\n                                                    <option value=\"mob app\">Mobile App</option>\r\n                                                    <option value=\"graphic designing\">Graphic Designing</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-md-5 m-0\">\r\n                                                <MDBInput\r\n                                                    label=\"Item-descrption\"\r\n                                                    value={detail}\r\n                                                    type=\"text\"\r\n                                                    onChange={this.onInput('detail')}\r\n                                                    required\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"col-md-2 m-0\">\r\n                                                <MDBInput\r\n                                                    label=\"Rate\"\r\n                                                    value={rate}\r\n                                                    type=\"number\"\r\n                                                    min=\"1\"\r\n                                                    onChange={this.onInput('rate')}\r\n                                                    required\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"col-md-2 m-0\">\r\n                                                <MDBInput\r\n                                                    label=\"Qty\"\r\n                                                    value={qty}\r\n                                                    type=\"number\"\r\n                                                    min=\"1\"\r\n                                                    onChange={this.onInput('qty')}\r\n                                                    required\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"col-md-2 m-0\" style={{ marginBottom: '-20px' }}>\r\n                                                <MDBInput\r\n                                                    label=\"Price\"\r\n                                                    ref={el => this.price = el}\r\n                                                    value={rate * qty}\r\n                                                    type=\"number\"\r\n                                                    min=\"1\"\r\n                                                    disabled\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"col-md-1 m-0 pt-2 align-self-center\">\r\n                                                <button\r\n                                                    type='submit'\r\n                                                    color=\"transparent\"\r\n                                                    className='mb-2'\r\n                                                >\r\n                                                    <MDBIcon icon=\"plus\" />\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                    <div className=\"row px-2 mx-0 mt-4\"\r\n                                        style={{ display: this.state.items.length === 0 ? 'none' : '' }}>\r\n                                        <div className=\"col-md-12 m-0\">\r\n                                            <div className='m-0 p-0 table-responsive'>\r\n                                                <table id='invoiceTable' className=\"table table-bordered table-hover table-sm\">\r\n                                                    <thead className='thead-light text-center'>\r\n                                                        <tr style={{ borderTopLeftRadius: '10px', borderTopRightRadius: '10px' }}>\r\n                                                            <th >Services</th>\r\n                                                            <th>Description</th>\r\n                                                            <th>Rate</th>\r\n                                                            <th>Qty.</th>\r\n                                                            <th>Price</th>\r\n                                                            <th className='printHide'>Action</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {tableRows}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row px-2 m-0\" style={{ display: this.state.items.length === 0 ? 'none' : '' }}>\r\n                                        <div className='col-md-4 offset-md-8'>\r\n                                            <MDBInput label='Total' outline ref={el => this.total_amount = el} value={this.calculateTotal()} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <p className='text-center' style={{ fontFamily: 'monospace' }}>Thank you for doing business with {companyDetails && companyDetails.name}.</p>\r\n\r\n                                <div className=\"row m-0 p-2 justify-content-center printHide\">\r\n                                    <div className=\"col-md-3 align-self-center p-0\">\r\n                                        <div className='row m-0 p-0'>\r\n                                            <div className='col m-0 p-0 text-right'>\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    checked={printInvoice}\r\n                                                    onChange={() => {\r\n                                                        this.setState({\r\n                                                            printInvoice: !this.state.printInvoice\r\n                                                        })\r\n                                                    }}\r\n                                                    style={{ width: '30px', height: '30px', verticalAlign: 'middle' }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className='col text-left m-0 p-0 align-self-center'>\r\n                                                <p className='m-0 p-0'>Print Invoice?</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* To print invoice, press ctrl+p before saving. */}\r\n                                    <div className=\"col-md-3 align-self-center py-0 px-2\">\r\n                                        <MDBBtn\r\n                                            color=\"success\"\r\n                                            onClick={this.submitInvoice}\r\n                                            size=\"md\"\r\n                                            className='form-control my-0 mx-2 py-2'\r\n                                        >\r\n                                            <MDBIcon\r\n                                                icon=\"save\"\r\n                                                size=\"lg\"\r\n                                                className='mr-1'\r\n                                            />\r\n                                            Save\r\n                                        </MDBBtn>\r\n                                    </div>\r\n                                </div>\r\n                            </MDBCardBody>\r\n                        </MDBCard>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Invoice;","import React from \"react\";\nimport Invoice from '../../misc/pages/Invoice'\nimport { Can } from '../../../configs/Ability-context'\n\n\nconst NewInvoice = (props) => {\n\n  return (\n    <Can I='create' a='invoice'><Invoice allData={props.allData} /></Can>\n  )\n}\n\nexport default NewInvoice;","import React, { Component } from 'react';\r\nimport NewInvoice from './pages/NewInvoice';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\n\r\nclass SecuredNewInvoice extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n        let { allData } = this.props\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='create' a='Invoice'><NewInvoice allData={allData} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredNewInvoice","import React from \"react\";\nimport Invoice from '../../misc/pages/Invoice'\nimport { Can } from '../../../configs/Ability-context'\n\n\nconst EditInvoice = (props) => {\n  let params = new URLSearchParams(window.location.search),\n    id = Number(params.get('invoice'))\n  return (\n    <Can I='update' a='invoice'><Invoice id={id} allData={props.allData} /></Can>\n\n  )\n}\n\nexport default EditInvoice;","import React, { Component } from 'react';\r\nimport EditInvoice from './pages/EditInvoice';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\n\r\nclass SecuredEditInvoice extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n        let { allData } = this.props\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='update' a='Invoice'><EditInvoice allData={allData} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredEditInvoice","import React, { Component } from 'react';\nimport { MDBBtn, MDBIcon } from 'mdbreact';\nimport DeleteModal from '../../misc/components/DeleteModal';\nimport { Can } from \"../../../configs/Ability-context\";\nimport MyOwnListing from '../../misc/components/MyOwnListing'\n// import LoaderModal from '../sections/LoaderModal'\n\n\nclass AllInvoices extends Component {\n    _isMounted = false\n    constructor(props) {\n        super(props);\n        this._isMounted = true\n        this.state = {\n            rowToBeDeleted: '',\n            invoiceToBeDeleted: '',\n            invoiceId: '',\n            // loaderModalShow: false\n        }\n    }\n\n    componentWillUnmount = () => {\n        this._isMounted = false\n    }\n\n    handleEdit = (id) => (e) => {\n        this.props.history.push({ pathname: \"/invoices/edit\", search: `invoice=${id}` })\n    }\n\n    handleView = (id) => (e) => {\n        this.props.history.push({ pathname: \"/invoices/view\", search: `invoice=${id}` })\n    }\n\n    redirectToNewEntityPath = () => {\n        this.props.history.push('/invoices/new')\n    }\n\n    handleDelete = (invoice) => (e) => {\n        let el = e.target\n        let row = el.closest('tr')\n        var i = row.rowIndex;\n        this.setState({\n            rowToBeDeleted: i,\n            invoiceToBeDeleted: invoice.id,\n            invoiceId: invoice.slagme,\n        })\n        this.refs.deleteModal.setState({\n            modalShow: true,\n        })\n    }\n\n    deleteInvoice = () => {\n        let { rowToBeDeleted, invoiceToBeDeleted, invoiceId } = this.state\n        let deleteInvoiceOptions = {\n            method: 'DELETE',\n            headers: { 'Content-Type': 'application/json' }\n        }\n        fetch(`/deleteInvoiceDetails/${invoiceId}`, deleteInvoiceOptions)\n            .then(res => res.json())\n            .then(json => {\n                console.log(json)\n                json.success &&\n                    fetch(`/deleteInvoice/${invoiceToBeDeleted}`, deleteInvoiceOptions)\n                        .then((res) => res.json())\n                        .then((json) => {\n                            console.log(json)\n                            json.success && document.getElementById('allInvoicesTable').deleteRow(rowToBeDeleted)\n                        })\n                        .catch((error) => console.log(error))\n\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n        let { allInvoices, allUsers, allCompanies } = this.props.allData, rows = [], data, index = 0,\n            btnStyle = { fontSize: '17px', borderRadius: '50%', border: '2px solid #112648' }\n            ;\n\n        allInvoices && allInvoices.forEach((invoice) => {\n            let client = allUsers && allUsers.filter(user => user.id === Number(invoice.c_id)).shift()\n            let company = allCompanies && allCompanies.filter(company => company.id === Number(invoice.company_id)).shift()\n            index = index + 1;\n            rows.push(\n                {\n                    index: index,\n                    invoiceId: invoice.slagme,\n                    date: new Date(invoice.date).toLocaleDateString(),\n                    company: company.name,\n                    client: client.name,\n                    address: invoice.c_address,\n                    cell: invoice.c_number,\n                    total: invoice.total_amount,\n                    buttons: <React.Fragment>\n                        {/* <Can I='read' a='invoice'>\n                            <MDBBtn style={btnStyle} color='white' onClick={this.handleView(invoice.id)} className='m-1 py-1 px-2' size=\"sm\">\n                                <MDBIcon icon=\"eye iconGreen\" />\n                            </MDBBtn>\n                        </Can> */}\n                        <Can I='update' a='invoice'>\n                            <MDBBtn style={btnStyle} color='white' onClick={this.handleEdit(invoice.id)} className='m-1 py-1 px-2' size=\"sm\">\n                                <MDBIcon icon=\"pencil-alt iconGreen\" />\n                            </MDBBtn>\n                        </Can>\n                        <Can I='delete' a='invoice'>\n                            <MDBBtn style={btnStyle} color='white' onClick={this.handleDelete(invoice)} className='m-1 py-1 px-2' size=\"sm\">\n                                <MDBIcon icon=\"trash iconRed\" />\n                            </MDBBtn>\n                        </Can>\n                    </React.Fragment>\n                }\n            );\n        });\n        data = {\n            columns: [\n                { label: '#', field: 'index', }, { label: 'Id', field: 'invoiceId' }, { label: 'Date', field: 'date' },\n                { label: 'Company', field: 'company' }, { label: 'Client', field: 'client', }, { label: 'Address', field: 'address', },\n                { label: 'Phone no.', field: 'cell', }, { label: 'Amount', field: 'total', }, { label: 'Action', field: 'buttons' }\n            ],\n            rows: rows\n        }\n\n        return (\n            <Can I='read' a='invoice'>\n                <MyOwnListing\n                    cardHeading={`Invoices`}\n                    permissionEntity='invoice'\n                    redirectToNewEntityPath={this.redirectToNewEntityPath}\n                    addButtonEntityLabel='Invoice'\n                    tableId='allInvoicesTable'\n                    data={data}\n                />\n                <DeleteModal\n                    ref='deleteModal'\n                    deleteEntry={this.deleteInvoice}\n                />\n\n                {/* <LoaderModal\n            //    show={loaderModalShow}\n        // /> */}\n            </Can>\n        );\n    }\n\n}\n\nexport default AllInvoices","import React, { Component } from 'react';\r\nimport AllInvoices from './pages/AllInvoices';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\nclass SecuredAllInvoices extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='read' a='Invoice'><AllInvoices  {...this.props} /></Can>\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredAllInvoices","import React from 'react';\nimport { Can } from \"../../../configs/Ability-context\";\nimport MyOwnListing from '../../misc/components/MyOwnListing'\n// import LoaderModal from '../sections/LoaderModal'\n\n\n\nconst AllInvoiceDetails = ({ allData }) => {\n\n    let { allInvoiceDetails } = allData, rows = [], data, index = 0\n    allInvoiceDetails && allInvoiceDetails.forEach((detail) => {\n        index = index + 1;\n        rows.push(\n            {\n                index: index,\n                invoiceId: detail.invoice_id,\n                service: detail.service,\n                detail: detail.detail,\n                qty: detail.qty,\n                price: detail.price,\n            }\n        );\n    });\n    data = {\n        columns: [\n            { label: '#', field: 'index', }, { label: 'Invoice-Id', field: 'invoiceId' }, { label: 'Service', field: 'service' },\n            { label: 'Detail', field: 'detail', }, { label: 'QTY', field: 'qty', }, { label: 'Price', field: 'pPrice', },\n        ],\n        rows: rows\n    }\n\n    return (\n        <Can I='read' a='invoiceDetail'>\n            <MyOwnListing\n                cardHeading={`Invoice-Details`}\n                permissionEntity='invoiceDetail'\n                tableId='allInvoiceDetailsTable'\n                data={data}\n            />\n            {/* <LoaderModal\n            //    show={loaderModalShow}\n        // /> */}\n        </Can>\n    );\n\n}\n\nexport default AllInvoiceDetails","import React, { Component } from 'react';\r\nimport AllInvoiceDetails from './pages/AllInvoiceDetails';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../configs/Ability-context'\r\n\r\nclass SecuredAllInvoiceDetails extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='read' a='InvoiceDetail'><AllInvoiceDetails  {...this.props} /></Can>\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredAllInvoiceDetails","import React, { Component } from 'react';\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\n\r\nclass Company extends Component {\r\n    _isMounted = false\r\n    constructor(props) {\r\n        super(props);\r\n        this._isMounted = true\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            cell: '',\r\n            address: '',\r\n            logoAddress: '',\r\n            selectedLogo: '',\r\n            validatingMessage: '',\r\n            editCompany: false,\r\n            existingLogo: false,\r\n            displayExistingLogo: false,\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let { id, allData } = this.props\r\n        if (id) {\r\n            let companyToBeEdited = allData.allCompanies && allData.allCompanies.filter(company => company.id === id).shift()\r\n            companyToBeEdited &&\r\n                this.setState({\r\n                    name: companyToBeEdited.name,\r\n                    email: companyToBeEdited.email,\r\n                    cell: companyToBeEdited.cell,\r\n                    address: companyToBeEdited.address,\r\n                    editCompany: companyToBeEdited.id,\r\n                    existingLogo: companyToBeEdited.logo,\r\n                    displayExistingLogo: true,\r\n                })\r\n        }\r\n    }\r\n\r\n    handleInput = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            selectedLogo: e.target.name === 'logoAddress' ? e.target.files[0] : ''\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        this.refs.validatingLabel.innerHTML = ''\r\n        e.preventDefault();\r\n        let form = this.refs.newCompanyForm\r\n        if (form.checkValidity() === false) {\r\n            form.classList.add('was-validated');\r\n            return\r\n        }\r\n        else {\r\n            let { name, email, cell, address, selectedLogo, editCompany, existingLogo } = this.state\r\n            let fd = new FormData(this.refs.fakeForm), companyOptions\r\n            fd.append('image', selectedLogo)\r\n            fd.append('name', name)\r\n            fd.append('email', email)\r\n            fd.append('cell', cell)\r\n            fd.append('address', address)\r\n            existingLogo && fd.append('id', editCompany)\r\n            if (!existingLogo) {\r\n                companyOptions = {\r\n                    method: 'POST',\r\n                    body: fd,\r\n                }\r\n                fetch('/addNewCompany', companyOptions)\r\n                    // .then((res) => console.log(res))\r\n                    .then((res) => res.json())\r\n                    .then((json) => {\r\n                        console.log(json)\r\n                        this.setState({ validatingMessage: json.message })\r\n                        json.success ?\r\n                            this.setState({\r\n                                name: '',\r\n                                email: '',\r\n                                cell: '',\r\n                                address: '',\r\n                                logoAddress: '',\r\n                                selectedLogo: '',\r\n                                validatingMessage: '',\r\n                            })\r\n                            :\r\n                            json.message === `This Company already exists.` ? this.name.focus() : this.logo.focus()\r\n                        // this._isMounted && setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                    })\r\n                    .catch((error) => console.log(error))\r\n            }\r\n            else {\r\n                companyOptions = {\r\n                    method: 'PUT',\r\n                    body: fd\r\n                }\r\n                //deleteImageexisting.....\r\n                fetch(`/deleteImage/${existingLogo}`, { method: 'DELETE', headers: { 'content-type': 'application/json' } })\r\n                    .then(res => res.json())\r\n                    .then(json => {\r\n                        console.log(json);\r\n                        this.setState({ validatingMessage: json.message })\r\n                        if (json.success) {\r\n                            fetch('/updateCompany', companyOptions)\r\n                                // .then((res) => console.log(res))\r\n                                .then((res) => res.json())\r\n                                .then((json) => {\r\n                                    console.log(json)\r\n                                    this.setState({ validatingMessage: json.message })\r\n                                    let updatedCompany = json.data\r\n                                    json.success ?\r\n                                        this.setState({\r\n                                            name: updatedCompany.name,\r\n                                            email: updatedCompany.email,\r\n                                            cell: updatedCompany.cell,\r\n                                            address: updatedCompany.address,\r\n                                            logoAddress: '',\r\n                                            existingLogo: updatedCompany.logo,\r\n                                            validatingMessage: '',\r\n                                            displayExistingLogo:true\r\n                                        })\r\n                                        :\r\n                                        json.message === `This Company already exists.` ? this.name.focus() : this.logo.focus()\r\n                                    // this._isMounted && setTimeout(() => this.setState({ notificationShow: false }), 1502);\r\n                                })\r\n                                .catch((error) => console.log(error))\r\n                        }\r\n                    })\r\n                    .catch(err => console.log(err))\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { name, email, cell, address, logoAddress, validatingMessage, editCompany, existingLogo, displayExistingLogo } = this.state\r\n\r\n\r\n        return (\r\n            <Can I='create' a='company' >\r\n                <MDBRow center className='mt-5 p-0'>\r\n                    <MDBCol xl='4' lg='5' md='6' sm='8' xs='10'>\r\n                        <form ref='newCompanyForm' className='mb-4' onSubmit={this.handleSubmit} noValidate>\r\n                            <fieldset className='w-100'>\r\n                                <h2 className=\"fontRaleway colorGreen font-weight-bold mb-4 text-center\">{editCompany ? 'Edit Company' : 'New Company'}</h2>\r\n                                < div className='mb-2'>\r\n                                    <i className=\"fa fa-edit inputIcon\" />\r\n                                    <input\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.name = el}\r\n                                        required\r\n                                        placeholder='Name*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-envelope inputIcon\" />\r\n                                    <input\r\n                                        name=\"email\"\r\n                                        value={email}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.email = el}\r\n                                        required\r\n                                        placeholder='Email*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-phone inputIcon\" />\r\n                                    <input\r\n                                        name=\"cell\"\r\n                                        value={cell}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"text\"\r\n                                        ref={el => this.cell = el}\r\n                                        required\r\n                                        placeholder='Phone*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                </div>\r\n                                <div className='mb-2'>\r\n                                    <i className=\"fa fa-map-marker-alt inputIcon\" />\r\n                                    <textarea\r\n                                        name=\"address\"\r\n                                        value={address}\r\n                                        onInput={this.handleInput}\r\n                                        onChange={() => { }}\r\n                                        type=\"textarea\"\r\n                                        ref={el => this.address = el}\r\n                                        rows='2'\r\n                                        required\r\n                                        placeholder='Address*'\r\n                                        className='fontRaleway inputText pl-5 form-control'\r\n                                    />\r\n                                </div>\r\n                                {\r\n                                    displayExistingLogo ?\r\n                                        <div className='mb-2'>\r\n                                            <img\r\n                                                src={`/getImage/${existingLogo}`}\r\n                                                width='100%'\r\n                                                height='100'\r\n                                                alt='Logo'\r\n                                                style={{ borderRadius: '7px' }}\r\n                                            />\r\n                                            <b\r\n                                                className='float-right mr-1 fontRaleway colorBlue hoverGreen'\r\n                                                onClick={() => this.setState({ displayExistingLogo: false })}\r\n                                                style={{ cursor: 'pointer' }}\r\n                                            >Change</b>\r\n                                        </div>\r\n                                        :\r\n                                        <div className='mb-2' style={{ position: 'relative' }}>\r\n                                            <input name={'logoAddress'} type='file' accept=\".jpg, .jpeg, .png,\" onInput={this.handleInput} required className='inputText' />\r\n                                            <div className=\"fakefile inputText\">\r\n                                                <i className=\"fa fa-file-alt inputIcon\" />\r\n                                                <input\r\n                                                    value={logoAddress}\r\n                                                    onChange={() => { }}\r\n                                                    type=\"text\"\r\n                                                    ref={el => this.logo = el}\r\n                                                    required\r\n                                                    placeholder='Choose file...*'\r\n                                                    className='fontRaleway inputText pl-5 form-control'\r\n                                                />\r\n                                                <small className='float-right grey-text'>{'PNG or JPG, max size = 3MB'}</small>\r\n                                            </div>\r\n                                        </div>\r\n                                }\r\n                                <div className='text-center w-100 mt-0'>\r\n                                    <label className='validatingLabel mt-3' ref='validatingLabel'>{validatingMessage}</label><br />\r\n                                    <input type=\"submit\" className=\"next action-button my-0\" value={editCompany ? 'Update' : \"Create..\"} />\r\n                                </div>\r\n                            </fieldset>\r\n                        </form>\r\n                        <form ref='fakeForm' encType='multipart/form-data' />\r\n                    </MDBCol>\r\n                </MDBRow>\r\n\r\n                {/* {\r\n                    this.state.notificationShow ?\r\n                        <MDBAnimation type=\"fadeInUp\" >\r\n                            <Notification\r\n                                message={this.state.notificationMessage}\r\n                                icon={\"bell\"}\r\n                            />\r\n                        </MDBAnimation>\r\n                        : null\r\n                } */}\r\n            </Can >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Company","import React from \"react\";\nimport Company from '../../../misc/pages/Company'\nimport { Can } from '../../../../configs/Ability-context'\n\n\nconst NewCompany = (props) => {\n\n  return (\n    <Can I='create' a='company'><Company allData={props.allData} /></Can>\n  )\n}\n\nexport default NewCompany;","import React, { Component } from 'react';\r\nimport NewCompany from './pages/NewCompany';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\n\r\nclass SecuredNewCompany extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='create' a='company'><NewCompany /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredNewCompany","import React from \"react\";\nimport Company from '../../../misc/pages/Company'\nimport { Can } from '../../../../configs/Ability-context'\n\n\nconst EditCompany = (props) => {\n  let params = new URLSearchParams(window.location.search),\n    id = Number(params.get('company'))\n  return (\n    <Can I='update' a='company'><Company id={id} allData={props.allData} /></Can>\n\n  )\n}\n\nexport default EditCompany;","import React, { Component } from 'react';\r\nimport EditCompany from './pages/EditCompany';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\n\r\nclass SecuredEditCompany extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n\r\n        let { allData } = this.props\r\n\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='update' a='company'><EditCompany allData={allData} /></Can>\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredEditCompany","import React, { Component } from 'react';\nimport { MDBBtn, MDBIcon } from 'mdbreact';\nimport DeleteModal from '../../../misc/components/DeleteModal';\nimport { Can } from \"../../../../configs/Ability-context\";\nimport MyOwnListing from '../../../misc/components/MyOwnListing'\n// import LoaderModal from '../sections/LoaderModal'\n\n\nclass AllCompanies extends Component {\n    _isMounted = false\n    constructor(props) {\n        super(props);\n        this._isMounted = true\n        this.state = {\n            rowToBeDeleted: '',\n            companyToBeDeleted: '',\n            companyLogo: '',\n            // loaderModalShow: false\n        }\n    }\n\n    componentWillUnmount = () => {\n        this._isMounted = false\n    }\n\n    handleEdit = (id) => (e) => {\n        this.props.history.push({ pathname: \"/invoices/companies/edit\", search: `company=${id}` })\n    }\n\n    redirectToNewEntityPath = () => {\n        this.props.history.push('/invoices/companies/new')\n    }\n\n    handleDelete = (company) => (e) => {\n        let el = e.target\n        let row = el.closest('tr')\n        var i = row.rowIndex;\n        this.setState({\n            rowToBeDeleted: i,\n            companyToBeDeleted: company.id,\n            companyLogo: company.logo,\n        })\n        this.refs.deleteModal.setState({\n            modalShow: true,\n        })\n    }\n\n    deleteCompany = () => {\n        let { rowToBeDeleted, companyToBeDeleted, companyLogo } = this.state\n        let deleteCompanyOptions = {\n            method: 'DELETE',\n            headers: { 'Content-Type': 'application/json' }\n        }\n        fetch(`/deleteImage/${companyLogo}`, deleteCompanyOptions)\n            .then(res => {\n                return res.json()\n            })\n            .then(json => {\n                console.log(json)\n                json.success &&\n                    fetch(`/deleteCompany/${companyToBeDeleted}`, deleteCompanyOptions)\n                        .then((res) => res.json())\n                        .then((json) => {\n                            console.log(json)\n                            json.success && document.getElementById('allCompaniesTable').deleteRow(rowToBeDeleted)\n                        })\n                        .catch((error) => console.log(error))\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n        let { allCompanies } = this.props.allData, rows = [], data, index = 0,\n            btnStyle = { fontSize: '17px', borderRadius: '50%', border: '2px solid #112648' }\n            ;\n\n        allCompanies && allCompanies.forEach((company) => {\n            index = index + 1;\n            rows.push(\n                {\n                    index: index,\n                    name: company.name,\n                    email: company.email,\n                    cell: company.cell,\n                    address: company.address,\n                    logo: <img src={`/getImage/${company.logo}`} alt='Logo' className='m-0 p-0' width='120' height='80' />,\n                    buttons: <React.Fragment>\n                        <Can I='update' a='company'>\n                            <MDBBtn style={btnStyle} color='white' onClick={this.handleEdit(company.id)} className='m-1 py-1 px-2' size=\"sm\">\n                                <MDBIcon icon=\"pencil-alt iconGreen\" />\n                            </MDBBtn>\n                        </Can>\n                        <Can I='delete' a='company'>\n                            <MDBBtn style={btnStyle} color='white' onClick={this.handleDelete(company)} className='m-1 py-1 px-2' size=\"sm\">\n                                <MDBIcon icon=\"trash iconRed\" />\n                            </MDBBtn>\n                        </Can>\n                    </React.Fragment>\n                }\n            );\n        });\n        data = {\n            columns: [\n                { label: '#', field: 'index', }, { label: 'Name', field: 'name', }, { label: 'Email', field: 'email', },\n                { label: 'Phone no.', field: 'cell', }, { label: 'Address', field: 'address', },\n                { label: 'Logo', field: 'logo', }, { label: 'Action', field: 'buttons' }\n            ],\n            rows: rows\n        }\n\n        return (\n            <Can I='read' a='company'>\n                <MyOwnListing\n                    cardHeading={`Companies`}\n                    permissionEntity='company'\n                    redirectToNewEntityPath={this.redirectToNewEntityPath}\n                    addButtonEntityLabel='Company'\n                    tableId='allCompaniesTable'\n                    data={data}\n                />\n                <DeleteModal\n                    ref='deleteModal'\n                    deleteEntry={this.deleteCompany}\n                />\n\n                {/* <LoaderModal\n            //    show={loaderModalShow}\n        // /> */}\n            </Can>\n        );\n    }\n\n}\n\nexport default AllCompanies","import React, { Component } from 'react';\r\nimport AllCompanies from './pages/AllCompanies';\r\nimport { Redirect } from 'react-router'\r\nimport { Can } from '../../../configs/Ability-context'\r\n\r\nclass SecuredAllCompanies extends Component {\r\n    loggedIn\r\n    constructor() {\r\n        super()\r\n        this.user = localStorage.getItem('ui')\r\n        this.user ? this.loggedIn = true : this.loggedIn = false\r\n    }\r\n\r\n    render() {\r\n        if (this.loggedIn === false) {\r\n            return <Redirect to='/login' />\r\n        }\r\n        else {\r\n            return <Can I='read' a='company'><AllCompanies  {...this.props} /></Can>\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SecuredAllCompanies","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport SecuredNewCompany from './SecuredNewCompany';\r\nimport SecuredEditCompany from './SecuredEditCompany';\r\nimport SecuredAllCompanies from './SecuredAllCompanies';\r\n\r\n\r\n\r\nconst Companies = ({ allData }) => {\r\n\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/invoices/companies/new\" render={() => <SecuredNewCompany />} />\r\n            <Route path=\"/invoices/companies/edit\" render={() => <SecuredEditCompany allData={allData} />} />\r\n            <Route path=\"/invoices/companies/all\" render={(routeProps) => <SecuredAllCompanies {...routeProps} allData={allData} />} />\r\n        </Switch>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Companies","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport SecuredNewInvoice from './SecuredNewInvoice';\r\n// import SecuredViewInvoice from './SecuredViewInvoice';\r\nimport SecuredEditInvoice from './SecuredEditInvoice';\r\nimport SecuredAllInvoices from './SecuredAllInvoices';\r\nimport SecuredAllInvoiceDetails from './SecuredAllInvoiceDetails';\r\nimport Companies from './companies/Companies';\r\n\r\n\r\n\r\nconst Invoices = ({ allData }) => {\r\n\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/invoices/new\" render={() => <SecuredNewInvoice allData={allData} />} />\r\n            {/* <Route path=\"/invoices/view\" render={() => <SecuredViewInvoice allData={allData} />} /> */}\r\n            <Route path=\"/invoices/edit\" render={() => <SecuredEditInvoice allData={allData} />} />\r\n            <Route path=\"/invoices/all\" render={(routeProps) => <SecuredAllInvoices {...routeProps} allData={allData} />} />\r\n            <Route path=\"/invoices/invoice_details\" render={() => <SecuredAllInvoiceDetails allData={allData} />} />\r\n            <Route path=\"/invoices/companies\" render={(routeProps) => <Companies {...routeProps} allData={allData} />} />\r\n        </Switch>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Invoices","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport NotFound from './pages/NotFound';\r\nimport SecuredLogin from '../auth/SecuredLogin';\r\nimport Vendors from '../vendors/Vendors';\r\nimport SecuredHome from '../home/SecuredHome';\r\nimport Users from '../users/Users';\r\nimport Products from '../products/Products';\r\nimport Inventories from '../inventories/Inventories';\r\nimport Orders from '../orders/Orders';\r\nimport Invoices from '../invoices/Invoices';\r\n\r\n\r\n\r\nclass AllRoutes extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        let { allData, changeUser } = this.props\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{}} className=\"container-fluid\">\r\n                    <Switch>\r\n                        <Route exact path=\"/\" render={(routeProps) => <SecuredLogin {...routeProps} changeUser={changeUser} />} />\r\n                        <Route exact path=\"/login\" render={(routeProps) => <SecuredLogin {...routeProps} changeUser={changeUser} />} />\r\n                        <Route path=\"/home\" render={(routeProps) => <SecuredHome {...routeProps} allData={allData} />} />\r\n                        <Route path=\"/vendors\" render={(routeProps) => <Vendors {...routeProps} allData={allData} />} />\r\n                        <Route path=\"/users\" render={(routeProps) => <Users {...routeProps} allData={allData} />} />\r\n                        <Route path=\"/products\" render={(routeProps) => <Products {...routeProps} allData={allData} />} />\r\n                        <Route path=\"/inventories\" render={(routeProps) => <Inventories {...routeProps} allData={allData} />} />\r\n                        <Route path=\"/orders\" render={(routeProps) => <Orders {...routeProps} allData={allData} />} />\r\n                        <Route path=\"/invoices\" render={(routeProps) => <Invoices {...routeProps} allData={allData} />} />\r\n                        <Route render={() => <NotFound />} />\r\n                    </Switch>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AllRoutes","import React, { Component } from \"react\";\r\nimport {\r\n    MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse\r\n} from \"mdbreact\";\r\n\r\nclass NavBar extends Component {\r\n    state = {\r\n        isOpen: false\r\n    };\r\n\r\n    toggleCollapse = () => {\r\n        this.props.loggedIn ?\r\n            this.props.toggleSidebar()\r\n            :\r\n            this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n\r\n    activeClassToggeler = (e) => {\r\n        let elems = document.querySelector('.active')\r\n        elems && elems.classList.remove('active')\r\n        e.target.classList.add('active')\r\n    }\r\n\r\n    render() {\r\n        let { loggedIn } = this.props\r\n        let navBarNavStyle = { fontWeight: '800', textTransform: '' }\r\n\r\n        return (\r\n            <MDBNavbar transparent expand=\"sm\" style={{ boxShadow: 'none' }} className='m-0 p-0'>\r\n\r\n                <MDBNavbarBrand className='logoHome my-0 p-0'  >\r\n                    <img src=\"/logo_homepage.png\" width=\"224\" height=\"84\" alt=\"bucket_ERP\" />\r\n                </MDBNavbarBrand>\r\n\r\n                {/* {loggedIn ? */}\r\n                <MDBNavbarToggler id='navbarToggler' className='navbar-light mt-5 p-1 mr-4 ml-2' style={{ border: '1px solid #112648' }} onClick={this.toggleCollapse} />\r\n                {!loggedIn ?\r\n                    <>\r\n                        <MDBCollapse isOpen={this.state.isOpen} navbar>\r\n\r\n                            <MDBNavbarNav right style={navBarNavStyle} className='navBar row p-0' onClick={this.activeClassToggeler}>\r\n                                {/* <MDBNavItem>\r\n                                    <MDBNavLink className='hoverGreen activeBlue' to=\"/home\">Home</MDBNavLink>\r\n                                </MDBNavItem> */}\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink className='hoverGreen activeBlue' to=\"/login\">Sign In</MDBNavLink>\r\n                                </MDBNavItem>\r\n                                <MDBNavItem>\r\n                                    {/* {loggedIn ? */}\r\n                                    {/* <MDBNavLink className='colorGreen hoverBlue activeGreen' to=\"/login\" onClick={() => this.props.loggingOut()}>\r\n                                            LogOut\r\n                                        </MDBNavLink> */}\r\n                                    {/* : */}\r\n                                    <MDBNavLink className='colorGreen hoverBlue activeGreen' to=\"/vendors/signup\">\r\n                                        Become Seller <b className='colorBlue'>...</b>\r\n                                    </MDBNavLink>\r\n                                    {/* } */}\r\n                                </MDBNavItem>\r\n                            </MDBNavbarNav>\r\n                        </MDBCollapse>\r\n                    </>\r\n                    : null}\r\n            </MDBNavbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Can } from '../../../configs/Ability-context'\r\n// import { MDBNavItem, MDBDropdown, MDBDropdownItem, MDBdropdownItem, MDBDropdownToggle, MDBIcon, MDBNavLink } from 'mdbreact'\r\n\r\n\r\nclass ReactSideBar extends Component {\r\n    _isMounted = false\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    activeClassToggeler = (e) => {\r\n        let elems = document.querySelector('.active')\r\n        elems && elems.classList.remove('active')\r\n        e.target.classList.add('active')\r\n    }\r\n\r\n    handleDropDownMenus = (e) => {\r\n        let dropdownMenus = document.getElementsByClassName(\"dropdownMenu\"),\r\n            listElement = e.target.closest('li'),\r\n            dropDown = e.target.closest('.dropdownMenu')\r\n        for (let i = 0; i < dropdownMenus.length; i++) {\r\n            if (listElement.childElementCount > 1) {\r\n                if (dropdownMenus[i] === dropDown) {\r\n                    //toggle selected dropdown items\r\n                    for (let j = 1; j < listElement.childNodes.length; j++) {\r\n                        ((listElement.childNodes[j].style.display === 'block') || (listElement.childNodes[j].style.display === '')) ?\r\n                            (listElement.childNodes[j].style.display = 'none') :\r\n                            (listElement.childNodes[j].style.display = 'block')\r\n                    }\r\n                }\r\n                else {\r\n                    //hide all other dropdown items\r\n                    dropdownMenus[i].nextElementSibling.style.display = 'none'\r\n                    dropdownMenus[i].nextElementSibling.nextElementSibling && (dropdownMenus[i].nextElementSibling.nextElementSibling.style.display = 'none')\r\n                }\r\n            }\r\n            else {\r\n                //hide all other dropdown items if clicked on non-dropdown item\r\n                dropdownMenus[i].nextElementSibling.style.display = 'none'\r\n                dropdownMenus[i].nextElementSibling.nextElementSibling && (dropdownMenus[i].nextElementSibling.nextElementSibling.style.display = 'none')\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        let dropdownMenus = document.getElementsByClassName(\"dropdownMenu\"), { loggedIn } = this.props,\r\n            homeLink = document.getElementById('sidebarHomeLink')\r\n        homeLink && homeLink.classList.add('active')\r\n        for (let i = 0; i < dropdownMenus.length; i++) {\r\n            //hide all open dropdown items when user logged-in\r\n            dropdownMenus[i] && (dropdownMenus[i].nextElementSibling) && (dropdownMenus[i].nextElementSibling.style.display = 'none')\r\n            dropdownMenus[i] && dropdownMenus[i].nextElementSibling && dropdownMenus[i].nextElementSibling.nextElementSibling &&\r\n                (dropdownMenus[i].nextElementSibling.nextElementSibling.style.display = 'none')\r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n                <div className='col text-center mt-5 mb-4 mx-0 p-0'>\r\n                    <h2 className='m-0 p-0 sidebarHeading'>Dashboard</h2>\r\n                </div>\r\n                <div className='text-white sidebar'>\r\n\r\n                    <li className='mb-3'>\r\n                        <div className='row m-0 p-0 align-items-center'>\r\n                            <div className='col-xl-4 col-lg-4'>\r\n                                <i className='flaticon-home' />\r\n                            </div>\r\n                            <div className='col-xl-8 col-lg-8 text-left' >\r\n                                <Link id='sidebarHomeLink' to=\"/home\" onClick={this.activeClassToggeler, this.handleDropDownMenus, this.handleDropDownMenus}>Home</Link>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    <li className='mb-3'>\r\n                        <div className='row m-0 p-0 align-items-center dropdownMenu' onClick={this.activeClassToggeler, this.handleDropDownMenus}>\r\n\r\n                            <Can I='read' a='user'>\r\n                                <div className='col-xl-4 col-lg-4'>\r\n                                    <i className='flaticon-multiple-users-silhouette' />\r\n                                </div>\r\n                                <div className='col-xl-8 col-lg-8 text-left'>\r\n                                    <Link to=\"/users/all\" >Users</Link>\r\n                                </div>\r\n                            </Can>\r\n\r\n                        </div>\r\n\r\n                        <Can I='read' a='role'>\r\n                            <div style={{ display: 'none' }} className='row m-0 p-0 dropdownItem'>\r\n                                <div className='col-xl-8 col-lg-7 offset-xl-4 offset-lg-5 pl-4 mr-0 pr-0' >\r\n                                    <Link to=\"/users/roles/all\" style={{ fontSize: '1.2vw' }}>Roles</Link>\r\n                                </div>\r\n                            </div>\r\n                        </Can>\r\n\r\n                    </li>\r\n                    <li className='mb-3'>\r\n                        <div className='row m-0 p-0 align-items-center dropdownMenu' onClick={this.activeClassToggeler, this.handleDropDownMenus}>\r\n\r\n                            <Can I='read' a='product'>\r\n                                <div className='col-xl-4 col-lg-4'>\r\n                                    <i className='flaticon-product' />\r\n                                </div>\r\n                                <div className='col-xl-8 col-lg-8 text-left' >\r\n                                    <Link to=\"/products/all\">Products</Link>\r\n                                </div>\r\n                            </Can>\r\n\r\n                        </div>\r\n\r\n                        <Can I='read' a='productCategory'>\r\n                            <div style={{ display: 'none' }} className='row m-0 p-0 dropdownItem'>\r\n                                <div className='col-xl-6 col-lg-6 col-md-6 offset-xl-5 offset-lg-5 offset-md-2 pl-2 mr-0 pr-0' >\r\n                                    <Link to=\"/products/categories/all\" style={{ fontSize: '1.2vw' }}>Categories</Link>\r\n                                </div>\r\n                            </div>\r\n                        </Can>\r\n\r\n                    </li>\r\n                    <Can I='read' a='inventories'>\r\n                        <li className='mb-3'>\r\n                            <div className='row m-0 p-0 align-items-center' onClick={this.activeClassToggeler, this.handleDropDownMenus}>\r\n                                <div className='col-xl-4 col-lg-4'>\r\n                                    <i className='flaticon-storage' />\r\n                                </div>\r\n                                <div className='col-xl-8 col-lg-8 text-left' >\r\n                                    <Link to=\"/inventories/all\" >Inventory</Link>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    </Can>\r\n\r\n                    <li className='mb-3'>\r\n                        <div className='row m-0 p-0 align-items-center dropdownMenu' onClick={this.activeClassToggeler, this.handleDropDownMenus}>\r\n\r\n                            <Can I='read' a='order'>\r\n                                <div className='col-xl-4 col-lg-4'>\r\n                                    <i className='flaticon-box font-weight-bold' />\r\n                                </div>\r\n                                <div className='col-xl-8 col-lg-8 text-left' >\r\n                                    <Link to=\"/orders/all\">Orders</Link>\r\n                                </div>\r\n                            </Can>\r\n\r\n                        </div>\r\n\r\n                        <Can I='read' a='orderDetail'>\r\n                            <div style={{ display: 'none' }} className='row m-0 p-0 dropdownItem'>\r\n                                <div className='col-xl-8 col-lg-8 offset-xl-4 offset-lg-4 pl-4 mr-0 pr-0' >\r\n                                    <Link to=\"/orders/order_details\" style={{ fontSize: '0.8vw' }} >Order-Details</Link>\r\n                                </div>\r\n                            </div>\r\n                        </Can>\r\n\r\n                    </li>\r\n                    <Can I='read' a='vendor'>\r\n                        <li className='mb-3'>\r\n                            <div className='row m-0 p-0 align-items-center' onClick={this.activeClassToggeler, this.handleDropDownMenus}    >\r\n                                <div className='col-xl-4 col-lg-4'>\r\n                                    <i className='flaticon-vendor' />\r\n                                </div>\r\n                                <div className='col-xl-8 col-lg-8 text-left' >\r\n                                    <Link to=\"/vendors/all\" >Vendors</Link>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    </Can>\r\n                    <li className='mb-3'>\r\n                        <div className='row m-0 p-0 align-items-center dropdownMenu' onClick={this.activeClassToggeler, this.handleDropDownMenus}>\r\n\r\n                            <Can I='read' a='invoice'>\r\n                                <div className='col-xl-4 col-lg-4'>\r\n                                    <i className='fas fa-file-invoice pl-1 text-white' />\r\n                                </div>\r\n                                <div className='col-xl-8 col-lg-8 text-left' >\r\n                                    <Link to=\"/invoices/all\">Invoices</Link>\r\n                                </div>\r\n                            </Can>\r\n\r\n                        </div>\r\n\r\n                        <Can I='read' a='invoiceDetail'>\r\n                            <div style={{ display: 'none' }} className='row m-0 p-0 dropdownItem'>\r\n                                <div className='col-xl-8 col-lg-8 offset-xl-4 offset-lg-4 pl-4 mr-0 pr-0' >\r\n                                    <Link to=\"/invoices/invoice_details\" style={{ fontSize: '0.8vw' }} >Invoice-Details</Link>\r\n                                </div>\r\n                            </div>\r\n                        </Can>\r\n                        <Can I='read' a='company'>\r\n                            <div style={{ display: 'none' }} className='row m-0 p-0 dropdownItem'>\r\n                                <div className='col-xl-8 col-lg-8 offset-xl-4 offset-lg-4 pl-4 mr-0 pr-0' >\r\n                                    <Link to=\"/invoices/companies/all\" style={{ fontSize: '0.8vw' }} >Companies</Link>\r\n                                </div>\r\n                            </div>\r\n                        </Can>\r\n\r\n                    </li>\r\n                    {loggedIn ?\r\n                        <li className='mb-3'>\r\n                            <div className='row m-0 p-0 align-items-center'>\r\n                                <div className='col-xl-4 col-lg-4'>\r\n                                    <i className='flaticon-logout' />\r\n                                </div>\r\n                                <div className='col-xl-8 col-lg-8 text-left' >\r\n                                    <Link to=\"/login\" onClick={() => this.props.loggingOut()}>Sign Out</Link>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                        : null}\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ReactSideBar","/* eslint-disable no-unused-expressions */\r\nimport React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Redirect } from 'react-router-dom';\r\nimport { AbilityContext } from \"./configs/Ability-context\";\r\nimport defineRulesFor from \"./configs/Ability\";\r\nimport { Ability } from \"@casl/ability\";\r\nimport AllRoutes from './components/misc/AllRoutes'\r\nimport NavBar from './components/misc/sections/NavBar'\r\nimport ReactSideBar from './components/misc/components/ReactSideBar';\r\n\r\n\r\nconst ability = new Ability();\r\n\r\nclass App extends React.Component {\r\n  _isMounted = false\r\n  constructor(props) {\r\n\r\n    super(props);\r\n    this._isMounted = true\r\n    this.state = {\r\n      user: '',\r\n      loggedIn: '',\r\n      allRoles: [],\r\n      allPermissions: [],\r\n      allRolePermissions: [],\r\n      allUsers: [],\r\n      allProductCategories: [],\r\n      allBrands: [],\r\n      allProducts: [],\r\n      allInventories: [],\r\n      allInventoryHistories: [],\r\n      allOrders: [],\r\n      allOrderDetails: [],\r\n      allInvoices: [],\r\n      allInvoiceDetails: [],\r\n      allCompanies: [],\r\n    }\r\n\r\n    let paths = [\r\n      '/getAllRoles',\r\n      '/isAuth',\r\n      '/getAllPermissions',\r\n      '/getAllRolesPermissions',\r\n      '/getAllUsers',\r\n      '/getAllProductCategories',\r\n      '/getAllBrands',\r\n      '/getAllProducts',\r\n      '/getAllInventories',\r\n      '/getAllInventoryHistories',\r\n      '/getAllOrders',\r\n      '/getAllOrderDetails',\r\n      '/getAllInvoices',\r\n      '/getAllInvoiceDetails',\r\n      '/getAllCompanies',\r\n    ]\r\n    let dataRequests = paths.map(path => fetch(path))\r\n    Promise.all(dataRequests)\r\n      .then(responses => {\r\n        Promise.all(responses.map(res => res.json()))\r\n          .then(jsons => {\r\n            // console.log(jsons[0]);\r\n            let user = jsons[1].user;\r\n            if (this._isMounted) {\r\n              this.setState({\r\n                user: user,\r\n                loggedIn: jsons[1].loggedIn,\r\n                allRoles: jsons[0].data,\r\n                allPermissions: jsons[2].data,\r\n                allRolePermissions: jsons[3].data,\r\n                allUsers: jsons[4].data,\r\n                allProductCategories: jsons[5].data,\r\n                allBrands: jsons[6].data,\r\n                allProducts: jsons[7].data,\r\n                allInventories: jsons[8].data,\r\n                allInventoryHistories: jsons[9].data,\r\n                allOrders: jsons[10].data,\r\n                allOrderDetails: jsons[11].data,\r\n                allInvoices: jsons[12].data,\r\n                allInvoiceDetails: jsons[13].data,\r\n                allCompanies: jsons[14].data,\r\n              },\r\n                function () {\r\n                  if (jsons[1].loggedIn === false) {\r\n                    let sidebar = document.getElementById('sidebar'), main = document.getElementById('main')\r\n                    sidebar.style.width = '0%'\r\n                    main.style.width = '100%'\r\n                    main.style.marginLeft = '0px'\r\n                    if (localStorage.getItem('ui') || localStorage.getItem('uri')) {\r\n                      localStorage.removeItem('ui')\r\n                      localStorage.removeItem('uri')\r\n                    }\r\n                  }\r\n                  if (user !== undefined && user !== null) {\r\n                    localStorage.setItem('ui', JSON.stringify(user.id))\r\n                    localStorage.setItem('uri', JSON.stringify(user.role_id))\r\n                    this.changeUser(user);\r\n                  }\r\n                }\r\n              )\r\n            }\r\n          })\r\n      })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false\r\n  }\r\n\r\n  loggingOut = () => {\r\n    fetch('/logout')\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        // console.log(json)\r\n        this.setState({\r\n          loggedIn: false,\r\n        }, function () {\r\n          localStorage.removeItem('ui')\r\n          localStorage.removeItem('uri')\r\n          let main = document.getElementById('main'), sidebar = document.getElementById('sidebar')\r\n          sidebar.style.width = ' 0%'\r\n          main.style.width = '100%'\r\n          main.style.marginLeft = '0px'\r\n        })\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  changeUser = (user) => {\r\n    let userRole, { allRoles, loggedIn } = this.state\r\n    allRoles &&\r\n      allRoles.forEach(role => {\r\n        if (role.id === user.role_id) {\r\n          userRole = role.name\r\n        }\r\n      });\r\n    const rules = defineRulesFor(userRole);\r\n    ability.update(rules);\r\n\r\n    if (!loggedIn) {\r\n      // console.log('changing state');\r\n      this.setState({ loggedIn: true })\r\n    }\r\n  }\r\n\r\n  toggleSidebar = () => {\r\n    let a = document.getElementById('navbarToggler')\r\n    a.classList.contains('mt-5') ?\r\n      (a.classList.remove('mt-5', 'ml-2'), a.classList.add('mt-3', 'ml-3')) :\r\n      (a.classList.remove('mt-3', 'ml-3'), a.classList.add('mt-5', 'ml-2'))\r\n    let sidebar = document.getElementById('sidebar'), main = document.getElementById('main')\r\n    sidebar.style.width !== '12%' ? sidebar.style.width = '12%' : sidebar.style.width = '0%'\r\n    main.style.width !== '88%' ? main.style.width = '88%' : main.style.width = '100%'\r\n    main.style.marginLeft !== '12%' ? main.style.marginLeft = '12%' : main.style.marginLeft = '0px'\r\n  }\r\n\r\n\r\n  render() {\r\n    let {\r\n      loggedIn, user, allRoles, allPermissions, allRolePermissions, allUsers, allProductCategories, allBrands, allProducts, allInventories,\r\n      allInventoryHistories, allOrders, allOrderDetails, allInvoices, allInvoiceDetails, allCompanies\r\n    } = this.state\r\n\r\n    let allData = {\r\n      user: user, allRoles: allRoles, allPermissions: allPermissions, allRolePermissions: allRolePermissions, allUsers: allUsers,\r\n      allProductCategories: allProductCategories, allBrands: allBrands, allProducts: allProducts, allInventories: allInventories,\r\n      allInventoryHistories: allInventoryHistories, allOrders: allOrders, allOrderDetails: allOrderDetails, allInvoices: allInvoices,\r\n      allInvoiceDetails: allInvoiceDetails,allCompanies:allCompanies\r\n    }\r\n    // console.log(allData);\r\n\r\n\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <AbilityContext.Provider value={ability}>\r\n          {loggedIn === false && <Redirect to='/login' />}\r\n          <div className='row m-0 p-0'>\r\n            <div\r\n              // className={loggedIn ? 'backGround-blue col-xl-2 col-lg-2 col-md-3 col-sm-4 col-xs-4' : 'd-none'}\r\n              id='sidebar'\r\n              className='printHide'\r\n            >\r\n              <ReactSideBar\r\n                loggingOut={this.loggingOut}\r\n                loggedIn={loggedIn} />\r\n            </div>\r\n            <div\r\n              id='main'\r\n            // className={loggedIn ? 'col-xl-10 col-lg-10 col-md-9 col-sm-8 col-xs-8' : 'col-12'}\r\n            >\r\n              <NavBar\r\n                // loggingOut={this.loggingOut}\r\n                toggleSidebar={this.toggleSidebar}\r\n                loggedIn={loggedIn}\r\n              />\r\n              <AllRoutes\r\n                changeUser={this.changeUser}\r\n                allData={allData}\r\n              />\r\n            </div>\r\n          </div >\r\n        </AbilityContext.Provider>\r\n      </BrowserRouter >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ErrorBoundary from './components/misc/pages/ErrorBoundary'\n\nReactDOM.render(<ErrorBoundary><App /></ErrorBoundary>, document.getElementById('root'));\nserviceWorker.unregister();\nmodule.hot && module.hot.accept()\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}